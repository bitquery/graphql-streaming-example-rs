schema {
  query: RootQuery
  subscription: RootSubscription
}

"""Type of algorithm to Filter block updates, default is tree"""
enum blocks_query_arg_enum {
  """Blocks from the current head and down the reorg tree"""
  trunk

  """WasOnBranch blocks on the branches of the reorg tree"""
  branches

  """All blocks ( trunk and uncles ) of the reorg tree"""
  tree
}

"""Type of algorithm to Filter block updates, default is all"""
enum blocks_update_arg_enum {
  """
  Blocks added as uncles to the branches of the reorg tree, duplicates possible
  due to reorg. Can be used together with head_updates.
  """
  branches_updates

  """Blocks added to the head of the reorgtree, no duplicates"""
  head

  """
  Blocks added to the head of the reorg tree and all uncle added on branches, no duplicates
  """
  all

  """
  Blocks added to the head of the reorg tree, duplicates possible due to reorg. Can be used together with uncles_updates.
  """
  head_updates
}

"""
Data set type selection ( realtime, archive or combined ), default is realtime
"""
enum dataset_arg_enum {
  """Combined dataset ( realtime and archive )"""
  combined

  """realtime dataset containing last set of blocks"""
  realtime

  """archive dataset with blocks delayed ( only trunk blocks included )"""
  archive
}

"""
The `DateTime` scalar type represents a DateTime. The DateTime is serialized as an RFC 3339 quoted string
"""
scalar DateTime

"""EVM type blockchain schema"""
type EVM {
  BalanceUpdates(
    """Conditions on query to filter results"""
    where: EVM_BalanceUpdate_Filter

    """Field ordering"""
    orderBy: [EVM_BalanceUpdate_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_BalanceUpdate_LimitBy

    """Response limits"""
    limit: EVM_BalanceUpdate_Limit
  ): [EVM_BalanceUpdate_Cube!]
  Blocks(
    """Conditions on query to filter results"""
    where: EVM_Block_Filter

    """Field ordering"""
    orderBy: [EVM_Block_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_Block_LimitBy

    """Response limits"""
    limit: EVM_Block_Limit
  ): [EVM_Block_Cube!]
  Calls(
    """Response limits"""
    limit: EVM_Call_Limit

    """Conditions on query to filter results"""
    where: EVM_Call_Filter

    """Field ordering"""
    orderBy: [EVM_Call_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_Call_LimitBy
  ): [EVM_Call_Cube!]
  DEXTradeByTokens(
    """Conditions on query to filter results"""
    where: EVM_DEXTradeByToken_Filter

    """Field ordering"""
    orderBy: [EVM_DEXTradeByToken_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_DEXTradeByToken_LimitBy

    """Response limits"""
    limit: EVM_DEXTradeByToken_Limit
  ): [EVM_DEXTradeByToken_Cube!]
  DEXTrades(
    """Response limits"""
    limit: EVM_DEXTrade_Limit

    """Conditions on query to filter results"""
    where: EVM_DEXTrade_Filter

    """Field ordering"""
    orderBy: [EVM_DEXTrade_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_DEXTrade_LimitBy
  ): [EVM_DEXTrade_Cube!]
  Events(
    """Conditions on query to filter results"""
    where: EVM_Event_Filter

    """Field ordering"""
    orderBy: [EVM_Event_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_Event_LimitBy

    """Response limits"""
    limit: EVM_Event_Limit
  ): [EVM_Event_Cube!]
  MinerRewards(
    """Response limits by specified field"""
    limitBy: EVM_MinerReward_LimitBy

    """Response limits"""
    limit: EVM_MinerReward_Limit

    """Conditions on query to filter results"""
    where: EVM_MinerReward_Filter

    """Field ordering"""
    orderBy: [EVM_MinerReward_Ordering!]
  ): [EVM_MinerReward_Cube!]
  TokenHolders(
    """Response limits"""
    limit: EVM_TokenHolder_Limit

    """Parameter date used in cube, required to query the data"""
    date: String!

    """Parameter tokenSmartContract used in cube, required to query the data"""
    tokenSmartContract: String!

    """Conditions on query to filter results"""
    where: EVM_TokenHolder_Filter

    """Field ordering"""
    orderBy: [EVM_TokenHolder_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_TokenHolder_LimitBy
  ): [EVM_TokenHolder_Cube!]
  Transactions(
    """Conditions on query to filter results"""
    where: EVM_Transaction_Filter

    """Field ordering"""
    orderBy: [EVM_Transaction_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_Transaction_LimitBy

    """Response limits"""
    limit: EVM_Transaction_Limit
  ): [EVM_Transaction_Cube!]
  Transfers(
    """Response limits"""
    limit: EVM_Transfer_Limit

    """Conditions on query to filter results"""
    where: EVM_Transfer_Filter

    """Field ordering"""
    orderBy: [EVM_Transfer_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_Transfer_LimitBy
  ): [EVM_Transfer_Cube!]
  Uncles(
    """Conditions on query to filter results"""
    where: EVM_Uncle_Filter

    """Field ordering"""
    orderBy: [EVM_Uncle_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_Uncle_LimitBy

    """Response limits"""
    limit: EVM_Uncle_Limit
  ): [EVM_Uncle_Cube!]
}

type EVM_ABI_Address_Value_Arg {
  address: String
}

type EVM_ABI_BigInt_Value_Arg {
  bigInteger: String
}

type EVM_ABI_Boolean_Value_Arg {
  bool: Boolean
}

type EVM_ABI_Bytes_Value_Arg {
  hex: String
}

type EVM_ABI_Integer_Value_Arg {
  integer: Int
}

type EVM_ABI_String_Value_Arg {
  string: String
}

"""Union Type for argument values"""
union EVM_ABI_Value_Union = EVM_ABI_Integer_Value_Arg | EVM_ABI_String_Value_Arg | EVM_ABI_Address_Value_Arg | EVM_ABI_BigInt_Value_Arg | EVM_ABI_Bytes_Value_Arg | EVM_ABI_Boolean_Value_Arg

"""Amount with decimals"""
input EVM_Amount_With_Decimals {
  """Greater or equal the amount"""
  gt: String

  """Less or equal the amount"""
  lt: String

  """Equal to amount"""
  eq: String

  """Not equal to amount"""
  ne: String

  """Greater than the amount"""
  ge: String

  """Less than the amount"""
  le: String
}

"""Listed names of comparable fields in a cube"""
enum EVM_BalanceUpdate_CompareFields {
  BalanceUpdate_Amount
  Currency_Decimals
  Transaction_Index
  Currency_HasURI
  Call_Index
  Transaction_Time
  Block_Number
  Log_LogAfterCallIndex
  BalanceUpdate_AmountInUSD
  Uncle_Index
  Uncle_Block_Number
  Currency_Delegated
  BalanceUpdate_Id
  Block_Date
  Currency_Native
  Currency_Fungible
  Block_Time
  Log_Index
  ChainId
}

"""Update of balances for tokens and native currency in EVM Blockchain"""
type EVM_BalanceUpdate_Cube {
  """BalanceUpdate fields"""
  BalanceUpdate: EVM_BalanceUpdate_Fields_BalanceUpdate

  """Block fields"""
  Block: EVM_BalanceUpdate_Fields_Block

  """Call fields"""
  Call: EVM_BalanceUpdate_Fields_Call

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Currency fields"""
  Currency: EVM_BalanceUpdate_Fields_Currency

  """Log fields"""
  Log: EVM_BalanceUpdate_Fields_Log

  """Transaction fields"""
  Transaction: EVM_BalanceUpdate_Fields_Transaction

  """Uncle fields"""
  Uncle: EVM_BalanceUpdate_Fields_Uncle

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: EVM_BalanceUpdate_StringFields!

    """Side2 argument"""
    side2: EVM_BalanceUpdate_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_BalanceUpdate_NumFields
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_BalanceUpdate_NumFields
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [EVM_BalanceUpdate_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: EVM_BalanceUpdate_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_BalanceUpdate_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_BalanceUpdate_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: EVM_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_BalanceUpdate_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """Argument for Kurtosis for a set of values"""
    of: EVM_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: EVM_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: EVM_BalanceUpdate_NumFields!
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """Argument for quantile"""
    of: EVM_BalanceUpdate_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_BalanceUpdate_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: EVM_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_BalanceUpdate_NumFields!
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_BalanceUpdate_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_BalanceUpdate_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [EVM_BalanceUpdate_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum EVM_BalanceUpdate_EnumFields {
  Uncle_Index
  Currency_HasURI
  Block_Date
  Uncle_Block_Hash
  Block_L1_ParentHash
  Currency_Symbol
  Log_Index
  Currency_DelegatedTo
  BalanceUpdate_Address
  Block_Hash
  Currency_Decimals
  BalanceUpdate_URI
  BalanceUpdate_Id
  Transaction_Time
  Currency_Native
  Block_Time
  Currency_Name
  Call_Index
  ChainId
  Block_L1_Hash
  Block_ParentHash
  Currency_Fungible
  Call_CallPath
  Transaction_Hash
  Transaction_Index
  Currency_Delegated
  Uncle_Block_Number
  Block_Number
  Log_LogAfterCallIndex
  BalanceUpdate_AmountInUSD
  Currency_ProtocolName
  Currency_SmartContract
  BalanceUpdate_Type
  BalanceUpdate_Amount
}

"""BalanceUpdate fields"""
type EVM_BalanceUpdate_Fields_BalanceUpdate {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Amount value"""
  Amount(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Id value"""
  Id(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type
  ): EVM_BalanceUpdate_Fields_BalanceUpdate_BalanceUpdate_Type_Output

  """URI value"""
  URI(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Enumeration for BalanceUpdate_Type"""
enum EVM_BalanceUpdate_Fields_BalanceUpdate_BalanceUpdate_Type_Output {
  """BalanceUpdate_Type fee"""
  fee

  """BalanceUpdate_Type block_reward"""
  block_reward

  """BalanceUpdate_Type uncle_reward"""
  uncle_reward

  """BalanceUpdate_Type genesis"""
  genesis

  """BalanceUpdate_Type other"""
  other

  """BalanceUpdate_Type transfer"""
  transfer
}

"""Select filters for BalanceUpdate_Type"""
input EVM_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type {
  """One of the values"""
  in: [EVM_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type_Input!]

  """Not one of the values"""
  notIn: [EVM_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type_Input!]

  """Exact match"""
  is: EVM_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type_Input

  """Not this"""
  not: EVM_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type_Input
}

"""Enumeration for BalanceUpdate_Type"""
enum EVM_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type_Input {
  """BalanceUpdate_Type fee"""
  fee

  """BalanceUpdate_Type block_reward"""
  block_reward

  """BalanceUpdate_Type uncle_reward"""
  uncle_reward

  """BalanceUpdate_Type genesis"""
  genesis

  """BalanceUpdate_Type other"""
  other

  """BalanceUpdate_Type transfer"""
  transfer
}

"""Block fields"""
type EVM_BalanceUpdate_Fields_Block {
  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields
  ): String

  """L1 fields"""
  L1: EVM_BalanceUpdate_Fields_Block_L1

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime
}

"""L1 fields"""
type EVM_BalanceUpdate_Fields_Block_L1 {
  """Hash value"""
  Hash(
    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Call fields"""
type EVM_BalanceUpdate_Fields_Call {
  """CallPath value"""
  CallPath(
    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_BalanceUpdate_Fields_Call_CallPath_Select_Call_CallPath

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields
  ): [Int]

  """Index value"""
  Index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields
  ): Int
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_BalanceUpdate_Fields_Call_CallPath_Select_Call_CallPath {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]
}

"""Currency fields"""
type EVM_BalanceUpdate_Fields_Currency {
  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Delegated value"""
  Delegated(
    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): String

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Name value"""
  Name(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields
  ): String

  """Native value"""
  Native(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """ProtocolName value"""
  ProtocolName(
    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): String
}

"""Log fields"""
type EVM_BalanceUpdate_Fields_Log {
  """Index value"""
  Index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields
  ): Int

  """LogAfterCallIndex value"""
  LogAfterCallIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Transaction fields"""
type EVM_BalanceUpdate_Fields_Transaction {
  """Hash value"""
  Hash(
    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): String

  """Index value"""
  Index(
    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime
}

"""Uncle fields"""
type EVM_BalanceUpdate_Fields_Uncle {
  """Block fields"""
  Block: EVM_BalanceUpdate_Fields_Uncle_Block

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Block fields"""
type EVM_BalanceUpdate_Fields_Uncle_Block {
  """Hash value"""
  Hash(
    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields
  ): String

  """Number value"""
  Number(
    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields
  ): String
}

input EVM_BalanceUpdate_Filter {
  """Any combination ( as OR ) of supplied conditions"""
  any: [EVM_BalanceUpdate_FilterAny!]

  """Select by Call"""
  Call: EVM_BalanceUpdate_Input_Call_InputType

  """Select by Block"""
  Block: EVM_BalanceUpdate_Input_Block_InputType

  """Select by Transaction"""
  Transaction: EVM_BalanceUpdate_Input_Transaction_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Uncle"""
  Uncle: EVM_BalanceUpdate_Input_Uncle_InputType

  """Select by Currency"""
  Currency: EVM_BalanceUpdate_Input_Currency_InputType

  """Select by Log"""
  Log: EVM_BalanceUpdate_Input_Log_InputType

  """Select by BalanceUpdate"""
  BalanceUpdate: EVM_BalanceUpdate_Input_BalanceUpdate_InputType
}

input EVM_BalanceUpdate_FilterAny {
  """Select by Block"""
  Block: EVM_BalanceUpdate_Input_Block_InputType

  """Select by Uncle"""
  Uncle: EVM_BalanceUpdate_Input_Uncle_InputType

  """Select by Currency"""
  Currency: EVM_BalanceUpdate_Input_Currency_InputType

  """Select by Transaction"""
  Transaction: EVM_BalanceUpdate_Input_Transaction_InputType

  """Select by BalanceUpdate"""
  BalanceUpdate: EVM_BalanceUpdate_Input_BalanceUpdate_InputType

  """Select by Log"""
  Log: EVM_BalanceUpdate_Input_Log_InputType

  """Select by Call"""
  Call: EVM_BalanceUpdate_Input_Call_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger
}

"""Select by BalanceUpdate"""
input EVM_BalanceUpdate_Input_BalanceUpdate_InputType {
  Amount: EVM_Amount_With_Decimals
  AmountInUSD: EVM_Amount_With_Decimals
  Type: EVM_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type
  Id: OLAP_BigInteger
  URI: OLAP_String
  Address: OLAP_String
}

"""Select filters for BalanceUpdate_Type"""
input EVM_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type {
  """One of the values"""
  in: [EVM_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type_Input!]

  """Not one of the values"""
  notIn: [EVM_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type_Input!]

  """Exact match"""
  is: EVM_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type_Input

  """Not this"""
  not: EVM_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type_Input
}

"""Enumeration for BalanceUpdate_Type"""
enum EVM_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type_Input {
  """BalanceUpdate_Type fee"""
  fee

  """BalanceUpdate_Type block_reward"""
  block_reward

  """BalanceUpdate_Type uncle_reward"""
  uncle_reward

  """BalanceUpdate_Type genesis"""
  genesis

  """BalanceUpdate_Type other"""
  other

  """BalanceUpdate_Type transfer"""
  transfer
}

"""Select by Block"""
input EVM_BalanceUpdate_Input_Block_InputType {
  Hash: OLAP_String
  Date: OLAP_Date
  Time: OLAP_DateTime
  Number: OLAP_BigInteger
  ParentHash: OLAP_String
  L1: EVM_BalanceUpdate_Input_Block_L1_InputType
}

"""Select by L1"""
input EVM_BalanceUpdate_Input_Block_L1_InputType {
  ParentHash: OLAP_String
  Hash: OLAP_String
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_BalanceUpdate_Input_Call_CallPath_Input_Call_CallPath {
  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer
}

"""Select by Call"""
input EVM_BalanceUpdate_Input_Call_InputType {
  CallPath: EVM_BalanceUpdate_Input_Call_CallPath_Input_Call_CallPath
  Index: OLAP_Integer
}

"""Select by Currency"""
input EVM_BalanceUpdate_Input_Currency_InputType {
  HasURI: Boolean
  Decimals: OLAP_Integer
  Symbol: OLAP_String
  Delegated: Boolean
  SmartContract: OLAP_String
  DelegatedTo: OLAP_String
  Fungible: Boolean
  Name: OLAP_String
  Native: Boolean
  ProtocolName: OLAP_String
}

"""Select by Log"""
input EVM_BalanceUpdate_Input_Log_InputType {
  Index: OLAP_Integer
  LogAfterCallIndex: OLAP_Integer
}

"""Select by Transaction"""
input EVM_BalanceUpdate_Input_Transaction_InputType {
  Hash: OLAP_String
  Time: OLAP_DateTime
  Index: OLAP_BigInteger
}

"""Select by Block"""
input EVM_BalanceUpdate_Input_Uncle_Block_InputType {
  Hash: OLAP_String
  Number: OLAP_BigInteger
}

"""Select by Uncle"""
input EVM_BalanceUpdate_Input_Uncle_InputType {
  Block: EVM_BalanceUpdate_Input_Uncle_Block_InputType
  Index: OLAP_Integer
}

"""Limit definition"""
input EVM_BalanceUpdate_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input EVM_BalanceUpdate_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_BalanceUpdate_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum EVM_BalanceUpdate_NumFields {
  BalanceUpdate_Id
  Uncle_Block_Number
  Block_Number
  Currency_Decimals
  Log_Index
  Transaction_Index
  Call_Index
  BalanceUpdate_Amount
  BalanceUpdate_AmountInUSD
  Uncle_Index
  ChainId
  Log_LogAfterCallIndex
}

"""Order by"""
input EVM_BalanceUpdate_Ordering {
  """Select a field to sort ascending"""
  ascending: EVM_BalanceUpdate_EnumFields

  """Select a field to sort descending"""
  descending: EVM_BalanceUpdate_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum EVM_BalanceUpdate_StringFields {
  Transaction_Hash
  BalanceUpdate_Address
  BalanceUpdate_AmountInUSD
  Currency_SmartContract
  Uncle_Block_Number
  Currency_Symbol
  Currency_DelegatedTo
  Currency_Name
  Block_Date
  Block_L1_ParentHash
  Transaction_Index
  Currency_ProtocolName
  BalanceUpdate_Id
  Block_Hash
  Block_Number
  Block_ParentHash
  BalanceUpdate_Amount
  BalanceUpdate_URI
  ChainId
  Block_L1_Hash
  Uncle_Block_Hash
}

"""Listed names of comparable fields in a cube"""
enum EVM_Block_CompareFields {
  Block_BaseFeeInUSD
  ChainId
  Block_Number
  Block_GasUsed
  Block_Date
  Block_TxCount
  Block_Nonce
  Block_GasLimit
  Block_L1_BaseFeeInUSD
  Block_Time
  Block_L1_BaseFee
  Block_Difficulty
  Block_Result_Gas
  Block_UnclesCount
  Block_BaseFee
}

"""Block of transactions in EVM Blockchain"""
type EVM_Block_Cube {
  """Block fields"""
  Block: EVM_Block_Fields_Block

  """ChainId value"""
  ChainId(
    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): String

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: EVM_Block_StringFields!

    """Side2 argument"""
    side2: EVM_Block_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Argument for Average of the values"""
    of: EVM_Block_NumFields!
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_Block_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_Block_NumFields
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [EVM_Block_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: EVM_Block_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_Block_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_Block_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: EVM_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_Block_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: EVM_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: EVM_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: EVM_Block_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Argument for quantile"""
    of: EVM_Block_NumFields!
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_Block_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_Block_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: EVM_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_Block_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_Block_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [EVM_Block_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum EVM_Block_EnumFields {
  Block_L1_Hash
  Block_Bloom
  Block_Hash
  Block_GasLimit
  Block_BaseFee
  Block_Nonce
  Block_ParentHash
  Block_L1_Coinbase
  Block_L1_BaseFeeInUSD
  Block_Time
  Block_L1_ParentHash
  Block_Result_Errors
  Block_GasUsed
  Block_Difficulty
  Block_UnclesCount
  Block_Extra
  Block_TxHash
  Block_MixDigest
  Block_Number
  Block_Root
  Block_UncleHash
  Block_Result_Gas
  Block_L1_BatcherAddr
  Block_BaseFeeInUSD
  Block_TxCount
  Block_Coinbase
  ChainId
  Block_L1_BaseFee
  Block_Date
  Block_ReceiptHash
}

"""Block fields"""
type EVM_Block_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields
  ): String

  """BaseFeeInUSD value"""
  BaseFeeInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields
  ): String

  """Bloom value"""
  Bloom(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Coinbase value"""
  Coinbase(
    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Difficulty value"""
  Difficulty(
    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields
  ): String

  """Extra value"""
  Extra(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """GasLimit value"""
  GasLimit(
    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields
  ): String

  """L1 fields"""
  L1: EVM_Block_Fields_Block_L1

  """MixDigest value"""
  MixDigest(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Number value"""
  Number(
    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): String

  """ParentHash value"""
  ParentHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields
  ): String

  """ReceiptHash value"""
  ReceiptHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Result fields"""
  Result: EVM_Block_Fields_Block_Result

  """Root value"""
  Root(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Time value"""
  Time(
    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): DateTime

  """TxCount value"""
  TxCount(
    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Int

  """TxHash value"""
  TxHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields
  ): String

  """UncleHash value"""
  UncleHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """UnclesCount value"""
  UnclesCount(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""L1 fields"""
type EVM_Block_Fields_Block_L1 {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """BaseFeeInUSD value"""
  BaseFeeInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """BatcherAddr value"""
  BatcherAddr(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Coinbase value"""
  Coinbase(
    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentHash value"""
  ParentHash(
    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): String
}

"""Result fields"""
type EVM_Block_Fields_Block_Result {
  """Errors value"""
  Errors(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields
  ): String

  """Gas value"""
  Gas(
    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields
  ): String
}

input EVM_Block_Filter {
  """Select by Block"""
  Block: EVM_Block_Input_Block_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Any combination ( as OR ) of supplied conditions"""
  any: [EVM_Block_FilterAny!]
}

input EVM_Block_FilterAny {
  """Select by Block"""
  Block: EVM_Block_Input_Block_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger
}

"""Select by Block"""
input EVM_Block_Input_Block_InputType {
  Nonce: OLAP_BigInteger
  Time: OLAP_DateTime
  GasLimit: OLAP_BigInteger
  ParentHash: OLAP_String
  L1: EVM_Block_Input_Block_L1_InputType
  BaseFee: EVM_Amount_With_Decimals
  MixDigest: OLAP_String
  ReceiptHash: OLAP_String
  Difficulty: OLAP_BigInteger
  Date: OLAP_Date
  GasUsed: OLAP_BigInteger
  TxHash: OLAP_String
  Bloom: OLAP_String
  Number: OLAP_BigInteger
  Root: OLAP_String
  UnclesCount: OLAP_Integer
  Extra: OLAP_String
  Result: EVM_Block_Input_Block_Result_InputType
  UncleHash: OLAP_String
  BaseFeeInUSD: EVM_Amount_With_Decimals
  TxCount: OLAP_Integer
  Hash: OLAP_String
  Coinbase: OLAP_String
}

"""Select by L1"""
input EVM_Block_Input_Block_L1_InputType {
  Hash: OLAP_String
  Coinbase: OLAP_String
  BaseFee: EVM_Amount_With_Decimals
  BaseFeeInUSD: EVM_Amount_With_Decimals
  BatcherAddr: OLAP_String
  ParentHash: OLAP_String
}

"""Select by Result"""
input EVM_Block_Input_Block_Result_InputType {
  Errors: OLAP_String
  Gas: OLAP_BigInteger
}

"""Limit definition"""
input EVM_Block_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input EVM_Block_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_Block_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum EVM_Block_NumFields {
  Block_Nonce
  Block_TxCount
  Block_BaseFeeInUSD
  Block_GasLimit
  Block_Result_Gas
  Block_Difficulty
  ChainId
  Block_L1_BaseFee
  Block_L1_BaseFeeInUSD
  Block_Number
  Block_GasUsed
  Block_UnclesCount
  Block_BaseFee
}

"""Order by"""
input EVM_Block_Ordering {
  """Select a field to sort descending"""
  descending: EVM_Block_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String

  """Select a field to sort ascending"""
  ascending: EVM_Block_EnumFields
}

"""Listed names of string fields in a cube"""
enum EVM_Block_StringFields {
  Block_UncleHash
  Block_L1_BaseFeeInUSD
  Block_Number
  Block_BaseFeeInUSD
  Block_Nonce
  Block_Coinbase
  Block_MixDigest
  Block_ParentHash
  Block_Hash
  Block_BaseFee
  Block_Date
  ChainId
  Block_GasUsed
  Block_L1_ParentHash
  Block_Bloom
  Block_L1_BatcherAddr
  Block_TxHash
  Block_ReceiptHash
  Block_Result_Gas
  Block_L1_BaseFee
  Block_Difficulty
  Block_L1_Hash
  Block_GasLimit
  Block_L1_Coinbase
  Block_Extra
  Block_Result_Errors
  Block_Root
}

"""Listed names of comparable fields in a cube"""
enum EVM_Call_CompareFields {
  Call_CallerIndex
  Call_Value
  Call_Create
  Call_InternalCalls
  Block_Time
  Fee_MinerReward
  Transaction_ValueInUSD
  Transaction_Value
  Call_GasUsed
  Call_Signature_Parsed
  Fee_Savings
  Call_Opcode_Code
  Transaction_Protected
  Transaction_Gas
  Block_Date
  Transaction_GasFeeCap
  Fee_SenderFee
  Receipt_GasUsed
  Call_Success
  Call_ExitIndex
  Transaction_Index
  Transaction_Time
  Receipt_L1_GasPrice
  ChainId
  Receipt_CumulativeGasUsed
  Block_Number
  Transaction_GasFeeCapInUSD
  Block_Nonce
  Call_Delegated
  Fee_EffectiveGasPrice
  Call_Signature_SignatureType
  Call_EnterIndex
  Fee_PriorityFeePerGas
  TransactionStatus_Success
  Block_Difficulty
  Transaction_GasTipCapInUSD
  Call_SelfDestruct
  Fee_MinerRewardInUSD
  Call_Gas
  Transaction_GasPriceInUSD
  Fee_PriorityFeePerGasInUSD
  Fee_BurntInUSD
  Transaction_Nonce
  Fee_GasRefund
  Transaction_CostInUSD
  Fee_Burnt
  Fee_EffectiveGasPriceInUSD
  Transaction_GasPrice
  Block_BaseFee
  Receipt_L1_Fee
  Receipt_L1_FeeInUSD
  Fee_SenderFeeInUSD
  Receipt_L1_GasPriceInUSD
  Call_ValueInUSD
  Transaction_Cost
  Call_Reverted
  Transaction_GasTipCap
  Fee_SavingsInUSD
  Call_Index
  Transaction_Type
  Receipt_Status
  Block_GasLimit
  Call_Depth
  Receipt_Type
  Block_GasUsed
  Call_LogCount
}

"""Smart contract calls in EVM Blockchain"""
type EVM_Call_Cube {
  """Arguments value"""
  Arguments(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Call_Fields_Arguments_Select_Arguments
  ): [EVM_Call_Fields_Arguments]

  """Block fields"""
  Block: EVM_Call_Fields_Block

  """Call fields"""
  Call: EVM_Call_Fields_Call

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Fee fields"""
  Fee: EVM_Call_Fields_Fee

  """Receipt fields"""
  Receipt: EVM_Call_Fields_Receipt

  """Returns value"""
  Returns(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Call_Fields_Returns_Select_Returns
  ): [EVM_Call_Fields_Returns]

  """StateChanges value"""
  StateChanges(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Call_Fields_StateChanges_Select_StateChanges

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): [EVM_Call_Fields_StateChanges]

  """Transaction fields"""
  Transaction: EVM_Call_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: EVM_Call_Fields_TransactionStatus

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: EVM_Call_StringFields!

    """Side2 argument"""
    side2: EVM_Call_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_Call_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_Call_NumFields
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [EVM_Call_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: EVM_Call_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_Call_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_Call_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_Call_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: EVM_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_Call_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: EVM_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Argument for Median for a set of values"""
    of: EVM_Call_NumFields!
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """Argument for nakamoto index"""
    of: EVM_Call_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Argument for quantile"""
    of: EVM_Call_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_Call_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Argument for Standard deviation of the values"""
    of: EVM_Call_NumFields!
  ): Float

  """Sum values of argument"""
  sum(
    """Argument for sum"""
    of: EVM_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_Call_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_Call_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """Count unique records"""
  uniq(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Uniq values of the field"""
    of: [EVM_Call_EnumFields!]!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String
  ): String
}

"""Listed names of fields in a cube"""
enum EVM_Call_EnumFields {
  Fee_MinerRewardInUSD
  Block_L1_ParentHash
  Receipt_Type
  Block_Date
  Receipt_GasUsed
  Block_Coinbase
  TransactionStatus_FaultError
  Call_Signature_SignatureHash
  Transaction_Protected
  Transaction_GasFeeCapInUSD
  Transaction_Gas
  Transaction_To
  Fee_GasRefund
  Call_SelfDestruct
  Call_Signature_SignatureType
  Fee_SenderFeeInUSD
  Call_Index
  Call_Signature_Abi
  Block_Nonce
  Call_Create
  Block_Hash
  Call_To
  StateChanges
  Call_Opcode_Code
  Call_Signature_Name
  Call_Delegated
  Block_BaseFee
  Fee_EffectiveGasPrice
  TransactionStatus_EndError
  Transaction_GasFeeCap
  Receipt_ContractAddress
  Fee_Burnt
  Transaction_Hash
  Fee_MinerReward
  Call_Signature_Signature
  Block_GasUsed
  Call_Reverted
  Transaction_GasTipCapInUSD
  Call_ValueInUSD
  Call_Signature_Parsed
  Call_CallPath
  Transaction_GasPriceInUSD
  Call_Opcode_Name
  Returns
  Transaction_ValueInUSD
  Call_Input
  Transaction_Value
  Arguments
  Fee_PriorityFeePerGas
  Block_GasLimit
  Call_LogCount
  Call_Error
  Fee_SenderFee
  Block_Time
  Call_Gas
  Fee_SavingsInUSD
  Block_Difficulty
  Receipt_L1_GasPriceInUSD
  Fee_PriorityFeePerGasInUSD
  Call_Depth
  Call_Success
  Transaction_CostInUSD
  Receipt_Status
  Block_L1_Hash
  Call_InternalCalls
  Receipt_L1_GasPrice
  Fee_BurntInUSD
  Transaction_From
  Transaction_Time
  Call_EnterIndex
  Transaction_Type
  Call_Value
  Transaction_Nonce
  Transaction_GasPrice
  Call_Output
  Transaction_Cost
  Transaction_Index
  TransactionStatus_Success
  Receipt_L1_FeeInUSD
  Fee_EffectiveGasPriceInUSD
  Call_ExitIndex
  Call_CallerIndex
  ChainId
  Fee_Savings
  Receipt_CumulativeGasUsed
  Call_From
  Block_L1_Coinbase
  Receipt_L1_Fee
  Call_GasUsed
  Transaction_GasTipCap
  Block_Number
  Block_ParentHash
}

"""Arguments fields"""
type EVM_Call_Fields_Arguments {
  Index: Int
  Name: String
  Path: [EVM_Call_Fields_Arguments_Path]
  Type: String
  Value: EVM_ABI_Value_Union
}

"""Arguments_Path fields"""
type EVM_Call_Fields_Arguments_Path {
  Index: Int
  Name: String
  Type: String
}

"""Array of Arguments includes or excludes provided value"""
input EVM_Call_Fields_Arguments_Select_Arguments {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Fields_Arguments_Select_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Fields_Arguments_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Fields_Arguments_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Fields_Arguments_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Fields_Arguments_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Fields_Arguments_Select_FieldSelector]
}

"""Selector for Arguments"""
input EVM_Call_Fields_Arguments_Select_FieldSelector {
  """Select value for Value"""
  Value: EVM_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Path"""
  Path: EVM_Call_Fields_Arguments_Select_FieldSelector_Arguments_Path
}

"""Array of Arguments_Path includes or excludes provided value"""
input EVM_Call_Fields_Arguments_Select_FieldSelector_Arguments_Path {
  """Starts with this element"""
  startsWith: [EVM_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]
}

"""Selector for Arguments_Path"""
input EVM_Call_Fields_Arguments_Select_FieldSelector_FieldSelector {
  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer
}

"""Block fields"""
type EVM_Call_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): String

  """Difficulty value"""
  Difficulty(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): String

  """GasLimit value"""
  GasLimit(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """L1 fields"""
  L1: EVM_Call_Fields_Block_L1

  """Nonce value"""
  Nonce(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Time value"""
  Time(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): DateTime
}

"""L1 fields"""
type EVM_Call_Fields_Block_L1 {
  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentHash value"""
  ParentHash(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): String
}

"""Call fields"""
type EVM_Call_Fields_Call {
  """CallPath value"""
  CallPath(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Call_Fields_Call_CallPath_Select_Call_CallPath

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): [Int]

  """CallerIndex value"""
  CallerIndex(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): Int

  """Create value"""
  Create(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Depth value"""
  Depth(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """EnterIndex value"""
  EnterIndex(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Int

  """Error value"""
  Error(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ExitIndex value"""
  ExitIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """From value"""
  From(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """Gas value"""
  Gas(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """GasUsed value"""
  GasUsed(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Input value"""
  Input(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """InternalCalls value"""
  InternalCalls(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """LogCount value"""
  LogCount(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): Int

  """Opcode fields"""
  Opcode: EVM_Call_Fields_Call_Opcode

  """Output value"""
  Output(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Reverted value"""
  Reverted(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """SelfDestruct value"""
  SelfDestruct(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Boolean

  """Signature fields"""
  Signature: EVM_Call_Fields_Call_Signature

  """Success value"""
  Success(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): Boolean

  """To value"""
  To(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """Value value"""
  Value(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): String

  """ValueInUSD value"""
  ValueInUSD(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_Call_Fields_Call_CallPath_Select_Call_CallPath {
  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]
}

"""Opcode fields"""
type EVM_Call_Fields_Call_Opcode {
  """Code value"""
  Code(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): Int

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Signature fields"""
type EVM_Call_Fields_Call_Signature {
  """Abi value"""
  Abi(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureType value"""
  SignatureType(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): Boolean
}

"""Fee fields"""
type EVM_Call_Fields_Fee {
  """Burnt value"""
  Burnt(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): String

  """BurntInUSD value"""
  BurntInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """EffectiveGasPrice value"""
  EffectiveGasPrice(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): String

  """EffectiveGasPriceInUSD value"""
  EffectiveGasPriceInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): String

  """GasRefund value"""
  GasRefund(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """MinerReward value"""
  MinerReward(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): String

  """MinerRewardInUSD value"""
  MinerRewardInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """PriorityFeePerGas value"""
  PriorityFeePerGas(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """PriorityFeePerGasInUSD value"""
  PriorityFeePerGasInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Savings value"""
  Savings(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """SavingsInUSD value"""
  SavingsInUSD(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """SenderFee value"""
  SenderFee(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """SenderFeeInUSD value"""
  SenderFeeInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Receipt fields"""
type EVM_Call_Fields_Receipt {
  """ContractAddress value"""
  ContractAddress(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """CumulativeGasUsed value"""
  CumulativeGasUsed(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """L1 fields"""
  L1: EVM_Call_Fields_Receipt_L1

  """Status value"""
  Status(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""L1 fields"""
type EVM_Call_Fields_Receipt_L1 {
  """Fee value"""
  Fee(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPriceInUSD value"""
  GasPriceInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Returns fields"""
type EVM_Call_Fields_Returns {
  Index: Int
  Name: String
  Path: [EVM_Call_Fields_Returns_Path]
  Type: String
  Value: EVM_ABI_Value_Union
}

"""Returns_Path fields"""
type EVM_Call_Fields_Returns_Path {
  Index: Int
  Name: String
  Type: String
}

"""Selector for Returns"""
input EVM_Call_Fields_Returns_Select_FieldSelector {
  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Path"""
  Path: EVM_Call_Fields_Returns_Select_FieldSelector_Returns_Path

  """Select value for Value"""
  Value: EVM_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String
}

"""Selector for Returns_Path"""
input EVM_Call_Fields_Returns_Select_FieldSelector_FieldSelector {
  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer
}

"""Array of Returns_Path includes or excludes provided value"""
input EVM_Call_Fields_Returns_Select_FieldSelector_Returns_Path {
  """Includes this element"""
  includes: [EVM_Call_Fields_Returns_Select_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Fields_Returns_Select_FieldSelector_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Fields_Returns_Select_FieldSelector_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Fields_Returns_Select_FieldSelector_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Fields_Returns_Select_FieldSelector_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Fields_Returns_Select_FieldSelector_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer
}

"""Array of Returns includes or excludes provided value"""
input EVM_Call_Fields_Returns_Select_Returns {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Fields_Returns_Select_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Fields_Returns_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Fields_Returns_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Fields_Returns_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Fields_Returns_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Fields_Returns_Select_FieldSelector]
}

"""StateChanges fields"""
type EVM_Call_Fields_StateChanges {
  Address: String
  ChangeAfterCallIndex: Int
  Location: String
  Value: String
}

"""Selector for StateChanges"""
input EVM_Call_Fields_StateChanges_Select_FieldSelector {
  """Select value for Location"""
  Location: OLAP_String

  """Select value for Value"""
  Value: OLAP_String

  """Select value for ChangeAfterCallIndex"""
  ChangeAfterCallIndex: OLAP_Integer

  """Select value for Address"""
  Address: OLAP_String
}

"""Array of StateChanges includes or excludes provided value"""
input EVM_Call_Fields_StateChanges_Select_StateChanges {
  """Starts with this element"""
  startsWith: [EVM_Call_Fields_StateChanges_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Fields_StateChanges_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Fields_StateChanges_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Fields_StateChanges_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Fields_StateChanges_Select_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Fields_StateChanges_Select_FieldSelector]
}

"""Transaction fields"""
type EVM_Call_Fields_Transaction {
  """Cost value"""
  Cost(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """CostInUSD value"""
  CostInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """GasFeeCap value"""
  GasFeeCap(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): String

  """GasFeeCapInUSD value"""
  GasFeeCapInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPriceInUSD value"""
  GasPriceInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasTipCap value"""
  GasTipCap(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasTipCapInUSD value"""
  GasTipCapInUSD(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Protected value"""
  Protected(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """To value"""
  To(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """ValueInUSD value"""
  ValueInUSD(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): String
}

"""TransactionStatus fields"""
type EVM_Call_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """FaultError value"""
  FaultError(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

input EVM_Call_Filter {
  """Select by Call"""
  Call: EVM_Call_Input_Call_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Fee"""
  Fee: EVM_Call_Input_Fee_InputType

  """Array of Returns includes or excludes provided value"""
  Returns: EVM_Call_Input_Returns_Input_Returns

  """Select by Receipt"""
  Receipt: EVM_Call_Input_Receipt_InputType

  """Select by Block"""
  Block: EVM_Call_Input_Block_InputType

  """Any combination ( as OR ) of supplied conditions"""
  any: [EVM_Call_FilterAny!]

  """Array of Arguments includes or excludes provided value"""
  Arguments: EVM_Call_Input_Arguments_Input_Arguments

  """Select by Transaction"""
  Transaction: EVM_Call_Input_Transaction_InputType

  """Array of StateChanges includes or excludes provided value"""
  StateChanges: EVM_Call_Input_StateChanges_Input_StateChanges

  """Select by TransactionStatus"""
  TransactionStatus: EVM_Call_Input_TransactionStatus_InputType
}

input EVM_Call_FilterAny {
  """Select by Transaction"""
  Transaction: EVM_Call_Input_Transaction_InputType

  """Select by TransactionStatus"""
  TransactionStatus: EVM_Call_Input_TransactionStatus_InputType

  """Select by Call"""
  Call: EVM_Call_Input_Call_InputType

  """Select by Block"""
  Block: EVM_Call_Input_Block_InputType

  """Array of Arguments includes or excludes provided value"""
  Arguments: EVM_Call_Input_Arguments_Input_Arguments

  """Array of StateChanges includes or excludes provided value"""
  StateChanges: EVM_Call_Input_StateChanges_Input_StateChanges

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Array of Returns includes or excludes provided value"""
  Returns: EVM_Call_Input_Returns_Input_Returns

  """Select by Receipt"""
  Receipt: EVM_Call_Input_Receipt_InputType

  """Select by Fee"""
  Fee: EVM_Call_Input_Fee_InputType
}

"""Array of Arguments includes or excludes provided value"""
input EVM_Call_Input_Arguments_Input_Arguments {
  """Does not End with this element"""
  notEndsWith: [EVM_Call_Input_Arguments_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Input_Arguments_Input_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Input_Arguments_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Input_Arguments_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Input_Arguments_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Input_Arguments_Input_FieldSelector]
}

"""Selector for Arguments"""
input EVM_Call_Input_Arguments_Input_FieldSelector {
  """Select value for Value"""
  Value: EVM_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Path"""
  Path: EVM_Call_Input_Arguments_Input_FieldSelector_Arguments_Path
}

"""Array of Arguments_Path includes or excludes provided value"""
input EVM_Call_Input_Arguments_Input_FieldSelector_Arguments_Path {
  """Excludes this element"""
  excludes: [EVM_Call_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Input_Arguments_Input_FieldSelector_FieldSelector]
}

"""Selector for Arguments_Path"""
input EVM_Call_Input_Arguments_Input_FieldSelector_FieldSelector {
  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Name"""
  Name: OLAP_String
}

"""Select by Block"""
input EVM_Call_Input_Block_InputType {
  Nonce: OLAP_BigInteger
  GasUsed: OLAP_BigInteger
  Date: OLAP_Date
  Difficulty: OLAP_BigInteger
  GasLimit: OLAP_BigInteger
  L1: EVM_Call_Input_Block_L1_InputType
  Hash: OLAP_String
  Time: OLAP_DateTime
  BaseFee: OLAP_BigInteger
  Coinbase: OLAP_String
  Number: OLAP_BigInteger
  ParentHash: OLAP_String
}

"""Select by L1"""
input EVM_Call_Input_Block_L1_InputType {
  ParentHash: OLAP_String
  Hash: OLAP_String
  Coinbase: OLAP_String
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_Call_Input_Call_CallPath_Input_Call_CallPath {
  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]
}

"""Select by Call"""
input EVM_Call_Input_Call_InputType {
  EnterIndex: OLAP_Integer
  Value: EVM_Amount_With_Decimals
  Depth: OLAP_Integer
  To: OLAP_String
  Success: Boolean
  Create: Boolean
  Delegated: Boolean
  ExitIndex: OLAP_Integer
  LogCount: OLAP_Integer
  Output: OLAP_String
  GasUsed: OLAP_BigInteger
  ValueInUSD: EVM_Amount_With_Decimals
  Error: OLAP_String
  Input: OLAP_String
  From: OLAP_String
  CallPath: EVM_Call_Input_Call_CallPath_Input_Call_CallPath
  Signature: EVM_Call_Input_Call_Signature_InputType
  InternalCalls: OLAP_Integer
  Gas: OLAP_BigInteger
  CallerIndex: OLAP_Integer
  Index: OLAP_Integer
  SelfDestruct: Boolean
  Opcode: EVM_Call_Input_Call_Opcode_InputType
  Reverted: Boolean
}

"""Select by Opcode"""
input EVM_Call_Input_Call_Opcode_InputType {
  Name: OLAP_String
  Code: OLAP_Integer
}

"""Select by Signature"""
input EVM_Call_Input_Call_Signature_InputType {
  Abi: OLAP_String
  Name: OLAP_String
  SignatureHash: OLAP_String
  Parsed: Boolean
  SignatureType: Boolean
  Signature: OLAP_String
}

"""Select by Fee"""
input EVM_Call_Input_Fee_InputType {
  EffectiveGasPriceInUSD: EVM_Amount_With_Decimals
  Savings: EVM_Amount_With_Decimals
  SavingsInUSD: EVM_Amount_With_Decimals
  BurntInUSD: EVM_Amount_With_Decimals
  PriorityFeePerGasInUSD: EVM_Amount_With_Decimals
  GasRefund: OLAP_BigInteger
  EffectiveGasPrice: EVM_Amount_With_Decimals
  MinerRewardInUSD: EVM_Amount_With_Decimals
  MinerReward: EVM_Amount_With_Decimals
  SenderFeeInUSD: EVM_Amount_With_Decimals
  Burnt: EVM_Amount_With_Decimals
  PriorityFeePerGas: EVM_Amount_With_Decimals
  SenderFee: EVM_Amount_With_Decimals
}

"""Select by Receipt"""
input EVM_Call_Input_Receipt_InputType {
  Status: OLAP_BigInteger
  GasUsed: OLAP_BigInteger
  Type: OLAP_Integer
  CumulativeGasUsed: OLAP_BigInteger
  L1: EVM_Call_Input_Receipt_L1_InputType
  ContractAddress: OLAP_String
}

"""Select by L1"""
input EVM_Call_Input_Receipt_L1_InputType {
  GasPriceInUSD: EVM_Amount_With_Decimals
  Fee: EVM_Amount_With_Decimals
  FeeInUSD: EVM_Amount_With_Decimals
  GasPrice: EVM_Amount_With_Decimals
}

"""Selector for Returns"""
input EVM_Call_Input_Returns_Input_FieldSelector {
  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Path"""
  Path: EVM_Call_Input_Returns_Input_FieldSelector_Returns_Path

  """Select value for Value"""
  Value: EVM_ValueUnionSelector
}

"""Selector for Returns_Path"""
input EVM_Call_Input_Returns_Input_FieldSelector_FieldSelector {
  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String
}

"""Array of Returns_Path includes or excludes provided value"""
input EVM_Call_Input_Returns_Input_FieldSelector_Returns_Path {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Input_Returns_Input_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Input_Returns_Input_FieldSelector_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Input_Returns_Input_FieldSelector_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Input_Returns_Input_FieldSelector_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Input_Returns_Input_FieldSelector_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Input_Returns_Input_FieldSelector_FieldSelector]
}

"""Array of Returns includes or excludes provided value"""
input EVM_Call_Input_Returns_Input_Returns {
  """Includes this element"""
  includes: [EVM_Call_Input_Returns_Input_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Input_Returns_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Input_Returns_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Input_Returns_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Input_Returns_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Input_Returns_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer
}

"""Selector for StateChanges"""
input EVM_Call_Input_StateChanges_Input_FieldSelector {
  """Select value for Location"""
  Location: OLAP_String

  """Select value for Value"""
  Value: OLAP_String

  """Select value for ChangeAfterCallIndex"""
  ChangeAfterCallIndex: OLAP_Integer

  """Select value for Address"""
  Address: OLAP_String
}

"""Array of StateChanges includes or excludes provided value"""
input EVM_Call_Input_StateChanges_Input_StateChanges {
  """Does not start with this element"""
  notStartsWith: [EVM_Call_Input_StateChanges_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Input_StateChanges_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Input_StateChanges_Input_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Input_StateChanges_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Input_StateChanges_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Input_StateChanges_Input_FieldSelector]
}

"""Select by Transaction"""
input EVM_Call_Input_Transaction_InputType {
  Protected: Boolean
  GasTipCap: EVM_Amount_With_Decimals
  Nonce: OLAP_BigInteger
  Hash: OLAP_String
  Gas: OLAP_BigInteger
  ValueInUSD: EVM_Amount_With_Decimals
  CostInUSD: EVM_Amount_With_Decimals
  GasPriceInUSD: EVM_Amount_With_Decimals
  Type: OLAP_Integer
  GasTipCapInUSD: EVM_Amount_With_Decimals
  Cost: EVM_Amount_With_Decimals
  From: OLAP_String
  To: OLAP_String
  GasPrice: EVM_Amount_With_Decimals
  Time: OLAP_DateTime
  GasFeeCap: EVM_Amount_With_Decimals
  GasFeeCapInUSD: EVM_Amount_With_Decimals
  Value: EVM_Amount_With_Decimals
  Index: OLAP_BigInteger
}

"""Select by TransactionStatus"""
input EVM_Call_Input_TransactionStatus_InputType {
  Success: Boolean
  FaultError: OLAP_String
  EndError: OLAP_String
}

"""Limit definition"""
input EVM_Call_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input EVM_Call_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_Call_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum EVM_Call_NumFields {
  Fee_SenderFeeInUSD
  Call_Value
  Block_Nonce
  Fee_BurntInUSD
  Fee_SavingsInUSD
  Transaction_Gas
  Receipt_L1_GasPrice
  Receipt_CumulativeGasUsed
  Call_GasUsed
  Fee_PriorityFeePerGas
  Block_Difficulty
  Fee_EffectiveGasPriceInUSD
  Receipt_L1_Fee
  Call_ValueInUSD
  Call_ExitIndex
  Receipt_Status
  Call_InternalCalls
  Receipt_L1_GasPriceInUSD
  Block_Number
  Receipt_GasUsed
  Transaction_GasTipCapInUSD
  Call_Index
  Fee_SenderFee
  Transaction_GasPriceInUSD
  Fee_MinerRewardInUSD
  Block_GasUsed
  Transaction_Cost
  Transaction_GasFeeCap
  Transaction_GasTipCap
  Transaction_Nonce
  Call_Depth
  Call_Opcode_Code
  Call_CallerIndex
  Receipt_Type
  Call_Gas
  Fee_EffectiveGasPrice
  Transaction_Type
  Fee_PriorityFeePerGasInUSD
  Fee_Burnt
  Receipt_L1_FeeInUSD
  Fee_MinerReward
  Call_EnterIndex
  ChainId
  Transaction_CostInUSD
  Transaction_GasPrice
  Transaction_ValueInUSD
  Transaction_GasFeeCapInUSD
  Fee_GasRefund
  Block_BaseFee
  Transaction_Index
  Transaction_Value
  Block_GasLimit
  Call_LogCount
  Fee_Savings
}

"""Order by"""
input EVM_Call_Ordering {
  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String

  """Select a field to sort ascending"""
  ascending: EVM_Call_EnumFields

  """Select a field to sort descending"""
  descending: EVM_Call_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String
}

"""Listed names of string fields in a cube"""
enum EVM_Call_StringFields {
  Transaction_GasFeeCap
  Transaction_To
  Block_Hash
  Fee_SenderFee
  Receipt_L1_FeeInUSD
  Call_ValueInUSD
  Call_Output
  TransactionStatus_FaultError
  Transaction_ValueInUSD
  Block_ParentHash
  Transaction_Gas
  Call_From
  Fee_EffectiveGasPriceInUSD
  Block_GasUsed
  Block_L1_Coinbase
  Transaction_Index
  Transaction_Value
  Call_Signature_Name
  Fee_PriorityFeePerGasInUSD
  Block_Number
  Block_Coinbase
  Transaction_Hash
  Fee_BurntInUSD
  Fee_SenderFeeInUSD
  Block_L1_Hash
  Transaction_GasPriceInUSD
  Fee_MinerReward
  Call_Error
  Transaction_CostInUSD
  Transaction_GasTipCap
  Call_GasUsed
  Fee_Savings
  Fee_MinerRewardInUSD
  Call_Signature_Signature
  Block_L1_ParentHash
  Receipt_GasUsed
  Fee_Burnt
  Transaction_GasTipCapInUSD
  Call_Opcode_Name
  Block_Date
  Call_Gas
  Call_Signature_Abi
  Block_GasLimit
  Transaction_From
  Transaction_GasPrice
  ChainId
  Block_Nonce
  Receipt_L1_GasPrice
  Receipt_L1_GasPriceInUSD
  Transaction_Nonce
  TransactionStatus_EndError
  Call_Signature_SignatureHash
  Fee_SavingsInUSD
  Block_Difficulty
  Receipt_CumulativeGasUsed
  Call_To
  Transaction_GasFeeCapInUSD
  Fee_PriorityFeePerGas
  Call_Value
  Fee_GasRefund
  Fee_EffectiveGasPrice
  Receipt_ContractAddress
  Call_Input
  Block_BaseFee
  Receipt_L1_Fee
  Transaction_Cost
  Receipt_Status
}

"""Listed names of comparable fields in a cube"""
enum EVM_DEXTrade_CompareFields {
  Block_Time
  Fee_Savings
  Trade_Sell_Currency_Fungible
  Block_GasLimit
  Call_Signature_Parsed
  Trade_Buy_Amount
  Transaction_GasFeeCap
  Trade_Sell_Currency_HasURI
  Trade_Sell_Amount
  ChainId
  Fee_BurntInUSD
  Call_Gas
  Trade_Success
  Trade_Buy_AmountInUSD
  Block_Date
  Log_Signature_SignatureType
  Receipt_Type
  Transaction_Cost
  Trade_Buy_Price
  Transaction_Time
  Call_Signature_SignatureType
  Transaction_GasTipCap
  Trade_PriceAsymmetry
  Fee_MinerReward
  Call_InternalCalls
  Call_Reverted
  Receipt_L1_Fee
  Transaction_Type
  Transaction_CostInUSD
  Transaction_Index
  Transaction_GasTipCapInUSD
  Transaction_Gas
  Trade_Sell_PriceInUSD
  Transaction_GasFeeCapInUSD
  Call_Delegated
  Trade_Buy_Currency_Decimals
  Trade_Dex_Pair_Decimals
  Call_SelfDestruct
  Trade_Sell_AmountInUSD
  Trade_Buy_Currency_Fungible
  Fee_EffectiveGasPriceInUSD
  Transaction_ValueInUSD
  Call_Index
  Receipt_GasUsed
  Log_Signature_Parsed
  Block_BaseFee
  Call_Create
  Receipt_L1_GasPrice
  Fee_PriorityFeePerGasInUSD
  Trade_Dex_Delegated
  Call_GasUsed
  Fee_GasRefund
  Fee_PriorityFeePerGas
  Receipt_L1_GasPriceInUSD
  Fee_EffectiveGasPrice
  Trade_Sell_Currency_Decimals
  TransactionStatus_Success
  Block_Nonce
  Fee_SenderFeeInUSD
  Call_Success
  Block_Number
  Fee_MinerRewardInUSD
  Block_Difficulty
  Fee_SavingsInUSD
  Receipt_L1_FeeInUSD
  Block_GasUsed
  Trade_Buy_PriceInUSD
  Transaction_Nonce
  Trade_Sell_Price
  Receipt_CumulativeGasUsed
  Log_Index
  Fee_SenderFee
  Transaction_GasPriceInUSD
  Call_CallerIndex
  Call_Value
  Transaction_Protected
  Fee_Burnt
  Receipt_Status
  Transaction_Value
  Log_LogAfterCallIndex
  Trade_Buy_Currency_HasURI
  Transaction_GasPrice
}

"""DEX Trades in EVM Blockchain"""
type EVM_DEXTrade_Cube {
  """Block fields"""
  Block: EVM_DEXTrade_Fields_Block

  """Call fields"""
  Call: EVM_DEXTrade_Fields_Call

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Fee fields"""
  Fee: EVM_DEXTrade_Fields_Fee

  """Log fields"""
  Log: EVM_DEXTrade_Fields_Log

  """Receipt fields"""
  Receipt: EVM_DEXTrade_Fields_Receipt

  """Trade fields"""
  Trade: EVM_DEXTrade_Fields_Trade

  """Transaction fields"""
  Transaction: EVM_DEXTrade_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: EVM_DEXTrade_Fields_TransactionStatus

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: EVM_DEXTrade_StringFields!

    """Side2 argument"""
    side2: EVM_DEXTrade_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_DEXTrade_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_DEXTrade_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [EVM_DEXTrade_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: EVM_DEXTrade_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_DEXTrade_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_DEXTrade_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_DEXTrade_NumFields
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: EVM_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """Argument for Entropy for a set of values"""
    of: EVM_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_DEXTrade_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: EVM_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: EVM_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """Argument for nakamoto index"""
    of: EVM_DEXTrade_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Argument for quantile"""
    of: EVM_DEXTrade_NumFields!
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_DEXTrade_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: EVM_DEXTrade_NumFields!
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_DEXTrade_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_DEXTrade_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_DEXTrade_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [EVM_DEXTrade_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum EVM_DEXTrade_EnumFields {
  Trade_Dex_Pair_Decimals
  Transaction_ValueInUSD
  Transaction_From
  Transaction_GasPriceInUSD
  Block_L1_ParentHash
  Transaction_GasFeeCap
  Receipt_L1_Fee
  Trade_Sell_OrderId
  Call_Gas
  Transaction_GasPrice
  Call_CallerIndex
  Trade_Dex_ProtocolName
  Transaction_GasFeeCapInUSD
  TransactionStatus_Success
  Transaction_CostInUSD
  Transaction_Index
  Call_Signature_Abi
  Trade_PriceAsymmetry
  Transaction_Nonce
  Trade_Sell_Amount
  Trade_Buy_AmountInUSD
  Fee_GasRefund
  Block_Coinbase
  Log_LogAfterCallIndex
  Log_Signature_SignatureHash
  Trade_Buy_Amount
  Transaction_Protected
  Trade_Dex_DelegatedTo
  Trade_Buy_Ids
  Call_SelfDestruct
  Fee_BurntInUSD
  Call_Error
  Fee_SenderFeeInUSD
  Fee_Burnt
  Trade_Buy_Buyer
  Call_Signature_SignatureHash
  Trade_Buy_OrderId
  Block_Date
  Log_Index
  Call_Index
  Trade_Dex_SmartContract
  TransactionStatus_FaultError
  TransactionStatus_EndError
  Block_Nonce
  Trade_Sell_URIs
  Call_Reverted
  Trade_Buy_Seller
  Block_Difficulty
  Call_Signature_SignatureType
  Trade_Buy_Currency_HasURI
  Fee_PriorityFeePerGasInUSD
  Trade_Sell_PriceInUSD
  Trade_Sell_Buyer
  Transaction_To
  Call_From
  Trade_Sell_AmountInUSD
  Block_L1_Hash
  Call_Success
  Transaction_Hash
  Fee_PriorityFeePerGas
  Block_GasUsed
  Fee_Savings
  Trade_Sell_Currency_Fungible
  Trade_Buy_Currency_ProtocolName
  Transaction_Type
  Fee_EffectiveGasPrice
  Trade_Sell_Currency_Name
  Call_Value
  Trade_Dex_Pair_Name
  Fee_MinerRewardInUSD
  Receipt_ContractAddress
  Trade_Sell_Ids
  Block_BaseFee
  Fee_EffectiveGasPriceInUSD
  Trade_Dex_Pair_Symbol
  ChainId
  Receipt_L1_GasPriceInUSD
  Trade_Buy_PriceInUSD
  Trade_Dex_Delegated
  Receipt_Status
  Trade_Fees
  Receipt_L1_GasPrice
  Block_Number
  Receipt_GasUsed
  Fee_SavingsInUSD
  Log_Signature_Parsed
  Block_GasLimit
  Trade_Sell_Currency_Symbol
  Call_Create
  Block_Time
  Trade_Sender
  Trade_Dex_Pair_SmartContract
  Transaction_GasTipCap
  Trade_Success
  Fee_MinerReward
  Trade_Sell_Seller
  Fee_SenderFee
  Call_Signature_Signature
  Log_Signature_Name
  Log_Signature_Abi
  Trade_Buy_Currency_SmartContract
  Transaction_GasTipCapInUSD
  Trade_Buy_URIs
  Receipt_L1_FeeInUSD
  Trade_Dex_ProtocolVersion
  Trade_Buy_Currency_Decimals
  Transaction_Time
  Trade_Buy_Currency_Name
  Call_InternalCalls
  Log_SmartContract
  Log_Signature_Signature
  Transaction_Gas
  Trade_Buy_Currency_Symbol
  Call_Signature_Parsed
  Trade_Sell_Currency_ProtocolName
  Call_Delegated
  Trade_Sell_Currency_HasURI
  Trade_Sell_Currency_Decimals
  Trade_Dex_OwnerAddress
  Receipt_CumulativeGasUsed
  Block_ParentHash
  Call_Signature_Name
  Trade_Dex_ProtocolFamily
  Trade_Buy_Price
  Receipt_Type
  Trade_Sell_Currency_SmartContract
  Trade_Sell_Price
  Block_Hash
  Log_Signature_SignatureType
  Call_GasUsed
  Trade_Buy_Currency_Fungible
  Call_CallPath
  Call_To
  Transaction_Cost
  Transaction_Value
}

"""Block fields"""
type EVM_DEXTrade_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Coinbase value"""
  Coinbase(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """Date value"""
  Date(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """Difficulty value"""
  Difficulty(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasLimit value"""
  GasLimit(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """L1 fields"""
  L1: EVM_DEXTrade_Fields_Block_L1

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Time value"""
  Time(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): DateTime
}

"""L1 fields"""
type EVM_DEXTrade_Fields_Block_L1 {
  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Call fields"""
type EVM_DEXTrade_Fields_Call {
  """CallPath value"""
  CallPath(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTrade_Fields_Call_CallPath_Select_Call_CallPath

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): [Int]

  """CallerIndex value"""
  CallerIndex(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): Int

  """Create value"""
  Create(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Error value"""
  Error(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """InternalCalls value"""
  InternalCalls(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Reverted value"""
  Reverted(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """SelfDestruct value"""
  SelfDestruct(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): Boolean

  """Signature fields"""
  Signature: EVM_DEXTrade_Fields_Call_Signature

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """To value"""
  To(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_DEXTrade_Fields_Call_CallPath_Select_Call_CallPath {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]
}

"""Signature fields"""
type EVM_DEXTrade_Fields_Call_Signature {
  """Abi value"""
  Abi(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureType value"""
  SignatureType(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Fee fields"""
type EVM_DEXTrade_Fields_Fee {
  """Burnt value"""
  Burnt(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """BurntInUSD value"""
  BurntInUSD(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """EffectiveGasPrice value"""
  EffectiveGasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """EffectiveGasPriceInUSD value"""
  EffectiveGasPriceInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasRefund value"""
  GasRefund(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """MinerReward value"""
  MinerReward(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """MinerRewardInUSD value"""
  MinerRewardInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """PriorityFeePerGas value"""
  PriorityFeePerGas(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """PriorityFeePerGasInUSD value"""
  PriorityFeePerGasInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Savings value"""
  Savings(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """SavingsInUSD value"""
  SavingsInUSD(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """SenderFee value"""
  SenderFee(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """SenderFeeInUSD value"""
  SenderFeeInUSD(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String
}

"""Log fields"""
type EVM_DEXTrade_Fields_Log {
  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """LogAfterCallIndex value"""
  LogAfterCallIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Signature fields"""
  Signature: EVM_DEXTrade_Fields_Log_Signature

  """SmartContract value"""
  SmartContract(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String
}

"""Signature fields"""
type EVM_DEXTrade_Fields_Log_Signature {
  """Abi value"""
  Abi(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureHash value"""
  SignatureHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """SignatureType value"""
  SignatureType(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Receipt fields"""
type EVM_DEXTrade_Fields_Receipt {
  """ContractAddress value"""
  ContractAddress(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """CumulativeGasUsed value"""
  CumulativeGasUsed(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """L1 fields"""
  L1: EVM_DEXTrade_Fields_Receipt_L1

  """Status value"""
  Status(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""L1 fields"""
type EVM_DEXTrade_Fields_Receipt_L1 {
  """Fee value"""
  Fee(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPrice value"""
  GasPrice(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """GasPriceInUSD value"""
  GasPriceInUSD(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String
}

"""Trade fields"""
type EVM_DEXTrade_Fields_Trade {
  """Buy fields"""
  Buy: EVM_DEXTrade_Fields_Trade_Buy

  """Dex fields"""
  Dex: EVM_DEXTrade_Fields_Trade_Dex

  """Fees value"""
  Fees(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTrade_Fields_Trade_Fees_Select_Trade_Fees
  ): [EVM_DEXTrade_Fields_Trade_Trade_Fees]

  """PriceAsymmetry value"""
  PriceAsymmetry(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """Sell fields"""
  Sell: EVM_DEXTrade_Fields_Trade_Sell

  """Sender value"""
  Sender(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Buy fields"""
type EVM_DEXTrade_Fields_Trade_Buy {
  """Amount value"""
  Amount(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Buyer value"""
  Buyer(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """Currency fields"""
  Currency: EVM_DEXTrade_Fields_Trade_Buy_Currency

  """Ids value"""
  Ids(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTrade_Fields_Trade_Buy_Ids_Select_Trade_Buy_Ids
  ): [String]

  """OrderId value"""
  OrderId(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Price value"""
  Price(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """PriceInUSD value"""
  PriceInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """Seller value"""
  Seller(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """URIs value"""
  URIs(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTrade_Fields_Trade_Buy_URIs_Select_Trade_Buy_URIs
  ): [String]
}

"""Currency fields"""
type EVM_DEXTrade_Fields_Trade_Buy_Currency {
  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): Boolean

  """Name value"""
  Name(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Array of Trade_Buy_Ids includes or excludes provided value"""
input EVM_DEXTrade_Fields_Trade_Buy_Ids_Select_Trade_Buy_Ids {
  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]
}

"""Array of Trade_Buy_URIs includes or excludes provided value"""
input EVM_DEXTrade_Fields_Trade_Buy_URIs_Select_Trade_Buy_URIs {
  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]
}

"""Dex fields"""
type EVM_DEXTrade_Fields_Trade_Dex {
  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """OwnerAddress value"""
  OwnerAddress(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Pair fields"""
  Pair: EVM_DEXTrade_Fields_Trade_Dex_Pair

  """ProtocolFamily value"""
  ProtocolFamily(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolVersion value"""
  ProtocolVersion(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Pair fields"""
type EVM_DEXTrade_Fields_Trade_Dex_Pair {
  """Decimals value"""
  Decimals(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Int

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String
}

"""Selector for Trade_Fees"""
input EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector {
  """Select value for Payer"""
  Payer: OLAP_String

  """Select value for Recipient"""
  Recipient: OLAP_String

  """Select value for Currency"""
  Currency: EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector_FieldSelector

  """Select value for Amount"""
  Amount: EVM_Amount_With_Decimals

  """Select value for AmountInUSD"""
  AmountInUSD: EVM_Amount_With_Decimals
}

"""Selector for Trade_Fees_Currency"""
input EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector_FieldSelector {
  """Select value for SmartContract"""
  SmartContract: OLAP_String

  """Select value for ProtocolName"""
  ProtocolName: OLAP_String

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Symbol"""
  Symbol: OLAP_String

  """Select value for Decimals"""
  Decimals: OLAP_Integer
}

"""Array of Trade_Fees includes or excludes provided value"""
input EVM_DEXTrade_Fields_Trade_Fees_Select_Trade_Fees {
  """Does not start with this element"""
  notStartsWith: [EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]
}

"""Sell fields"""
type EVM_DEXTrade_Fields_Trade_Sell {
  """Amount value"""
  Amount(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Buyer value"""
  Buyer(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """Currency fields"""
  Currency: EVM_DEXTrade_Fields_Trade_Sell_Currency

  """Ids value"""
  Ids(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTrade_Fields_Trade_Sell_Ids_Select_Trade_Sell_Ids
  ): [String]

  """OrderId value"""
  OrderId(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """Price value"""
  Price(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): Float

  """PriceInUSD value"""
  PriceInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """Seller value"""
  Seller(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """URIs value"""
  URIs(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTrade_Fields_Trade_Sell_URIs_Select_Trade_Sell_URIs

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): [String]
}

"""Currency fields"""
type EVM_DEXTrade_Fields_Trade_Sell_Currency {
  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Boolean

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Array of Trade_Sell_Ids includes or excludes provided value"""
input EVM_DEXTrade_Fields_Trade_Sell_Ids_Select_Trade_Sell_Ids {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]
}

"""Array of Trade_Sell_URIs includes or excludes provided value"""
input EVM_DEXTrade_Fields_Trade_Sell_URIs_Select_Trade_Sell_URIs {
  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]
}

"""Trade_Fees fields"""
type EVM_DEXTrade_Fields_Trade_Trade_Fees {
  Amount: String
  AmountInUSD: String
  Currency: EVM_DEXTrade_Fields_Trade_Trade_Fees_Currency
  Payer: String
  Recipient: String
}

"""Trade_Fees_Currency fields"""
type EVM_DEXTrade_Fields_Trade_Trade_Fees_Currency {
  Decimals: Int
  Name: String
  ProtocolName: String
  SmartContract: String
  Symbol: String
}

"""Transaction fields"""
type EVM_DEXTrade_Fields_Transaction {
  """Cost value"""
  Cost(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """CostInUSD value"""
  CostInUSD(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasFeeCap value"""
  GasFeeCap(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """GasFeeCapInUSD value"""
  GasFeeCapInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPrice value"""
  GasPrice(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """GasPriceInUSD value"""
  GasPriceInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasTipCap value"""
  GasTipCap(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasTipCapInUSD value"""
  GasTipCapInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """Index value"""
  Index(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Int

  """Nonce value"""
  Nonce(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """Protected value"""
  Protected(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """To value"""
  To(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): Int

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """ValueInUSD value"""
  ValueInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String
}

"""TransactionStatus fields"""
type EVM_DEXTrade_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """FaultError value"""
  FaultError(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """Success value"""
  Success(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): Boolean
}

input EVM_DEXTrade_Filter {
  """Select by TransactionStatus"""
  TransactionStatus: EVM_DEXTrade_Input_TransactionStatus_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Block"""
  Block: EVM_DEXTrade_Input_Block_InputType

  """Select by Transaction"""
  Transaction: EVM_DEXTrade_Input_Transaction_InputType

  """Select by Fee"""
  Fee: EVM_DEXTrade_Input_Fee_InputType

  """Select by Call"""
  Call: EVM_DEXTrade_Input_Call_InputType

  """Any combination ( as OR ) of supplied conditions"""
  any: [EVM_DEXTrade_FilterAny!]

  """Select by Receipt"""
  Receipt: EVM_DEXTrade_Input_Receipt_InputType

  """Select by Log"""
  Log: EVM_DEXTrade_Input_Log_InputType

  """Select by Trade"""
  Trade: EVM_DEXTrade_Input_Trade_InputType
}

input EVM_DEXTrade_FilterAny {
  """Select by Block"""
  Block: EVM_DEXTrade_Input_Block_InputType

  """Select by Log"""
  Log: EVM_DEXTrade_Input_Log_InputType

  """Select by TransactionStatus"""
  TransactionStatus: EVM_DEXTrade_Input_TransactionStatus_InputType

  """Select by Fee"""
  Fee: EVM_DEXTrade_Input_Fee_InputType

  """Select by Receipt"""
  Receipt: EVM_DEXTrade_Input_Receipt_InputType

  """Select by Transaction"""
  Transaction: EVM_DEXTrade_Input_Transaction_InputType

  """Select by Trade"""
  Trade: EVM_DEXTrade_Input_Trade_InputType

  """Select by Call"""
  Call: EVM_DEXTrade_Input_Call_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger
}

"""Select by Block"""
input EVM_DEXTrade_Input_Block_InputType {
  L1: EVM_DEXTrade_Input_Block_L1_InputType
  GasUsed: OLAP_BigInteger
  Date: OLAP_Date
  GasLimit: OLAP_BigInteger
  Difficulty: OLAP_BigInteger
  Coinbase: OLAP_String
  ParentHash: OLAP_String
  Hash: OLAP_String
  Number: OLAP_BigInteger
  BaseFee: OLAP_BigInteger
  Time: OLAP_DateTime
  Nonce: OLAP_BigInteger
}

"""Select by L1"""
input EVM_DEXTrade_Input_Block_L1_InputType {
  Hash: OLAP_String
  ParentHash: OLAP_String
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_DEXTrade_Input_Call_CallPath_Input_Call_CallPath {
  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer
}

"""Select by Call"""
input EVM_DEXTrade_Input_Call_InputType {
  Error: OLAP_String
  GasUsed: OLAP_BigInteger
  To: OLAP_String
  CallerIndex: OLAP_Integer
  SelfDestruct: Boolean
  Value: OLAP_BigInteger
  Delegated: Boolean
  Index: OLAP_Integer
  Success: Boolean
  CallPath: EVM_DEXTrade_Input_Call_CallPath_Input_Call_CallPath
  Reverted: Boolean
  Signature: EVM_DEXTrade_Input_Call_Signature_InputType
  Gas: OLAP_BigInteger
  From: OLAP_String
  Create: Boolean
  InternalCalls: OLAP_Integer
}

"""Select by Signature"""
input EVM_DEXTrade_Input_Call_Signature_InputType {
  SignatureHash: OLAP_String
  Signature: OLAP_String
  Name: OLAP_String
  Abi: OLAP_String
  SignatureType: Boolean
  Parsed: Boolean
}

"""Select by Fee"""
input EVM_DEXTrade_Input_Fee_InputType {
  SavingsInUSD: EVM_Amount_With_Decimals
  PriorityFeePerGas: EVM_Amount_With_Decimals
  Burnt: EVM_Amount_With_Decimals
  MinerReward: EVM_Amount_With_Decimals
  EffectiveGasPrice: EVM_Amount_With_Decimals
  GasRefund: OLAP_BigInteger
  SenderFeeInUSD: EVM_Amount_With_Decimals
  Savings: EVM_Amount_With_Decimals
  EffectiveGasPriceInUSD: EVM_Amount_With_Decimals
  PriorityFeePerGasInUSD: EVM_Amount_With_Decimals
  SenderFee: EVM_Amount_With_Decimals
  BurntInUSD: EVM_Amount_With_Decimals
  MinerRewardInUSD: EVM_Amount_With_Decimals
}

"""Select by Log"""
input EVM_DEXTrade_Input_Log_InputType {
  LogAfterCallIndex: OLAP_Integer
  Signature: EVM_DEXTrade_Input_Log_Signature_InputType
  SmartContract: OLAP_String
  Index: OLAP_Integer
}

"""Select by Signature"""
input EVM_DEXTrade_Input_Log_Signature_InputType {
  Parsed: Boolean
  Abi: OLAP_String
  SignatureType: OLAP_Integer
  SignatureHash: OLAP_String
  Signature: OLAP_String
  Name: OLAP_String
}

"""Select by Receipt"""
input EVM_DEXTrade_Input_Receipt_InputType {
  GasUsed: OLAP_BigInteger
  Status: OLAP_BigInteger
  ContractAddress: OLAP_String
  L1: EVM_DEXTrade_Input_Receipt_L1_InputType
  CumulativeGasUsed: OLAP_BigInteger
  Type: OLAP_Integer
}

"""Select by L1"""
input EVM_DEXTrade_Input_Receipt_L1_InputType {
  Fee: EVM_Amount_With_Decimals
  FeeInUSD: EVM_Amount_With_Decimals
  GasPrice: EVM_Amount_With_Decimals
  GasPriceInUSD: EVM_Amount_With_Decimals
}

"""Select by Currency"""
input EVM_DEXTrade_Input_Trade_Buy_Currency_InputType {
  ProtocolName: OLAP_String
  HasURI: Boolean
  Decimals: OLAP_Integer
  SmartContract: OLAP_String
  Fungible: Boolean
  Symbol: OLAP_String
  Name: OLAP_String
}

"""Array of Trade_Buy_Ids includes or excludes provided value"""
input EVM_DEXTrade_Input_Trade_Buy_Ids_Input_Trade_Buy_Ids {
  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]
}

"""Select by Buy"""
input EVM_DEXTrade_Input_Trade_Buy_InputType {
  Currency: EVM_DEXTrade_Input_Trade_Buy_Currency_InputType
  Price: OLAP_Float
  Ids: EVM_DEXTrade_Input_Trade_Buy_Ids_Input_Trade_Buy_Ids
  Amount: EVM_Amount_With_Decimals
  AmountInUSD: EVM_Amount_With_Decimals
  PriceInUSD: OLAP_Float
  URIs: EVM_DEXTrade_Input_Trade_Buy_URIs_Input_Trade_Buy_URIs
  OrderId: OLAP_String
  Buyer: OLAP_String
  Seller: OLAP_String
}

"""Array of Trade_Buy_URIs includes or excludes provided value"""
input EVM_DEXTrade_Input_Trade_Buy_URIs_Input_Trade_Buy_URIs {
  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]
}

"""Select by Dex"""
input EVM_DEXTrade_Input_Trade_Dex_InputType {
  SmartContract: OLAP_String
  OwnerAddress: OLAP_String
  ProtocolName: OLAP_String
  ProtocolFamily: OLAP_String
  Delegated: Boolean
  ProtocolVersion: OLAP_String
  Pair: EVM_DEXTrade_Input_Trade_Dex_Pair_InputType
  DelegatedTo: OLAP_String
}

"""Select by Pair"""
input EVM_DEXTrade_Input_Trade_Dex_Pair_InputType {
  SmartContract: OLAP_String
  Symbol: OLAP_String
  Name: OLAP_String
  Decimals: OLAP_Integer
}

"""Selector for Trade_Fees"""
input EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector {
  """Select value for Amount"""
  Amount: EVM_Amount_With_Decimals

  """Select value for AmountInUSD"""
  AmountInUSD: EVM_Amount_With_Decimals

  """Select value for Payer"""
  Payer: OLAP_String

  """Select value for Recipient"""
  Recipient: OLAP_String

  """Select value for Currency"""
  Currency: EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector_FieldSelector
}

"""Selector for Trade_Fees_Currency"""
input EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector_FieldSelector {
  """Select value for SmartContract"""
  SmartContract: OLAP_String

  """Select value for ProtocolName"""
  ProtocolName: OLAP_String

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Symbol"""
  Symbol: OLAP_String

  """Select value for Decimals"""
  Decimals: OLAP_Integer
}

"""Array of Trade_Fees includes or excludes provided value"""
input EVM_DEXTrade_Input_Trade_Fees_Input_Trade_Fees {
  """Includes this element"""
  includes: [EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer
}

"""Select by Trade"""
input EVM_DEXTrade_Input_Trade_InputType {
  Sell: EVM_DEXTrade_Input_Trade_Sell_InputType
  Dex: EVM_DEXTrade_Input_Trade_Dex_InputType
  Sender: OLAP_String
  Fees: EVM_DEXTrade_Input_Trade_Fees_Input_Trade_Fees
  Success: Boolean
  Buy: EVM_DEXTrade_Input_Trade_Buy_InputType
  PriceAsymmetry: OLAP_Float
}

"""Select by Currency"""
input EVM_DEXTrade_Input_Trade_Sell_Currency_InputType {
  HasURI: Boolean
  Symbol: OLAP_String
  ProtocolName: OLAP_String
  Fungible: Boolean
  SmartContract: OLAP_String
  Decimals: OLAP_Integer
  Name: OLAP_String
}

"""Array of Trade_Sell_Ids includes or excludes provided value"""
input EVM_DEXTrade_Input_Trade_Sell_Ids_Input_Trade_Sell_Ids {
  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]
}

"""Select by Sell"""
input EVM_DEXTrade_Input_Trade_Sell_InputType {
  Amount: EVM_Amount_With_Decimals
  Ids: EVM_DEXTrade_Input_Trade_Sell_Ids_Input_Trade_Sell_Ids
  PriceInUSD: OLAP_Float
  AmountInUSD: EVM_Amount_With_Decimals
  Buyer: OLAP_String
  URIs: EVM_DEXTrade_Input_Trade_Sell_URIs_Input_Trade_Sell_URIs
  Price: OLAP_Float
  Seller: OLAP_String
  OrderId: OLAP_String
  Currency: EVM_DEXTrade_Input_Trade_Sell_Currency_InputType
}

"""Array of Trade_Sell_URIs includes or excludes provided value"""
input EVM_DEXTrade_Input_Trade_Sell_URIs_Input_Trade_Sell_URIs {
  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]
}

"""Select by Transaction"""
input EVM_DEXTrade_Input_Transaction_InputType {
  Protected: Boolean
  Nonce: OLAP_BigInteger
  GasPriceInUSD: EVM_Amount_With_Decimals
  From: OLAP_String
  CostInUSD: EVM_Amount_With_Decimals
  ValueInUSD: EVM_Amount_With_Decimals
  Index: OLAP_Integer
  GasFeeCap: EVM_Amount_With_Decimals
  Value: EVM_Amount_With_Decimals
  GasTipCap: EVM_Amount_With_Decimals
  GasFeeCapInUSD: EVM_Amount_With_Decimals
  Gas: OLAP_BigInteger
  GasPrice: EVM_Amount_With_Decimals
  To: OLAP_String
  Time: OLAP_DateTime
  Cost: EVM_Amount_With_Decimals
  GasTipCapInUSD: EVM_Amount_With_Decimals
  Type: OLAP_Integer
  Hash: OLAP_String
}

"""Select by TransactionStatus"""
input EVM_DEXTrade_Input_TransactionStatus_InputType {
  EndError: OLAP_String
  Success: Boolean
  FaultError: OLAP_String
}

"""Limit definition"""
input EVM_DEXTrade_Limit {
  """Offset of results"""
  offset: Int = 0

  """Max count in results"""
  count: Int = 0
}

"""LimitBy definition"""
input EVM_DEXTrade_LimitBy {
  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_DEXTrade_EnumFields!]

  """Max count in results"""
  count: Int = 0
}

"""Listed names of numeric fields in a cube"""
enum EVM_DEXTrade_NumFields {
  Fee_PriorityFeePerGasInUSD
  Transaction_GasTipCap
  Transaction_GasPriceInUSD
  Block_Number
  Trade_Sell_Price
  Receipt_Type
  Transaction_Cost
  Call_Index
  Receipt_Status
  Trade_Sell_Currency_Decimals
  Trade_Buy_Amount
  Trade_Buy_Currency_Decimals
  Transaction_Index
  Fee_EffectiveGasPriceInUSD
  Transaction_GasPrice
  Trade_Buy_PriceInUSD
  Transaction_CostInUSD
  Transaction_GasFeeCapInUSD
  Transaction_Gas
  Block_BaseFee
  Trade_Sell_Amount
  Fee_GasRefund
  Block_GasUsed
  Receipt_L1_GasPriceInUSD
  Fee_Savings
  Transaction_GasTipCapInUSD
  Call_InternalCalls
  Fee_EffectiveGasPrice
  Fee_SavingsInUSD
  Receipt_L1_FeeInUSD
  Receipt_L1_GasPrice
  Receipt_GasUsed
  Trade_Sell_PriceInUSD
  Transaction_Type
  Block_GasLimit
  Receipt_CumulativeGasUsed
  Fee_SenderFee
  Log_LogAfterCallIndex
  Call_Gas
  Transaction_GasFeeCap
  Trade_PriceAsymmetry
  Fee_BurntInUSD
  Transaction_Nonce
  Trade_Buy_AmountInUSD
  Fee_PriorityFeePerGas
  Trade_Sell_AmountInUSD
  Fee_MinerReward
  ChainId
  Log_Index
  Transaction_Value
  Trade_Dex_Pair_Decimals
  Transaction_ValueInUSD
  Call_CallerIndex
  Log_Signature_SignatureType
  Call_Value
  Block_Nonce
  Fee_SenderFeeInUSD
  Fee_Burnt
  Fee_MinerRewardInUSD
  Call_GasUsed
  Receipt_L1_Fee
  Block_Difficulty
  Trade_Buy_Price
}

"""Order by"""
input EVM_DEXTrade_Ordering {
  """Select a field to sort descending"""
  descending: EVM_DEXTrade_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String

  """Select a field to sort ascending"""
  ascending: EVM_DEXTrade_EnumFields
}

"""Listed names of string fields in a cube"""
enum EVM_DEXTrade_StringFields {
  Trade_Dex_Pair_Name
  Log_Signature_Abi
  Trade_Sell_Buyer
  Transaction_CostInUSD
  Trade_Buy_AmountInUSD
  Trade_Sell_Seller
  Call_Signature_Signature
  Fee_MinerReward
  Trade_Sell_Currency_Symbol
  Call_Signature_SignatureHash
  Transaction_Nonce
  Fee_PriorityFeePerGasInUSD
  Log_Signature_SignatureHash
  Trade_Dex_Pair_Symbol
  Trade_Dex_Pair_SmartContract
  Block_Date
  Trade_Dex_SmartContract
  Fee_EffectiveGasPrice
  Transaction_GasPriceInUSD
  Block_BaseFee
  Trade_Buy_OrderId
  Receipt_CumulativeGasUsed
  ChainId
  Transaction_Gas
  Block_Coinbase
  Trade_Sender
  Block_ParentHash
  Trade_Dex_OwnerAddress
  Trade_Dex_ProtocolFamily
  Block_Hash
  Block_L1_Hash
  Trade_Buy_Amount
  Fee_PriorityFeePerGas
  Receipt_L1_GasPrice
  Trade_Buy_Buyer
  Block_Nonce
  Fee_SenderFeeInUSD
  Fee_EffectiveGasPriceInUSD
  Fee_GasRefund
  Call_From
  Transaction_GasFeeCapInUSD
  Fee_Savings
  Transaction_Cost
  Trade_Buy_Currency_Symbol
  Trade_Sell_Currency_Name
  Block_Difficulty
  Receipt_L1_GasPriceInUSD
  Call_Signature_Abi
  Log_Signature_Signature
  Trade_Dex_DelegatedTo
  Trade_Buy_Currency_ProtocolName
  Log_Signature_Name
  Trade_Buy_Currency_Name
  Transaction_ValueInUSD
  Block_Number
  Receipt_Status
  Transaction_Hash
  Transaction_Value
  Receipt_L1_Fee
  Log_SmartContract
  Trade_Sell_Amount
  Fee_SavingsInUSD
  Fee_Burnt
  Block_L1_ParentHash
  Transaction_GasTipCapInUSD
  Fee_BurntInUSD
  Call_Error
  Trade_Buy_Seller
  Transaction_To
  Trade_Buy_Currency_SmartContract
  Fee_MinerRewardInUSD
  TransactionStatus_FaultError
  Trade_Sell_Currency_SmartContract
  Trade_Sell_OrderId
  Block_GasLimit
  Trade_Sell_Currency_ProtocolName
  Transaction_From
  Call_GasUsed
  Call_Gas
  Trade_Dex_ProtocolVersion
  Call_Value
  Receipt_L1_FeeInUSD
  Trade_Sell_AmountInUSD
  Trade_Dex_ProtocolName
  TransactionStatus_EndError
  Receipt_ContractAddress
  Call_Signature_Name
  Fee_SenderFee
  Transaction_GasTipCap
  Receipt_GasUsed
  Transaction_GasPrice
  Call_To
  Block_GasUsed
  Transaction_GasFeeCap
}

"""Listed names of comparable fields in a cube"""
enum EVM_DEXTradeByToken_CompareFields {
  Log_Index
  Receipt_Type
  Fee_PriorityFeePerGas
  Receipt_Status
  Transaction_Protected
  Trade_PriceInUSD
  Block_Date
  Fee_MinerRewardInUSD
  Trade_PriceAsymmetry
  Transaction_ValueInUSD
  Fee_SenderFee
  Block_Difficulty
  Transaction_Value
  Trade_Dex_Pair_Decimals
  Receipt_CumulativeGasUsed
  Receipt_L1_GasPrice
  Block_GasUsed
  Trade_Side_AmountInUSD
  Transaction_Gas
  Fee_SenderFeeInUSD
  Call_Reverted
  Log_Signature_Parsed
  Transaction_Time
  Trade_Side_Currency_Decimals
  Trade_Side_Currency_Fungible
  ChainId
  Trade_Side_Amount
  Fee_Burnt
  Call_Gas
  Transaction_GasTipCapInUSD
  Trade_AmountInUSD
  Trade_Currency_HasURI
  Fee_SavingsInUSD
  Fee_MinerReward
  Call_GasUsed
  Call_Success
  Log_LogAfterCallIndex
  Fee_PriorityFeePerGasInUSD
  Receipt_L1_GasPriceInUSD
  Fee_BurntInUSD
  TransactionStatus_Success
  Block_Number
  Trade_Currency_Fungible
  Block_BaseFee
  Call_Index
  Block_GasLimit
  Fee_Savings
  Transaction_GasFeeCap
  Call_CallerIndex
  Transaction_Index
  Fee_EffectiveGasPriceInUSD
  Call_InternalCalls
  Receipt_L1_FeeInUSD
  Transaction_CostInUSD
  Fee_GasRefund
  Call_Create
  Call_Signature_Parsed
  Transaction_Cost
  Trade_Amount
  Fee_EffectiveGasPrice
  Trade_Dex_Delegated
  Transaction_GasPrice
  Receipt_L1_Fee
  Transaction_GasFeeCapInUSD
  Call_SelfDestruct
  Log_Signature_SignatureType
  Call_Value
  Transaction_GasPriceInUSD
  Trade_Price
  Transaction_Type
  Transaction_Nonce
  Call_Signature_SignatureType
  Transaction_GasTipCap
  Call_Delegated
  Trade_Side_Currency_HasURI
  Trade_Currency_Decimals
  Trade_Success
  Block_Nonce
  Block_Time
  Receipt_GasUsed
}

"""DEX Trades by a token in EVM Blockchain"""
type EVM_DEXTradeByToken_Cube {
  """Block fields"""
  Block: EVM_DEXTradeByToken_Fields_Block

  """Call fields"""
  Call: EVM_DEXTradeByToken_Fields_Call

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Fee fields"""
  Fee: EVM_DEXTradeByToken_Fields_Fee

  """Log fields"""
  Log: EVM_DEXTradeByToken_Fields_Log

  """Receipt fields"""
  Receipt: EVM_DEXTradeByToken_Fields_Receipt

  """Trade fields"""
  Trade: EVM_DEXTradeByToken_Fields_Trade

  """Transaction fields"""
  Transaction: EVM_DEXTradeByToken_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: EVM_DEXTradeByToken_Fields_TransactionStatus

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: EVM_DEXTradeByToken_StringFields!

    """Side2 argument"""
    side2: EVM_DEXTradeByToken_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Argument for Average of the values"""
    of: EVM_DEXTradeByToken_NumFields!
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_DEXTradeByToken_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_DEXTradeByToken_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [EVM_DEXTradeByToken_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: EVM_DEXTradeByToken_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_DEXTradeByToken_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_DEXTradeByToken_NumFields
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: EVM_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_DEXTradeByToken_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """Argument for Kurtosis for a set of values"""
    of: EVM_DEXTradeByToken_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Median for a set of values"""
  median(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: EVM_DEXTradeByToken_NumFields!
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: EVM_DEXTradeByToken_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: EVM_DEXTradeByToken_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_DEXTradeByToken_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: EVM_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_DEXTradeByToken_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_DEXTradeByToken_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Uniq values of the field"""
    of: [EVM_DEXTradeByToken_EnumFields!]!
  ): String
}

"""Listed names of fields in a cube"""
enum EVM_DEXTradeByToken_EnumFields {
  Call_Signature_Parsed
  Receipt_Status
  Transaction_Cost
  Fee_SenderFee
  Transaction_From
  Block_Number
  Trade_Currency_Decimals
  Trade_Side_Ids
  Trade_Fees
  Fee_SenderFeeInUSD
  Call_Value
  Transaction_GasPriceInUSD
  Call_Success
  Receipt_L1_GasPrice
  Trade_Price
  ChainId
  Receipt_GasUsed
  Log_Signature_SignatureType
  Call_To
  Block_Difficulty
  Call_Error
  Transaction_Gas
  Block_Hash
  Call_CallPath
  Trade_Side_Currency_ProtocolName
  Block_Time
  Trade_Dex_ProtocolName
  Trade_Sender
  Trade_Currency_Fungible
  Trade_Dex_Pair_Symbol
  Block_GasLimit
  Trade_Seller
  Transaction_Time
  Log_Index
  Call_Signature_SignatureHash
  Transaction_Protected
  Log_Signature_Name
  Block_L1_Hash
  Trade_Side_URIs
  Fee_EffectiveGasPriceInUSD
  Transaction_GasPrice
  Call_SelfDestruct
  Trade_PriceInUSD
  Trade_OrderId
  Fee_PriorityFeePerGasInUSD
  Trade_Ids
  Call_Signature_SignatureType
  Trade_Currency_SmartContract
  Transaction_GasTipCap
  Fee_EffectiveGasPrice
  Block_GasUsed
  Receipt_L1_FeeInUSD
  Log_Signature_Abi
  Receipt_L1_GasPriceInUSD
  Call_Signature_Abi
  Transaction_CostInUSD
  Transaction_Nonce
  Transaction_Index
  Call_Reverted
  Transaction_GasTipCapInUSD
  Trade_Amount
  Trade_URIs
  Trade_Side_Currency_Symbol
  Trade_Dex_ProtocolVersion
  Log_Signature_SignatureHash
  Transaction_Hash
  Log_SmartContract
  Call_Delegated
  Call_InternalCalls
  Block_Nonce
  Trade_Dex_Delegated
  Trade_Dex_OwnerAddress
  Trade_Side_Currency_Fungible
  Log_Signature_Parsed
  Trade_Side_OrderId
  Trade_PriceAsymmetry
  Call_CallerIndex
  Block_L1_ParentHash
  Transaction_GasFeeCapInUSD
  Call_From
  Trade_Side_Currency_Name
  Call_Signature_Signature
  Fee_SavingsInUSD
  Receipt_CumulativeGasUsed
  Trade_Dex_Pair_SmartContract
  Trade_Currency_Symbol
  Trade_Side_Buyer
  Trade_Dex_DelegatedTo
  Trade_Side_Seller
  Trade_Dex_Pair_Name
  Block_Coinbase
  Trade_Side_Currency_HasURI
  Trade_Dex_SmartContract
  TransactionStatus_Success
  Trade_Side_Currency_SmartContract
  Receipt_L1_Fee
  Trade_Dex_Pair_Decimals
  Trade_Buyer
  Fee_GasRefund
  Call_GasUsed
  Transaction_GasFeeCap
  Log_Signature_Signature
  Call_Index
  Receipt_Type
  Fee_PriorityFeePerGas
  Trade_Currency_ProtocolName
  Call_Gas
  Trade_Dex_ProtocolFamily
  Trade_Currency_HasURI
  Fee_MinerRewardInUSD
  TransactionStatus_FaultError
  Fee_Savings
  Call_Create
  Trade_Side_AmountInUSD
  Fee_BurntInUSD
  Receipt_ContractAddress
  Trade_Side_Currency_Decimals
  Transaction_Value
  Trade_Side_Type
  Fee_Burnt
  Block_ParentHash
  Log_LogAfterCallIndex
  Transaction_ValueInUSD
  Transaction_To
  Fee_MinerReward
  Trade_AmountInUSD
  Trade_Currency_Name
  Block_Date
  Block_BaseFee
  Trade_Success
  Call_Signature_Name
  Trade_Side_Amount
  TransactionStatus_EndError
  Transaction_Type
}

"""Block fields"""
type EVM_DEXTradeByToken_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Difficulty value"""
  Difficulty(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasLimit value"""
  GasLimit(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """L1 fields"""
  L1: EVM_DEXTradeByToken_Fields_Block_L1

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Time value"""
  Time(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): DateTime
}

"""L1 fields"""
type EVM_DEXTradeByToken_Fields_Block_L1 {
  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentHash value"""
  ParentHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String
}

"""Call fields"""
type EVM_DEXTradeByToken_Fields_Call {
  """CallPath value"""
  CallPath(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTradeByToken_Fields_Call_CallPath_Select_Call_CallPath

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): [Int]

  """CallerIndex value"""
  CallerIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Create value"""
  Create(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Boolean

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Error value"""
  Error(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """InternalCalls value"""
  InternalCalls(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Reverted value"""
  Reverted(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """SelfDestruct value"""
  SelfDestruct(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): Boolean

  """Signature fields"""
  Signature: EVM_DEXTradeByToken_Fields_Call_Signature

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """To value"""
  To(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """Value value"""
  Value(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_DEXTradeByToken_Fields_Call_CallPath_Select_Call_CallPath {
  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer
}

"""Signature fields"""
type EVM_DEXTradeByToken_Fields_Call_Signature {
  """Abi value"""
  Abi(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Name value"""
  Name(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureHash value"""
  SignatureHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """SignatureType value"""
  SignatureType(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Fee fields"""
type EVM_DEXTradeByToken_Fields_Fee {
  """Burnt value"""
  Burnt(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """BurntInUSD value"""
  BurntInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """EffectiveGasPrice value"""
  EffectiveGasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """EffectiveGasPriceInUSD value"""
  EffectiveGasPriceInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasRefund value"""
  GasRefund(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """MinerReward value"""
  MinerReward(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """MinerRewardInUSD value"""
  MinerRewardInUSD(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """PriorityFeePerGas value"""
  PriorityFeePerGas(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """PriorityFeePerGasInUSD value"""
  PriorityFeePerGasInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Savings value"""
  Savings(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """SavingsInUSD value"""
  SavingsInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """SenderFee value"""
  SenderFee(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """SenderFeeInUSD value"""
  SenderFeeInUSD(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String
}

"""Log fields"""
type EVM_DEXTradeByToken_Fields_Log {
  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """LogAfterCallIndex value"""
  LogAfterCallIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Signature fields"""
  Signature: EVM_DEXTradeByToken_Fields_Log_Signature

  """SmartContract value"""
  SmartContract(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String
}

"""Signature fields"""
type EVM_DEXTradeByToken_Fields_Log_Signature {
  """Abi value"""
  Abi(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Parsed value"""
  Parsed(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): Boolean

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """SignatureType value"""
  SignatureType(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Int
}

"""Receipt fields"""
type EVM_DEXTradeByToken_Fields_Receipt {
  """ContractAddress value"""
  ContractAddress(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """CumulativeGasUsed value"""
  CumulativeGasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """L1 fields"""
  L1: EVM_DEXTradeByToken_Fields_Receipt_L1

  """Status value"""
  Status(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""L1 fields"""
type EVM_DEXTradeByToken_Fields_Receipt_L1 {
  """Fee value"""
  Fee(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPriceInUSD value"""
  GasPriceInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Trade fields"""
type EVM_DEXTradeByToken_Fields_Trade {
  """Amount value"""
  Amount(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Buyer value"""
  Buyer(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Currency fields"""
  Currency: EVM_DEXTradeByToken_Fields_Trade_Currency

  """Dex fields"""
  Dex: EVM_DEXTradeByToken_Fields_Trade_Dex

  """Fees value"""
  Fees(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTradeByToken_Fields_Trade_Fees_Select_Trade_Fees

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): [EVM_DEXTradeByToken_Fields_Trade_Trade_Fees]

  """Ids value"""
  Ids(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTradeByToken_Fields_Trade_Ids_Select_Trade_Ids

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): [String]

  """OrderId value"""
  OrderId(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Price value"""
  Price(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """PriceAsymmetry value"""
  PriceAsymmetry(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """PriceInUSD value"""
  PriceInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """Seller value"""
  Seller(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Sender value"""
  Sender(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Side fields"""
  Side: EVM_DEXTradeByToken_Fields_Trade_Side

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """URIs value"""
  URIs(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTradeByToken_Fields_Trade_URIs_Select_Trade_URIs
  ): [String]
}

"""Currency fields"""
type EVM_DEXTradeByToken_Fields_Trade_Currency {
  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): Boolean

  """Name value"""
  Name(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """ProtocolName value"""
  ProtocolName(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String
}

"""Dex fields"""
type EVM_DEXTradeByToken_Fields_Trade_Dex {
  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """OwnerAddress value"""
  OwnerAddress(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Pair fields"""
  Pair: EVM_DEXTradeByToken_Fields_Trade_Dex_Pair

  """ProtocolFamily value"""
  ProtocolFamily(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolVersion value"""
  ProtocolVersion(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Pair fields"""
type EVM_DEXTradeByToken_Fields_Trade_Dex_Pair {
  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String
}

"""Selector for Trade_Fees"""
input EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector {
  """Select value for AmountInUSD"""
  AmountInUSD: EVM_Amount_With_Decimals

  """Select value for Payer"""
  Payer: OLAP_String

  """Select value for Recipient"""
  Recipient: OLAP_String

  """Select value for Currency"""
  Currency: EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector_FieldSelector

  """Select value for Amount"""
  Amount: EVM_Amount_With_Decimals
}

"""Selector for Trade_Fees_Currency"""
input EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector_FieldSelector {
  """Select value for Decimals"""
  Decimals: OLAP_Integer

  """Select value for SmartContract"""
  SmartContract: OLAP_String

  """Select value for ProtocolName"""
  ProtocolName: OLAP_String

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Symbol"""
  Symbol: OLAP_String
}

"""Array of Trade_Fees includes or excludes provided value"""
input EVM_DEXTradeByToken_Fields_Trade_Fees_Select_Trade_Fees {
  """Does not End with this element"""
  notEndsWith: [EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]
}

"""Array of Trade_Ids includes or excludes provided value"""
input EVM_DEXTradeByToken_Fields_Trade_Ids_Select_Trade_Ids {
  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer
}

"""Side fields"""
type EVM_DEXTradeByToken_Fields_Trade_Side {
  """Amount value"""
  Amount(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Buyer value"""
  Buyer(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Currency fields"""
  Currency: EVM_DEXTradeByToken_Fields_Trade_Side_Currency

  """Ids value"""
  Ids(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTradeByToken_Fields_Trade_Side_Ids_Select_Trade_Side_Ids
  ): [String]

  """OrderId value"""
  OrderId(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Seller value"""
  Seller(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side
  ): EVM_DEXTradeByToken_Fields_Trade_Side_Trade_Side_Output

  """URIs value"""
  URIs(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTradeByToken_Fields_Trade_Side_URIs_Select_Trade_Side_URIs
  ): [String]
}

"""Currency fields"""
type EVM_DEXTradeByToken_Fields_Trade_Side_Currency {
  """Decimals value"""
  Decimals(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): Int

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Name value"""
  Name(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Array of Trade_Side_Ids includes or excludes provided value"""
input EVM_DEXTradeByToken_Fields_Trade_Side_Ids_Select_Trade_Side_Ids {
  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]
}

"""Enumeration for Trade_Side"""
enum EVM_DEXTradeByToken_Fields_Trade_Side_Trade_Side_Output {
  """Trade_Side buy"""
  buy

  """Trade_Side sell"""
  sell
}

"""Select filters for Trade_Side"""
input EVM_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side {
  """Exact match"""
  is: EVM_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input

  """Not this"""
  not: EVM_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input

  """One of the values"""
  in: [EVM_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input!]

  """Not one of the values"""
  notIn: [EVM_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input!]
}

"""Enumeration for Trade_Side"""
enum EVM_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input {
  """Trade_Side buy"""
  buy

  """Trade_Side sell"""
  sell
}

"""Array of Trade_Side_URIs includes or excludes provided value"""
input EVM_DEXTradeByToken_Fields_Trade_Side_URIs_Select_Trade_Side_URIs {
  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]
}

"""Trade_Fees fields"""
type EVM_DEXTradeByToken_Fields_Trade_Trade_Fees {
  Amount: String
  AmountInUSD: String
  Currency: EVM_DEXTradeByToken_Fields_Trade_Trade_Fees_Currency
  Payer: String
  Recipient: String
}

"""Trade_Fees_Currency fields"""
type EVM_DEXTradeByToken_Fields_Trade_Trade_Fees_Currency {
  Decimals: Int
  Name: String
  ProtocolName: String
  SmartContract: String
  Symbol: String
}

"""Array of Trade_URIs includes or excludes provided value"""
input EVM_DEXTradeByToken_Fields_Trade_URIs_Select_Trade_URIs {
  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]
}

"""Transaction fields"""
type EVM_DEXTradeByToken_Fields_Transaction {
  """Cost value"""
  Cost(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """CostInUSD value"""
  CostInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """From value"""
  From(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Gas value"""
  Gas(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """GasFeeCap value"""
  GasFeeCap(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasFeeCapInUSD value"""
  GasFeeCapInUSD(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """GasPrice value"""
  GasPrice(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """GasPriceInUSD value"""
  GasPriceInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasTipCap value"""
  GasTipCap(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasTipCapInUSD value"""
  GasTipCapInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Index value"""
  Index(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Int

  """Nonce value"""
  Nonce(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Protected value"""
  Protected(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Time value"""
  Time(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): DateTime

  """To value"""
  To(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Int

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """ValueInUSD value"""
  ValueInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String
}

"""TransactionStatus fields"""
type EVM_DEXTradeByToken_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """FaultError value"""
  FaultError(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

input EVM_DEXTradeByToken_Filter {
  """Select by Block"""
  Block: EVM_DEXTradeByToken_Input_Block_InputType

  """Select by Receipt"""
  Receipt: EVM_DEXTradeByToken_Input_Receipt_InputType

  """Select by Transaction"""
  Transaction: EVM_DEXTradeByToken_Input_Transaction_InputType

  """Select by TransactionStatus"""
  TransactionStatus: EVM_DEXTradeByToken_Input_TransactionStatus_InputType

  """Select by Trade"""
  Trade: EVM_DEXTradeByToken_Input_Trade_InputType

  """Select by Fee"""
  Fee: EVM_DEXTradeByToken_Input_Fee_InputType

  """Select by Call"""
  Call: EVM_DEXTradeByToken_Input_Call_InputType

  """Select by Log"""
  Log: EVM_DEXTradeByToken_Input_Log_InputType

  """Any combination ( as OR ) of supplied conditions"""
  any: [EVM_DEXTradeByToken_FilterAny!]

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger
}

input EVM_DEXTradeByToken_FilterAny {
  """Select by Receipt"""
  Receipt: EVM_DEXTradeByToken_Input_Receipt_InputType

  """Select by TransactionStatus"""
  TransactionStatus: EVM_DEXTradeByToken_Input_TransactionStatus_InputType

  """Select by Call"""
  Call: EVM_DEXTradeByToken_Input_Call_InputType

  """Select by Log"""
  Log: EVM_DEXTradeByToken_Input_Log_InputType

  """Select by Trade"""
  Trade: EVM_DEXTradeByToken_Input_Trade_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Transaction"""
  Transaction: EVM_DEXTradeByToken_Input_Transaction_InputType

  """Select by Fee"""
  Fee: EVM_DEXTradeByToken_Input_Fee_InputType

  """Select by Block"""
  Block: EVM_DEXTradeByToken_Input_Block_InputType
}

"""Select by Block"""
input EVM_DEXTradeByToken_Input_Block_InputType {
  Difficulty: OLAP_BigInteger
  GasUsed: OLAP_BigInteger
  L1: EVM_DEXTradeByToken_Input_Block_L1_InputType
  GasLimit: OLAP_BigInteger
  Date: OLAP_Date
  Coinbase: OLAP_String
  Nonce: OLAP_BigInteger
  Time: OLAP_DateTime
  Hash: OLAP_String
  Number: OLAP_BigInteger
  ParentHash: OLAP_String
  BaseFee: OLAP_BigInteger
}

"""Select by L1"""
input EVM_DEXTradeByToken_Input_Block_L1_InputType {
  ParentHash: OLAP_String
  Hash: OLAP_String
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_DEXTradeByToken_Input_Call_CallPath_Input_Call_CallPath {
  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]
}

"""Select by Call"""
input EVM_DEXTradeByToken_Input_Call_InputType {
  To: OLAP_String
  From: OLAP_String
  Success: Boolean
  Gas: OLAP_BigInteger
  Create: Boolean
  CallerIndex: OLAP_Integer
  Delegated: Boolean
  GasUsed: OLAP_BigInteger
  Value: OLAP_BigInteger
  Error: OLAP_String
  Index: OLAP_Integer
  InternalCalls: OLAP_Integer
  Signature: EVM_DEXTradeByToken_Input_Call_Signature_InputType
  SelfDestruct: Boolean
  Reverted: Boolean
  CallPath: EVM_DEXTradeByToken_Input_Call_CallPath_Input_Call_CallPath
}

"""Select by Signature"""
input EVM_DEXTradeByToken_Input_Call_Signature_InputType {
  Abi: OLAP_String
  SignatureType: Boolean
  Name: OLAP_String
  Signature: OLAP_String
  Parsed: Boolean
  SignatureHash: OLAP_String
}

"""Select by Fee"""
input EVM_DEXTradeByToken_Input_Fee_InputType {
  Burnt: EVM_Amount_With_Decimals
  BurntInUSD: EVM_Amount_With_Decimals
  MinerReward: EVM_Amount_With_Decimals
  SenderFeeInUSD: EVM_Amount_With_Decimals
  EffectiveGasPrice: EVM_Amount_With_Decimals
  Savings: EVM_Amount_With_Decimals
  PriorityFeePerGas: EVM_Amount_With_Decimals
  EffectiveGasPriceInUSD: EVM_Amount_With_Decimals
  GasRefund: OLAP_BigInteger
  MinerRewardInUSD: EVM_Amount_With_Decimals
  PriorityFeePerGasInUSD: EVM_Amount_With_Decimals
  SavingsInUSD: EVM_Amount_With_Decimals
  SenderFee: EVM_Amount_With_Decimals
}

"""Select by Log"""
input EVM_DEXTradeByToken_Input_Log_InputType {
  Index: OLAP_Integer
  LogAfterCallIndex: OLAP_Integer
  Signature: EVM_DEXTradeByToken_Input_Log_Signature_InputType
  SmartContract: OLAP_String
}

"""Select by Signature"""
input EVM_DEXTradeByToken_Input_Log_Signature_InputType {
  SignatureHash: OLAP_String
  SignatureType: OLAP_Integer
  Name: OLAP_String
  Parsed: Boolean
  Signature: OLAP_String
  Abi: OLAP_String
}

"""Select by Receipt"""
input EVM_DEXTradeByToken_Input_Receipt_InputType {
  Type: OLAP_Integer
  L1: EVM_DEXTradeByToken_Input_Receipt_L1_InputType
  ContractAddress: OLAP_String
  Status: OLAP_BigInteger
  GasUsed: OLAP_BigInteger
  CumulativeGasUsed: OLAP_BigInteger
}

"""Select by L1"""
input EVM_DEXTradeByToken_Input_Receipt_L1_InputType {
  Fee: EVM_Amount_With_Decimals
  FeeInUSD: EVM_Amount_With_Decimals
  GasPrice: EVM_Amount_With_Decimals
  GasPriceInUSD: EVM_Amount_With_Decimals
}

"""Select by Currency"""
input EVM_DEXTradeByToken_Input_Trade_Currency_InputType {
  SmartContract: OLAP_String
  Fungible: Boolean
  Symbol: OLAP_String
  ProtocolName: OLAP_String
  Decimals: OLAP_Integer
  Name: OLAP_String
  HasURI: Boolean
}

"""Select by Dex"""
input EVM_DEXTradeByToken_Input_Trade_Dex_InputType {
  ProtocolFamily: OLAP_String
  OwnerAddress: OLAP_String
  DelegatedTo: OLAP_String
  SmartContract: OLAP_String
  Pair: EVM_DEXTradeByToken_Input_Trade_Dex_Pair_InputType
  Delegated: Boolean
  ProtocolName: OLAP_String
  ProtocolVersion: OLAP_String
}

"""Select by Pair"""
input EVM_DEXTradeByToken_Input_Trade_Dex_Pair_InputType {
  Name: OLAP_String
  Symbol: OLAP_String
  SmartContract: OLAP_String
  Decimals: OLAP_Integer
}

"""Selector for Trade_Fees"""
input EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector {
  """Select value for Currency"""
  Currency: EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector_FieldSelector

  """Select value for Amount"""
  Amount: EVM_Amount_With_Decimals

  """Select value for AmountInUSD"""
  AmountInUSD: EVM_Amount_With_Decimals

  """Select value for Payer"""
  Payer: OLAP_String

  """Select value for Recipient"""
  Recipient: OLAP_String
}

"""Selector for Trade_Fees_Currency"""
input EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector_FieldSelector {
  """Select value for Name"""
  Name: OLAP_String

  """Select value for Symbol"""
  Symbol: OLAP_String

  """Select value for Decimals"""
  Decimals: OLAP_Integer

  """Select value for SmartContract"""
  SmartContract: OLAP_String

  """Select value for ProtocolName"""
  ProtocolName: OLAP_String
}

"""Array of Trade_Fees includes or excludes provided value"""
input EVM_DEXTradeByToken_Input_Trade_Fees_Input_Trade_Fees {
  """Does not start with this element"""
  notStartsWith: [EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]
}

"""Array of Trade_Ids includes or excludes provided value"""
input EVM_DEXTradeByToken_Input_Trade_Ids_Input_Trade_Ids {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]
}

"""Select by Trade"""
input EVM_DEXTradeByToken_Input_Trade_InputType {
  Amount: EVM_Amount_With_Decimals
  Dex: EVM_DEXTradeByToken_Input_Trade_Dex_InputType
  Buyer: OLAP_String
  OrderId: OLAP_String
  Fees: EVM_DEXTradeByToken_Input_Trade_Fees_Input_Trade_Fees
  Success: Boolean
  Currency: EVM_DEXTradeByToken_Input_Trade_Currency_InputType
  Seller: OLAP_String
  Ids: EVM_DEXTradeByToken_Input_Trade_Ids_Input_Trade_Ids
  URIs: EVM_DEXTradeByToken_Input_Trade_URIs_Input_Trade_URIs
  Side: EVM_DEXTradeByToken_Input_Trade_Side_InputType
  PriceInUSD: OLAP_Float
  Sender: OLAP_String
  PriceAsymmetry: OLAP_Float
  Price: OLAP_Float
  AmountInUSD: EVM_Amount_With_Decimals
}

"""Select by Currency"""
input EVM_DEXTradeByToken_Input_Trade_Side_Currency_InputType {
  Fungible: Boolean
  SmartContract: OLAP_String
  HasURI: Boolean
  Decimals: OLAP_Integer
  ProtocolName: OLAP_String
  Symbol: OLAP_String
  Name: OLAP_String
}

"""Array of Trade_Side_Ids includes or excludes provided value"""
input EVM_DEXTradeByToken_Input_Trade_Side_Ids_Input_Trade_Side_Ids {
  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]
}

"""Select by Side"""
input EVM_DEXTradeByToken_Input_Trade_Side_InputType {
  Type: EVM_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side
  OrderId: OLAP_String
  Buyer: OLAP_String
  Ids: EVM_DEXTradeByToken_Input_Trade_Side_Ids_Input_Trade_Side_Ids
  Seller: OLAP_String
  URIs: EVM_DEXTradeByToken_Input_Trade_Side_URIs_Input_Trade_Side_URIs
  AmountInUSD: EVM_Amount_With_Decimals
  Currency: EVM_DEXTradeByToken_Input_Trade_Side_Currency_InputType
  Amount: EVM_Amount_With_Decimals
}

"""Select filters for Trade_Side"""
input EVM_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side {
  """One of the values"""
  in: [EVM_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input!]

  """Not one of the values"""
  notIn: [EVM_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input!]

  """Exact match"""
  is: EVM_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input

  """Not this"""
  not: EVM_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input
}

"""Enumeration for Trade_Side"""
enum EVM_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input {
  """Trade_Side buy"""
  buy

  """Trade_Side sell"""
  sell
}

"""Array of Trade_Side_URIs includes or excludes provided value"""
input EVM_DEXTradeByToken_Input_Trade_Side_URIs_Input_Trade_Side_URIs {
  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]
}

"""Array of Trade_URIs includes or excludes provided value"""
input EVM_DEXTradeByToken_Input_Trade_URIs_Input_Trade_URIs {
  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]
}

"""Select by Transaction"""
input EVM_DEXTradeByToken_Input_Transaction_InputType {
  Nonce: OLAP_BigInteger
  GasFeeCap: EVM_Amount_With_Decimals
  Index: OLAP_Integer
  Protected: Boolean
  Type: OLAP_Integer
  From: OLAP_String
  CostInUSD: EVM_Amount_With_Decimals
  Value: EVM_Amount_With_Decimals
  Cost: EVM_Amount_With_Decimals
  GasPrice: EVM_Amount_With_Decimals
  ValueInUSD: EVM_Amount_With_Decimals
  GasFeeCapInUSD: EVM_Amount_With_Decimals
  GasTipCap: EVM_Amount_With_Decimals
  GasTipCapInUSD: EVM_Amount_With_Decimals
  GasPriceInUSD: EVM_Amount_With_Decimals
  Time: OLAP_DateTime
  Hash: OLAP_String
  Gas: OLAP_BigInteger
  To: OLAP_String
}

"""Select by TransactionStatus"""
input EVM_DEXTradeByToken_Input_TransactionStatus_InputType {
  EndError: OLAP_String
  Success: Boolean
  FaultError: OLAP_String
}

"""Limit definition"""
input EVM_DEXTradeByToken_Limit {
  """Offset of results"""
  offset: Int = 0

  """Max count in results"""
  count: Int = 0
}

"""LimitBy definition"""
input EVM_DEXTradeByToken_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_DEXTradeByToken_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum EVM_DEXTradeByToken_NumFields {
  Trade_AmountInUSD
  Transaction_GasTipCap
  Trade_Side_Amount
  Transaction_ValueInUSD
  Block_Difficulty
  Fee_EffectiveGasPrice
  Block_GasLimit
  Fee_SavingsInUSD
  Receipt_L1_GasPrice
  Call_Value
  Transaction_Cost
  Fee_MinerReward
  Receipt_CumulativeGasUsed
  Block_BaseFee
  Fee_SenderFeeInUSD
  Receipt_Status
  Transaction_Gas
  Transaction_GasTipCapInUSD
  Fee_SenderFee
  Receipt_L1_FeeInUSD
  ChainId
  Trade_Side_Currency_Decimals
  Fee_PriorityFeePerGasInUSD
  Fee_Savings
  Fee_MinerRewardInUSD
  Trade_Dex_Pair_Decimals
  Call_Gas
  Fee_BurntInUSD
  Transaction_CostInUSD
  Transaction_Type
  Transaction_Nonce
  Receipt_GasUsed
  Transaction_Index
  Trade_Amount
  Trade_Side_AmountInUSD
  Fee_Burnt
  Transaction_GasPrice
  Block_Number
  Log_LogAfterCallIndex
  Block_GasUsed
  Log_Signature_SignatureType
  Receipt_L1_Fee
  Transaction_GasPriceInUSD
  Call_Index
  Transaction_Value
  Fee_GasRefund
  Log_Index
  Fee_PriorityFeePerGas
  Trade_Price
  Receipt_L1_GasPriceInUSD
  Block_Nonce
  Fee_EffectiveGasPriceInUSD
  Call_CallerIndex
  Call_InternalCalls
  Transaction_GasFeeCap
  Trade_PriceInUSD
  Trade_Currency_Decimals
  Transaction_GasFeeCapInUSD
  Receipt_Type
  Trade_PriceAsymmetry
  Call_GasUsed
}

"""Order by"""
input EVM_DEXTradeByToken_Ordering {
  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String

  """Select a field to sort ascending"""
  ascending: EVM_DEXTradeByToken_EnumFields

  """Select a field to sort descending"""
  descending: EVM_DEXTradeByToken_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String
}

"""Listed names of string fields in a cube"""
enum EVM_DEXTradeByToken_StringFields {
  Transaction_Hash
  Log_Signature_Signature
  Transaction_GasTipCapInUSD
  Receipt_L1_GasPrice
  Fee_Savings
  Block_GasUsed
  Fee_EffectiveGasPriceInUSD
  Trade_Dex_SmartContract
  Call_Value
  Trade_Side_Currency_SmartContract
  Trade_Sender
  Call_Signature_Name
  Block_Coinbase
  Fee_PriorityFeePerGasInUSD
  Trade_Side_Currency_Symbol
  Log_Signature_Abi
  Block_Number
  Receipt_L1_Fee
  Receipt_L1_GasPriceInUSD
  Call_Gas
  Transaction_GasFeeCapInUSD
  Fee_MinerRewardInUSD
  Receipt_GasUsed
  Fee_SavingsInUSD
  Log_SmartContract
  Block_GasLimit
  Trade_Side_OrderId
  Trade_Dex_ProtocolFamily
  ChainId
  Trade_Dex_ProtocolVersion
  Trade_Dex_Pair_SmartContract
  Fee_GasRefund
  TransactionStatus_FaultError
  Block_Difficulty
  Transaction_CostInUSD
  Receipt_ContractAddress
  Trade_Dex_Pair_Name
  Log_Signature_SignatureHash
  Transaction_GasTipCap
  TransactionStatus_EndError
  Trade_AmountInUSD
  Trade_Buyer
  Transaction_Nonce
  Log_Signature_Name
  Receipt_Status
  Trade_Currency_Name
  Call_Signature_Abi
  Receipt_CumulativeGasUsed
  Trade_Currency_Symbol
  Trade_Side_Buyer
  Transaction_ValueInUSD
  Fee_SenderFee
  Fee_Burnt
  Call_To
  Fee_PriorityFeePerGas
  Transaction_Cost
  Trade_Seller
  Receipt_L1_FeeInUSD
  Transaction_GasFeeCap
  Trade_Dex_ProtocolName
  Call_Error
  Trade_Currency_SmartContract
  Transaction_Gas
  Block_Hash
  Trade_Side_Currency_Name
  Trade_Currency_ProtocolName
  Transaction_To
  Fee_BurntInUSD
  Trade_Side_AmountInUSD
  Trade_Dex_DelegatedTo
  Trade_Side_Amount
  Block_Date
  Call_From
  Block_BaseFee
  Transaction_GasPriceInUSD
  Call_GasUsed
  Call_Signature_Signature
  Trade_Dex_OwnerAddress
  Block_ParentHash
  Fee_SenderFeeInUSD
  Trade_Dex_Pair_Symbol
  Trade_Side_Currency_ProtocolName
  Block_L1_Hash
  Trade_Amount
  Transaction_From
  Trade_Side_Seller
  Call_Signature_SignatureHash
  Transaction_GasPrice
  Trade_OrderId
  Fee_MinerReward
  Transaction_Value
  Fee_EffectiveGasPrice
  Block_Nonce
  Block_L1_ParentHash
}

"""Listed names of comparable fields in a cube"""
enum EVM_Event_CompareFields {
  Log_ExitIndex
  ChainId
  Block_Nonce
  TransactionStatus_Success
  Transaction_Gas
  Call_Index
  Transaction_GasPriceInUSD
  Fee_PriorityFeePerGas
  Receipt_Status
  Call_Signature_Parsed
  Receipt_L1_FeeInUSD
  Fee_EffectiveGasPriceInUSD
  Transaction_Index
  Call_SelfDestruct
  Fee_SavingsInUSD
  Fee_PriorityFeePerGasInUSD
  Receipt_L1_Fee
  Block_GasUsed
  Fee_SenderFee
  Log_Signature_Parsed
  Receipt_L1_GasPriceInUSD
  Log_LogAfterCallIndex
  Transaction_GasTipCap
  Transaction_GasFeeCapInUSD
  LogHeader_Index
  Block_BaseFee
  Transaction_CostInUSD
  Receipt_Type
  Receipt_GasUsed
  Call_Delegated
  Log_Signature_SignatureType
  Block_Time
  Block_GasLimit
  Call_Create
  Call_Success
  Fee_MinerRewardInUSD
  Call_Signature_SignatureType
  Fee_Burnt
  Call_Gas
  Block_Date
  Call_InternalCalls
  Fee_BurntInUSD
  Fee_Savings
  Transaction_Type
  Transaction_ValueInUSD
  Fee_EffectiveGasPrice
  Transaction_GasFeeCap
  Log_EnterIndex
  Block_Difficulty
  Fee_GasRefund
  Transaction_Cost
  Call_GasUsed
  Receipt_L1_GasPrice
  Call_Value
  Block_Number
  Receipt_CumulativeGasUsed
  Transaction_Nonce
  Transaction_Time
  Call_CallerIndex
  Call_ValueInUSD
  LogHeader_Removed
  Transaction_GasTipCapInUSD
  Transaction_Protected
  Transaction_GasPrice
  Log_Pc
  Transaction_Value
  Fee_MinerReward
  Log_Index
  Call_Reverted
  Fee_SenderFeeInUSD
}

"""Smart contract log events in EVM Blockchain"""
type EVM_Event_Cube {
  """Arguments value"""
  Arguments(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Event_Fields_Arguments_Select_Arguments
  ): [EVM_Event_Fields_Arguments]

  """Block fields"""
  Block: EVM_Event_Fields_Block

  """Call fields"""
  Call: EVM_Event_Fields_Call

  """ChainId value"""
  ChainId(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): String

  """Fee fields"""
  Fee: EVM_Event_Fields_Fee

  """Log fields"""
  Log: EVM_Event_Fields_Log

  """LogHeader fields"""
  LogHeader: EVM_Event_Fields_LogHeader

  """Receipt fields"""
  Receipt: EVM_Event_Fields_Receipt

  """Topics value"""
  Topics(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Event_Fields_Topics_Select_Topics
  ): [EVM_Event_Fields_Topics]

  """Transaction fields"""
  Transaction: EVM_Event_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: EVM_Event_Fields_TransactionStatus

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """Side2 argument"""
    side2: EVM_Event_StringFields!

    """Intersect with array"""
    intersectWith: [String!]

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: EVM_Event_StringFields!
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_Event_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_Event_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_Event_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_Event_NumFields
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Count distinct values of the field"""
    distinct: [EVM_Event_EnumFields!]
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: EVM_Event_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_Event_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_Event_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_Event_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_Event_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_Event_NumFields
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: EVM_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """Argument for gini"""
    of: EVM_Event_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: EVM_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: EVM_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """Argument for nakamoto index"""
    of: EVM_Event_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Argument for quantile"""
    of: EVM_Event_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_Event_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_Event_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: EVM_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_Event_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_Event_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_Event_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [EVM_Event_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum EVM_Event_EnumFields {
  Call_Gas
  Call_GasUsed
  Log_Signature_Parsed
  Fee_GasRefund
  Transaction_GasPrice
  Block_Hash
  Topics
  Fee_PriorityFeePerGasInUSD
  Block_ParentHash
  Log_SmartContract
  Transaction_Nonce
  Call_From
  Transaction_GasPriceInUSD
  LogHeader_Removed
  Log_LogAfterCallIndex
  TransactionStatus_EndError
  Receipt_L1_FeeInUSD
  Block_BaseFee
  Call_CallerIndex
  TransactionStatus_FaultError
  Fee_BurntInUSD
  Block_Time
  Log_Signature_SignatureHash
  Call_InternalCalls
  Call_Signature_Parsed
  Fee_MinerReward
  Block_Date
  Call_Signature_Abi
  Call_Signature_SignatureType
  Receipt_L1_GasPriceInUSD
  Fee_Savings
  Call_Output
  Block_L1_Coinbase
  Transaction_GasFeeCap
  LogHeader_Data
  Call_Signature_Name
  Fee_SavingsInUSD
  Receipt_Type
  Block_GasUsed
  Call_To
  Log_Signature_Name
  Log_EnterIndex
  Call_Delegated
  Block_Difficulty
  Call_Index
  Block_Number
  Fee_PriorityFeePerGas
  Transaction_GasTipCapInUSD
  Transaction_Gas
  Transaction_CostInUSD
  LogHeader_Index
  Call_Create
  ChainId
  Call_Reverted
  Transaction_Index
  Receipt_L1_Fee
  Transaction_Cost
  Fee_MinerRewardInUSD
  Receipt_L1_GasPrice
  Call_Success
  Receipt_CumulativeGasUsed
  Call_Input
  Transaction_Value
  Call_Value
  Transaction_To
  Transaction_ValueInUSD
  Log_Pc
  Receipt_GasUsed
  Transaction_From
  Block_GasLimit
  LogHeader_Address
  Fee_Burnt
  Transaction_Hash
  Receipt_ContractAddress
  Log_ExitIndex
  Transaction_Type
  Fee_SenderFee
  Block_L1_Hash
  Log_Index
  Transaction_Time
  Call_Signature_Signature
  Block_Nonce
  Log_Signature_SignatureType
  Transaction_Protected
  Transaction_GasFeeCapInUSD
  Arguments
  Call_Signature_SignatureHash
  TransactionStatus_Success
  Log_Signature_Signature
  Block_Coinbase
  Call_ValueInUSD
  Call_SelfDestruct
  Fee_EffectiveGasPrice
  Call_Error
  Block_L1_ParentHash
  Call_CallPath
  Transaction_GasTipCap
  Fee_EffectiveGasPriceInUSD
  Fee_SenderFeeInUSD
  Receipt_Status
  Log_Signature_Abi
}

"""Arguments fields"""
type EVM_Event_Fields_Arguments {
  Index: Int
  Name: String
  Path: [EVM_Event_Fields_Arguments_Path]
  Type: String
  Value: EVM_ABI_Value_Union
}

"""Arguments_Path fields"""
type EVM_Event_Fields_Arguments_Path {
  Index: Int
  Name: String
  Type: String
}

"""Array of Arguments includes or excludes provided value"""
input EVM_Event_Fields_Arguments_Select_Arguments {
  """Includes this element"""
  includes: [EVM_Event_Fields_Arguments_Select_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Event_Fields_Arguments_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Event_Fields_Arguments_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Event_Fields_Arguments_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Event_Fields_Arguments_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Event_Fields_Arguments_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer
}

"""Selector for Arguments"""
input EVM_Event_Fields_Arguments_Select_FieldSelector {
  """Select value for Value"""
  Value: EVM_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Path"""
  Path: EVM_Event_Fields_Arguments_Select_FieldSelector_Arguments_Path
}

"""Array of Arguments_Path includes or excludes provided value"""
input EVM_Event_Fields_Arguments_Select_FieldSelector_Arguments_Path {
  """Includes this element"""
  includes: [EVM_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer
}

"""Selector for Arguments_Path"""
input EVM_Event_Fields_Arguments_Select_FieldSelector_FieldSelector {
  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Name"""
  Name: OLAP_String
}

"""Block fields"""
type EVM_Event_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Difficulty value"""
  Difficulty(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasLimit value"""
  GasLimit(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """L1 fields"""
  L1: EVM_Event_Fields_Block_L1

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime
}

"""L1 fields"""
type EVM_Event_Fields_Block_L1 {
  """Coinbase value"""
  Coinbase(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Call fields"""
type EVM_Event_Fields_Call {
  """CallPath value"""
  CallPath(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Event_Fields_Call_CallPath_Select_Call_CallPath
  ): [Int]

  """CallerIndex value"""
  CallerIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Create value"""
  Create(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Delegated value"""
  Delegated(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Boolean

  """Error value"""
  Error(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): String

  """From value"""
  From(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Index value"""
  Index(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Int

  """Input value"""
  Input(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """InternalCalls value"""
  InternalCalls(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Output value"""
  Output(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): String

  """Reverted value"""
  Reverted(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): Boolean

  """SelfDestruct value"""
  SelfDestruct(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Boolean

  """Signature fields"""
  Signature: EVM_Event_Fields_Call_Signature

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """To value"""
  To(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """Value value"""
  Value(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): String

  """ValueInUSD value"""
  ValueInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_Event_Fields_Call_CallPath_Select_Call_CallPath {
  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]
}

"""Signature fields"""
type EVM_Event_Fields_Call_Signature {
  """Abi value"""
  Abi(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureHash value"""
  SignatureHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): String

  """SignatureType value"""
  SignatureType(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Fee fields"""
type EVM_Event_Fields_Fee {
  """Burnt value"""
  Burnt(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): String

  """BurntInUSD value"""
  BurntInUSD(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): String

  """EffectiveGasPrice value"""
  EffectiveGasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """EffectiveGasPriceInUSD value"""
  EffectiveGasPriceInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasRefund value"""
  GasRefund(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """MinerReward value"""
  MinerReward(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """MinerRewardInUSD value"""
  MinerRewardInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """PriorityFeePerGas value"""
  PriorityFeePerGas(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): String

  """PriorityFeePerGasInUSD value"""
  PriorityFeePerGasInUSD(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """Savings value"""
  Savings(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """SavingsInUSD value"""
  SavingsInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): String

  """SenderFee value"""
  SenderFee(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """SenderFeeInUSD value"""
  SenderFeeInUSD(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String
}

"""Log fields"""
type EVM_Event_Fields_Log {
  """EnterIndex value"""
  EnterIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """ExitIndex value"""
  ExitIndex(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): Int

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """LogAfterCallIndex value"""
  LogAfterCallIndex(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Int

  """Pc value"""
  Pc(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Signature fields"""
  Signature: EVM_Event_Fields_Log_Signature

  """SmartContract value"""
  SmartContract(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String
}

"""Signature fields"""
type EVM_Event_Fields_Log_Signature {
  """Abi value"""
  Abi(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureType value"""
  SignatureType(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""LogHeader fields"""
type EVM_Event_Fields_LogHeader {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Data value"""
  Data(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Removed value"""
  Removed(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Receipt fields"""
type EVM_Event_Fields_Receipt {
  """ContractAddress value"""
  ContractAddress(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): String

  """CumulativeGasUsed value"""
  CumulativeGasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """L1 fields"""
  L1: EVM_Event_Fields_Receipt_L1

  """Status value"""
  Status(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""L1 fields"""
type EVM_Event_Fields_Receipt_L1 {
  """Fee value"""
  Fee(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPriceInUSD value"""
  GasPriceInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Topics fields"""
type EVM_Event_Fields_Topics {
  Hash: String
}

"""Selector for Topics"""
input EVM_Event_Fields_Topics_Select_FieldSelector {
  """Select value for Hash"""
  Hash: OLAP_String
}

"""Array of Topics includes or excludes provided value"""
input EVM_Event_Fields_Topics_Select_Topics {
  """Includes this element"""
  includes: [EVM_Event_Fields_Topics_Select_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Event_Fields_Topics_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Event_Fields_Topics_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Event_Fields_Topics_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Event_Fields_Topics_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Event_Fields_Topics_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer
}

"""Transaction fields"""
type EVM_Event_Fields_Transaction {
  """Cost value"""
  Cost(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """CostInUSD value"""
  CostInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasFeeCap value"""
  GasFeeCap(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasFeeCapInUSD value"""
  GasFeeCapInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPriceInUSD value"""
  GasPriceInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasTipCap value"""
  GasTipCap(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasTipCapInUSD value"""
  GasTipCapInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Protected value"""
  Protected(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Time value"""
  Time(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): DateTime

  """To value"""
  To(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """ValueInUSD value"""
  ValueInUSD(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): String
}

"""TransactionStatus fields"""
type EVM_Event_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """FaultError value"""
  FaultError(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

input EVM_Event_Filter {
  """Select by LogHeader"""
  LogHeader: EVM_Event_Input_LogHeader_InputType

  """Select by Block"""
  Block: EVM_Event_Input_Block_InputType

  """Select by TransactionStatus"""
  TransactionStatus: EVM_Event_Input_TransactionStatus_InputType

  """Select by Transaction"""
  Transaction: EVM_Event_Input_Transaction_InputType

  """Select by Receipt"""
  Receipt: EVM_Event_Input_Receipt_InputType

  """Array of Topics includes or excludes provided value"""
  Topics: EVM_Event_Input_Topics_Input_Topics

  """Array of Arguments includes or excludes provided value"""
  Arguments: EVM_Event_Input_Arguments_Input_Arguments

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Fee"""
  Fee: EVM_Event_Input_Fee_InputType

  """Select by Log"""
  Log: EVM_Event_Input_Log_InputType

  """Select by Call"""
  Call: EVM_Event_Input_Call_InputType

  """Any combination ( as OR ) of supplied conditions"""
  any: [EVM_Event_FilterAny!]
}

input EVM_Event_FilterAny {
  """Select by Call"""
  Call: EVM_Event_Input_Call_InputType

  """Select by Transaction"""
  Transaction: EVM_Event_Input_Transaction_InputType

  """Select by Block"""
  Block: EVM_Event_Input_Block_InputType

  """Select by TransactionStatus"""
  TransactionStatus: EVM_Event_Input_TransactionStatus_InputType

  """Select by Receipt"""
  Receipt: EVM_Event_Input_Receipt_InputType

  """Array of Topics includes or excludes provided value"""
  Topics: EVM_Event_Input_Topics_Input_Topics

  """Array of Arguments includes or excludes provided value"""
  Arguments: EVM_Event_Input_Arguments_Input_Arguments

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Log"""
  Log: EVM_Event_Input_Log_InputType

  """Select by Fee"""
  Fee: EVM_Event_Input_Fee_InputType

  """Select by LogHeader"""
  LogHeader: EVM_Event_Input_LogHeader_InputType
}

"""Array of Arguments includes or excludes provided value"""
input EVM_Event_Input_Arguments_Input_Arguments {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Event_Input_Arguments_Input_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Event_Input_Arguments_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Event_Input_Arguments_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Event_Input_Arguments_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Event_Input_Arguments_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Event_Input_Arguments_Input_FieldSelector]
}

"""Selector for Arguments"""
input EVM_Event_Input_Arguments_Input_FieldSelector {
  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Path"""
  Path: EVM_Event_Input_Arguments_Input_FieldSelector_Arguments_Path

  """Select value for Value"""
  Value: EVM_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String
}

"""Array of Arguments_Path includes or excludes provided value"""
input EVM_Event_Input_Arguments_Input_FieldSelector_Arguments_Path {
  """Does not start with this element"""
  notStartsWith: [EVM_Event_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Event_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Event_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Event_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Event_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Event_Input_Arguments_Input_FieldSelector_FieldSelector]
}

"""Selector for Arguments_Path"""
input EVM_Event_Input_Arguments_Input_FieldSelector_FieldSelector {
  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Name"""
  Name: OLAP_String
}

"""Select by Block"""
input EVM_Event_Input_Block_InputType {
  Hash: OLAP_String
  Coinbase: OLAP_String
  GasUsed: OLAP_BigInteger
  L1: EVM_Event_Input_Block_L1_InputType
  Difficulty: OLAP_BigInteger
  Number: OLAP_BigInteger
  Time: OLAP_DateTime
  Date: OLAP_Date
  ParentHash: OLAP_String
  Nonce: OLAP_BigInteger
  GasLimit: OLAP_BigInteger
  BaseFee: OLAP_BigInteger
}

"""Select by L1"""
input EVM_Event_Input_Block_L1_InputType {
  ParentHash: OLAP_String
  Coinbase: OLAP_String
  Hash: OLAP_String
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_Event_Input_Call_CallPath_Input_Call_CallPath {
  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]
}

"""Select by Call"""
input EVM_Event_Input_Call_InputType {
  Delegated: Boolean
  Success: Boolean
  InternalCalls: OLAP_Integer
  CallPath: EVM_Event_Input_Call_CallPath_Input_Call_CallPath
  Signature: EVM_Event_Input_Call_Signature_InputType
  To: OLAP_String
  Reverted: Boolean
  From: OLAP_String
  Gas: OLAP_BigInteger
  ValueInUSD: EVM_Amount_With_Decimals
  Value: EVM_Amount_With_Decimals
  Create: Boolean
  Input: OLAP_String
  Error: OLAP_String
  GasUsed: OLAP_BigInteger
  SelfDestruct: Boolean
  Index: OLAP_Integer
  Output: OLAP_String
  CallerIndex: OLAP_Integer
}

"""Select by Signature"""
input EVM_Event_Input_Call_Signature_InputType {
  Abi: OLAP_String
  SignatureType: Boolean
  Signature: OLAP_String
  Name: OLAP_String
  SignatureHash: OLAP_String
  Parsed: Boolean
}

"""Select by Fee"""
input EVM_Event_Input_Fee_InputType {
  MinerRewardInUSD: EVM_Amount_With_Decimals
  SenderFeeInUSD: EVM_Amount_With_Decimals
  MinerReward: EVM_Amount_With_Decimals
  Burnt: EVM_Amount_With_Decimals
  GasRefund: OLAP_BigInteger
  SavingsInUSD: EVM_Amount_With_Decimals
  Savings: EVM_Amount_With_Decimals
  EffectiveGasPriceInUSD: EVM_Amount_With_Decimals
  EffectiveGasPrice: EVM_Amount_With_Decimals
  SenderFee: EVM_Amount_With_Decimals
  PriorityFeePerGas: EVM_Amount_With_Decimals
  PriorityFeePerGasInUSD: EVM_Amount_With_Decimals
  BurntInUSD: EVM_Amount_With_Decimals
}

"""Select by Log"""
input EVM_Event_Input_Log_InputType {
  EnterIndex: OLAP_Integer
  SmartContract: OLAP_String
  Signature: EVM_Event_Input_Log_Signature_InputType
  Pc: OLAP_BigInteger
  LogAfterCallIndex: OLAP_Integer
  ExitIndex: OLAP_Integer
  Index: OLAP_Integer
}

"""Select by Signature"""
input EVM_Event_Input_Log_Signature_InputType {
  Abi: OLAP_String
  Parsed: Boolean
  SignatureType: Boolean
  SignatureHash: OLAP_String
  Signature: OLAP_String
  Name: OLAP_String
}

"""Select by LogHeader"""
input EVM_Event_Input_LogHeader_InputType {
  Address: OLAP_String
  Removed: Boolean
  Index: OLAP_BigInteger
  Data: OLAP_String
}

"""Select by Receipt"""
input EVM_Event_Input_Receipt_InputType {
  Status: OLAP_BigInteger
  GasUsed: OLAP_BigInteger
  CumulativeGasUsed: OLAP_BigInteger
  Type: OLAP_Integer
  L1: EVM_Event_Input_Receipt_L1_InputType
  ContractAddress: OLAP_String
}

"""Select by L1"""
input EVM_Event_Input_Receipt_L1_InputType {
  FeeInUSD: EVM_Amount_With_Decimals
  GasPrice: EVM_Amount_With_Decimals
  GasPriceInUSD: EVM_Amount_With_Decimals
  Fee: EVM_Amount_With_Decimals
}

"""Selector for Topics"""
input EVM_Event_Input_Topics_Input_FieldSelector {
  """Select value for Hash"""
  Hash: OLAP_String
}

"""Array of Topics includes or excludes provided value"""
input EVM_Event_Input_Topics_Input_Topics {
  """Ends with this element"""
  endsWith: [EVM_Event_Input_Topics_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Event_Input_Topics_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Event_Input_Topics_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Event_Input_Topics_Input_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Event_Input_Topics_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Event_Input_Topics_Input_FieldSelector]
}

"""Select by Transaction"""
input EVM_Event_Input_Transaction_InputType {
  Gas: OLAP_BigInteger
  ValueInUSD: EVM_Amount_With_Decimals
  Value: EVM_Amount_With_Decimals
  GasTipCapInUSD: EVM_Amount_With_Decimals
  GasTipCap: EVM_Amount_With_Decimals
  Index: OLAP_BigInteger
  From: OLAP_String
  Protected: Boolean
  GasPriceInUSD: EVM_Amount_With_Decimals
  GasFeeCapInUSD: EVM_Amount_With_Decimals
  Hash: OLAP_String
  Nonce: OLAP_BigInteger
  To: OLAP_String
  Time: OLAP_DateTime
  Type: OLAP_Integer
  Cost: EVM_Amount_With_Decimals
  GasPrice: EVM_Amount_With_Decimals
  CostInUSD: EVM_Amount_With_Decimals
  GasFeeCap: EVM_Amount_With_Decimals
}

"""Select by TransactionStatus"""
input EVM_Event_Input_TransactionStatus_InputType {
  Success: Boolean
  EndError: OLAP_String
  FaultError: OLAP_String
}

"""Limit definition"""
input EVM_Event_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input EVM_Event_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_Event_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum EVM_Event_NumFields {
  Log_Pc
  Fee_EffectiveGasPrice
  Transaction_Nonce
  Transaction_Gas
  Block_GasLimit
  Fee_GasRefund
  Call_Index
  Call_Gas
  Log_EnterIndex
  Transaction_CostInUSD
  Transaction_ValueInUSD
  ChainId
  Transaction_Cost
  Call_GasUsed
  Receipt_Status
  Transaction_Type
  Call_Value
  Block_Number
  Receipt_L1_GasPriceInUSD
  Block_Nonce
  Fee_PriorityFeePerGasInUSD
  Transaction_GasFeeCap
  Receipt_L1_GasPrice
  Log_ExitIndex
  Transaction_GasTipCap
  Call_ValueInUSD
  Fee_BurntInUSD
  Fee_MinerReward
  Fee_SavingsInUSD
  Call_CallerIndex
  Transaction_GasPriceInUSD
  Receipt_CumulativeGasUsed
  Receipt_Type
  Block_GasUsed
  Transaction_Value
  Transaction_Index
  Log_Index
  Transaction_GasFeeCapInUSD
  Fee_Savings
  Receipt_L1_Fee
  Fee_MinerRewardInUSD
  Receipt_L1_FeeInUSD
  Fee_Burnt
  Fee_SenderFeeInUSD
  Block_Difficulty
  LogHeader_Index
  Block_BaseFee
  Call_InternalCalls
  Fee_EffectiveGasPriceInUSD
  Fee_SenderFee
  Fee_PriorityFeePerGas
  Log_LogAfterCallIndex
  Transaction_GasTipCapInUSD
  Transaction_GasPrice
  Receipt_GasUsed
}

"""Order by"""
input EVM_Event_Ordering {
  """Select a field to sort descending"""
  descending: EVM_Event_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String

  """Select a field to sort ascending"""
  ascending: EVM_Event_EnumFields
}

"""Listed names of string fields in a cube"""
enum EVM_Event_StringFields {
  Receipt_L1_GasPriceInUSD
  Log_Signature_SignatureHash
  Fee_Burnt
  Transaction_Cost
  Receipt_L1_GasPrice
  Transaction_Hash
  Receipt_L1_Fee
  Receipt_L1_FeeInUSD
  Block_BaseFee
  Transaction_GasPrice
  Fee_EffectiveGasPrice
  Transaction_From
  LogHeader_Data
  Block_Difficulty
  Call_Value
  Fee_SavingsInUSD
  Fee_PriorityFeePerGas
  Call_Signature_Signature
  Receipt_CumulativeGasUsed
  Transaction_CostInUSD
  Log_Signature_Signature
  Block_GasLimit
  TransactionStatus_FaultError
  Transaction_To
  Fee_SenderFee
  Receipt_ContractAddress
  Transaction_GasPriceInUSD
  Receipt_GasUsed
  LogHeader_Address
  TransactionStatus_EndError
  Log_Signature_Abi
  Block_Coinbase
  Block_L1_ParentHash
  Transaction_GasFeeCapInUSD
  Fee_Savings
  Fee_PriorityFeePerGasInUSD
  Call_To
  Block_Hash
  Block_L1_Hash
  Transaction_Index
  Fee_SenderFeeInUSD
  Call_Signature_SignatureHash
  Transaction_GasTipCapInUSD
  Block_Number
  Call_GasUsed
  Log_Signature_Name
  Log_Pc
  Call_Error
  Receipt_Status
  Call_ValueInUSD
  Fee_GasRefund
  Block_GasUsed
  Fee_EffectiveGasPriceInUSD
  Transaction_Value
  Block_Nonce
  Call_Output
  LogHeader_Index
  Call_Input
  ChainId
  Call_Gas
  Block_L1_Coinbase
  Transaction_GasFeeCap
  Call_Signature_Name
  Transaction_Nonce
  Fee_BurntInUSD
  Call_From
  Call_Signature_Abi
  Transaction_GasTipCap
  Block_ParentHash
  Fee_MinerReward
  Transaction_Gas
  Fee_MinerRewardInUSD
  Transaction_ValueInUSD
  Block_Date
  Log_SmartContract
}

"""Listed names of comparable fields in a cube"""
enum EVM_MinerReward_CompareFields {
  Reward_Dynamic
  Reward_Uncle
  Block_Difficulty
  ChainId
  Uncle_Block_Date
  Block_GasUsed
  Uncle_Block_GasUsed
  Uncle_Block_GasLimit
  Block_Result_Gas
  Reward_BurntFees
  Block_GasLimit
  Uncle_Block_Nonce
  Reward_TotalInUSD
  Block_BaseFeeInUSD
  Block_TxCount
  Reward_StaticInUSD
  Uncle_Block_BaseFeeInUSD
  Reward_DynamicInUSD
  Block_Date
  Block_BaseFee
  Reward_Total
  Reward_TxFeesInUSD
  Reward_Static
  Block_Time
  Block_L1_BaseFee
  Block_UnclesCount
  Block_Nonce
  Reward_TxFees
  Uncle_Block_BaseFee
  Block_L1_BaseFeeInUSD
  Uncle_Block_Difficulty
  Uncle_Index
  Reward_BurntFeesInUSD
  Block_Number
  Reward_UncleInUSD
  Uncle_Block_Number
  Uncle_Block_Time
}

"""Miner reward for blocks in EVM Blockchain"""
type EVM_MinerReward_Cube {
  """Block fields"""
  Block: EVM_MinerReward_Fields_Block

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Reward fields"""
  Reward: EVM_MinerReward_Fields_Reward

  """Uncle fields"""
  Uncle: EVM_MinerReward_Fields_Uncle

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Intersect with array"""
    intersectWith: [String!]

    """Side1 argument"""
    side1: EVM_MinerReward_StringFields!

    """Side2 argument"""
    side2: EVM_MinerReward_StringFields!
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_MinerReward_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_MinerReward_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_MinerReward_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_MinerReward_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_MinerReward_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [EVM_MinerReward_EnumFields!]
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """First argument for Covariance between two arguments"""
    of: EVM_MinerReward_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_MinerReward_NumFields
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_MinerReward_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_MinerReward_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_MinerReward_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_MinerReward_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: EVM_MinerReward_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_MinerReward_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_MinerReward_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: EVM_MinerReward_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: EVM_MinerReward_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """Argument for nakamoto index"""
    of: EVM_MinerReward_NumFields!
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: EVM_MinerReward_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_MinerReward_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_MinerReward_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_MinerReward_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: EVM_MinerReward_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_MinerReward_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_MinerReward_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_MinerReward_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_MinerReward_NumFields
  ): Float

  """Count unique records"""
  uniq(
    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [EVM_MinerReward_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String
}

"""Listed names of fields in a cube"""
enum EVM_MinerReward_EnumFields {
  Reward_Total
  Block_Extra
  Reward_UncleInUSD
  Uncle_Block_Number
  Uncle_Block_Nonce
  Reward_TxFees
  Reward_Uncle
  Uncle_Block_Coinbase
  Block_UncleHash
  Block_Bloom
  Uncle_Block_GasUsed
  Uncle_Block_ReceiptHash
  Reward_TotalInUSD
  ChainId
  Uncle_Block_Root
  Block_Result_Errors
  Block_Date
  Block_Number
  Block_L1_BaseFee
  Block_TxCount
  Reward_TxFeesInUSD
  Block_L1_Coinbase
  Block_GasLimit
  Reward_StaticInUSD
  Block_ParentHash
  Uncle_Block_UncleHash
  Reward_BurntFees
  Block_GasUsed
  Uncle_Block_Bloom
  Reward_BurntFeesInUSD
  Block_Hash
  Block_TxHash
  Uncle_Index
  Block_Coinbase
  Uncle_Block_GasLimit
  Reward_DynamicInUSD
  Block_L1_Hash
  Block_Root
  Block_Result_Gas
  Reward_Dynamic
  Block_MixDigest
  Block_BaseFeeInUSD
  Uncle_Block_Time
  Reward_Static
  Uncle_Block_BaseFee
  Uncle_Block_Extra
  Uncle_Block_Hash
  Uncle_Block_MixDigest
  Block_BaseFee
  Block_UnclesCount
  Uncle_Block_BaseFeeInUSD
  Block_Difficulty
  Uncle_Block_ParentHash
  Block_Nonce
  Block_L1_ParentHash
  Block_L1_BaseFeeInUSD
  Uncle_Block_Date
  Block_Time
  Block_ReceiptHash
  Uncle_Block_TxHash
  Uncle_Block_Difficulty
}

"""Block fields"""
type EVM_MinerReward_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """BaseFeeInUSD value"""
  BaseFeeInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Bloom value"""
  Bloom(
    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Difficulty value"""
  Difficulty(
    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields
  ): String

  """Extra value"""
  Extra(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields
  ): String

  """GasLimit value"""
  GasLimit(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields
  ): String

  """GasUsed value"""
  GasUsed(
    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """L1 fields"""
  L1: EVM_MinerReward_Fields_Block_L1

  """MixDigest value"""
  MixDigest(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ReceiptHash value"""
  ReceiptHash(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Result fields"""
  Result: EVM_MinerReward_Fields_Block_Result

  """Root value"""
  Root(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """TxCount value"""
  TxCount(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """TxHash value"""
  TxHash(
    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields
  ): String

  """UncleHash value"""
  UncleHash(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """UnclesCount value"""
  UnclesCount(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""L1 fields"""
type EVM_MinerReward_Fields_Block_L1 {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """BaseFeeInUSD value"""
  BaseFeeInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Coinbase value"""
  Coinbase(
    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentHash value"""
  ParentHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields
  ): String
}

"""Result fields"""
type EVM_MinerReward_Fields_Block_Result {
  """Errors value"""
  Errors(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields
  ): String
}

"""Reward fields"""
type EVM_MinerReward_Fields_Reward {
  """BurntFees value"""
  BurntFees(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """BurntFeesInUSD value"""
  BurntFeesInUSD(
    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String

  """Dynamic value"""
  Dynamic(
    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String

  """DynamicInUSD value"""
  DynamicInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Static value"""
  Static(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """StaticInUSD value"""
  StaticInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Total value"""
  Total(
    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String

  """TotalInUSD value"""
  TotalInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """TxFees value"""
  TxFees(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """TxFeesInUSD value"""
  TxFeesInUSD(
    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String

  """Uncle value"""
  Uncle(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """UncleInUSD value"""
  UncleInUSD(
    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String
}

"""Uncle fields"""
type EVM_MinerReward_Fields_Uncle {
  """Block fields"""
  Block: EVM_MinerReward_Fields_Uncle_Block

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Block fields"""
type EVM_MinerReward_Fields_Uncle_Block {
  """BaseFee value"""
  BaseFee(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields
  ): String

  """BaseFeeInUSD value"""
  BaseFeeInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Bloom value"""
  Bloom(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Coinbase value"""
  Coinbase(
    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String

  """Date value"""
  Date(
    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields
  ): String

  """Difficulty value"""
  Difficulty(
    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String

  """Extra value"""
  Extra(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """GasLimit value"""
  GasLimit(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """MixDigest value"""
  MixDigest(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Nonce value"""
  Nonce(
    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields
  ): String

  """Number value"""
  Number(
    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields
  ): String

  """ParentHash value"""
  ParentHash(
    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields
  ): String

  """ReceiptHash value"""
  ReceiptHash(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Root value"""
  Root(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """TxHash value"""
  TxHash(
    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields
  ): String

  """UncleHash value"""
  UncleHash(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

input EVM_MinerReward_Filter {
  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Any combination ( as OR ) of supplied conditions"""
  any: [EVM_MinerReward_FilterAny!]

  """Select by Block"""
  Block: EVM_MinerReward_Input_Block_InputType

  """Select by Uncle"""
  Uncle: EVM_MinerReward_Input_Uncle_InputType

  """Select by Reward"""
  Reward: EVM_MinerReward_Input_Reward_InputType
}

input EVM_MinerReward_FilterAny {
  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Block"""
  Block: EVM_MinerReward_Input_Block_InputType

  """Select by Uncle"""
  Uncle: EVM_MinerReward_Input_Uncle_InputType

  """Select by Reward"""
  Reward: EVM_MinerReward_Input_Reward_InputType
}

"""Select by Block"""
input EVM_MinerReward_Input_Block_InputType {
  L1: EVM_MinerReward_Input_Block_L1_InputType
  Difficulty: OLAP_BigInteger
  Nonce: OLAP_BigInteger
  GasLimit: OLAP_BigInteger
  Number: OLAP_BigInteger
  GasUsed: OLAP_BigInteger
  MixDigest: OLAP_String
  UnclesCount: OLAP_Integer
  Bloom: OLAP_String
  TxHash: OLAP_String
  BaseFeeInUSD: EVM_Amount_With_Decimals
  Hash: OLAP_String
  BaseFee: EVM_Amount_With_Decimals
  Time: OLAP_DateTime
  Coinbase: OLAP_String
  UncleHash: OLAP_String
  Date: OLAP_Date
  ReceiptHash: OLAP_String
  ParentHash: OLAP_String
  Extra: OLAP_String
  TxCount: OLAP_Integer
  Result: EVM_MinerReward_Input_Block_Result_InputType
  Root: OLAP_String
}

"""Select by L1"""
input EVM_MinerReward_Input_Block_L1_InputType {
  BaseFeeInUSD: EVM_Amount_With_Decimals
  ParentHash: OLAP_String
  Coinbase: OLAP_String
  Hash: OLAP_String
  BaseFee: EVM_Amount_With_Decimals
}

"""Select by Result"""
input EVM_MinerReward_Input_Block_Result_InputType {
  Gas: OLAP_BigInteger
  Errors: OLAP_String
}

"""Select by Reward"""
input EVM_MinerReward_Input_Reward_InputType {
  UncleInUSD: EVM_Amount_With_Decimals
  Dynamic: EVM_Amount_With_Decimals
  BurntFeesInUSD: EVM_Amount_With_Decimals
  TxFeesInUSD: EVM_Amount_With_Decimals
  Uncle: EVM_Amount_With_Decimals
  TxFees: EVM_Amount_With_Decimals
  StaticInUSD: EVM_Amount_With_Decimals
  DynamicInUSD: EVM_Amount_With_Decimals
  BurntFees: EVM_Amount_With_Decimals
  Total: EVM_Amount_With_Decimals
  TotalInUSD: EVM_Amount_With_Decimals
  Static: EVM_Amount_With_Decimals
}

"""Select by Block"""
input EVM_MinerReward_Input_Uncle_Block_InputType {
  TxHash: OLAP_String
  ReceiptHash: OLAP_String
  Time: OLAP_DateTime
  Extra: OLAP_String
  Date: OLAP_Date
  Root: OLAP_String
  GasUsed: OLAP_BigInteger
  BaseFee: EVM_Amount_With_Decimals
  Bloom: OLAP_String
  ParentHash: OLAP_String
  UncleHash: OLAP_String
  Difficulty: OLAP_BigInteger
  Hash: OLAP_String
  GasLimit: OLAP_BigInteger
  BaseFeeInUSD: EVM_Amount_With_Decimals
  Nonce: OLAP_BigInteger
  Coinbase: OLAP_String
  Number: OLAP_BigInteger
  MixDigest: OLAP_String
}

"""Select by Uncle"""
input EVM_MinerReward_Input_Uncle_InputType {
  Block: EVM_MinerReward_Input_Uncle_Block_InputType
  Index: OLAP_Integer
}

"""Limit definition"""
input EVM_MinerReward_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input EVM_MinerReward_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_MinerReward_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum EVM_MinerReward_NumFields {
  Reward_TxFees
  Block_L1_BaseFeeInUSD
  Block_L1_BaseFee
  Uncle_Block_Nonce
  Reward_Static
  Uncle_Block_GasLimit
  Block_Nonce
  Uncle_Index
  Block_Difficulty
  Block_Result_Gas
  Block_BaseFee
  Block_BaseFeeInUSD
  Block_GasUsed
  Block_TxCount
  Reward_Uncle
  Uncle_Block_Difficulty
  Reward_BurntFeesInUSD
  Reward_BurntFees
  Uncle_Block_BaseFeeInUSD
  Block_UnclesCount
  Reward_Dynamic
  Block_Number
  Block_GasLimit
  Uncle_Block_GasUsed
  Reward_DynamicInUSD
  Reward_TotalInUSD
  Reward_Total
  Reward_TxFeesInUSD
  Uncle_Block_BaseFee
  ChainId
  Reward_UncleInUSD
  Uncle_Block_Number
  Reward_StaticInUSD
}

"""Order by"""
input EVM_MinerReward_Ordering {
  """Select a field to sort ascending"""
  ascending: EVM_MinerReward_EnumFields

  """Select a field to sort descending"""
  descending: EVM_MinerReward_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum EVM_MinerReward_StringFields {
  Block_L1_BaseFee
  Uncle_Block_Difficulty
  Uncle_Block_MixDigest
  Uncle_Block_Bloom
  Reward_Static
  Uncle_Block_Date
  Block_GasLimit
  Block_Bloom
  Reward_UncleInUSD
  Uncle_Block_GasLimit
  Reward_Dynamic
  Block_Root
  Reward_DynamicInUSD
  Uncle_Block_UncleHash
  Block_Number
  Uncle_Block_GasUsed
  Uncle_Block_Root
  Uncle_Block_ParentHash
  Reward_TotalInUSD
  Block_L1_BaseFeeInUSD
  Uncle_Block_Nonce
  Reward_TxFees
  Uncle_Block_BaseFee
  Block_Hash
  Block_Date
  Block_ReceiptHash
  Block_L1_Coinbase
  Block_MixDigest
  Block_TxHash
  Uncle_Block_Number
  Block_GasUsed
  Uncle_Block_ReceiptHash
  Uncle_Block_TxHash
  Reward_TxFeesInUSD
  Block_Nonce
  Block_L1_ParentHash
  Block_Difficulty
  Block_UncleHash
  Reward_BurntFees
  Block_BaseFee
  Uncle_Block_Coinbase
  Block_ParentHash
  Reward_BurntFeesInUSD
  Block_Coinbase
  Block_BaseFeeInUSD
  Block_Result_Errors
  Reward_StaticInUSD
  Uncle_Block_BaseFeeInUSD
  Reward_Uncle
  ChainId
  Block_Result_Gas
  Block_Extra
  Reward_Total
  Uncle_Block_Extra
  Uncle_Block_Hash
  Block_L1_Hash
}

"""Blockchain network selection"""
enum evm_network {
  """Polygon Mainnet"""
  matic

  """Op BNB Mainnet"""
  opbnb

  """Optimism Mainnet"""
  optimism

  """Base Mainnet"""
  base
}

"""EVM type blockchain schema"""
type EVM_Subscription {
  BalanceUpdates(
    """Response limits"""
    limit: EVM_BalanceUpdate_Limit

    """Conditions on query to filter results"""
    where: EVM_BalanceUpdate_Filter

    """Field ordering"""
    orderBy: [EVM_BalanceUpdate_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_BalanceUpdate_LimitBy
  ): [EVM_BalanceUpdate_Cube!]
  Blocks(
    """Response limits"""
    limit: EVM_Block_Limit

    """Conditions on query to filter results"""
    where: EVM_Block_Filter

    """Field ordering"""
    orderBy: [EVM_Block_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_Block_LimitBy
  ): [EVM_Block_Cube!]
  Calls(
    """Field ordering"""
    orderBy: [EVM_Call_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_Call_LimitBy

    """Response limits"""
    limit: EVM_Call_Limit

    """Conditions on query to filter results"""
    where: EVM_Call_Filter
  ): [EVM_Call_Cube!]
  DEXTradeByTokens(
    """Response limits"""
    limit: EVM_DEXTradeByToken_Limit

    """Conditions on query to filter results"""
    where: EVM_DEXTradeByToken_Filter

    """Field ordering"""
    orderBy: [EVM_DEXTradeByToken_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_DEXTradeByToken_LimitBy
  ): [EVM_DEXTradeByToken_Cube!]
  DEXTrades(
    """Conditions on query to filter results"""
    where: EVM_DEXTrade_Filter

    """Field ordering"""
    orderBy: [EVM_DEXTrade_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_DEXTrade_LimitBy

    """Response limits"""
    limit: EVM_DEXTrade_Limit
  ): [EVM_DEXTrade_Cube!]
  Events(
    """Response limits by specified field"""
    limitBy: EVM_Event_LimitBy

    """Response limits"""
    limit: EVM_Event_Limit

    """Conditions on query to filter results"""
    where: EVM_Event_Filter

    """Field ordering"""
    orderBy: [EVM_Event_Ordering!]
  ): [EVM_Event_Cube!]
  MinerRewards(
    """Response limits by specified field"""
    limitBy: EVM_MinerReward_LimitBy

    """Response limits"""
    limit: EVM_MinerReward_Limit

    """Conditions on query to filter results"""
    where: EVM_MinerReward_Filter

    """Field ordering"""
    orderBy: [EVM_MinerReward_Ordering!]
  ): [EVM_MinerReward_Cube!]
  Transactions(
    """Response limits"""
    limit: EVM_Transaction_Limit

    """Conditions on query to filter results"""
    where: EVM_Transaction_Filter

    """Field ordering"""
    orderBy: [EVM_Transaction_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_Transaction_LimitBy
  ): [EVM_Transaction_Cube!]
  Transfers(
    """Conditions on query to filter results"""
    where: EVM_Transfer_Filter

    """Field ordering"""
    orderBy: [EVM_Transfer_Ordering!]

    """Response limits by specified field"""
    limitBy: EVM_Transfer_LimitBy

    """Response limits"""
    limit: EVM_Transfer_Limit
  ): [EVM_Transfer_Cube!]
  Uncles(
    """Response limits by specified field"""
    limitBy: EVM_Uncle_LimitBy

    """Response limits"""
    limit: EVM_Uncle_Limit

    """Conditions on query to filter results"""
    where: EVM_Uncle_Filter

    """Field ordering"""
    orderBy: [EVM_Uncle_Ordering!]
  ): [EVM_Uncle_Cube!]
}

"""Listed names of comparable fields in a cube"""
enum EVM_TokenHolder_CompareFields {
  BalanceUpdate_OutAmount
  Currency_Native
  BalanceUpdate_FirstDate
  BalanceUpdate_InCount
  Currency_Decimals
  Balance_Amount
  Currency_Delegated
  BalanceUpdate_LastDate
  BalanceUpdate_OutCount
  Currency_Fungible
  BalanceUpdate_Count
  Currency_HasURI
  BalanceUpdate_InAmount
}

"""
List of token holders by specified date for tokens and native currency in EVM Blockchain
"""
type EVM_TokenHolder_Cube {
  """Balance fields"""
  Balance: EVM_TokenHolder_Fields_Balance

  """BalanceUpdate fields"""
  BalanceUpdate: EVM_TokenHolder_Fields_BalanceUpdate

  """Currency fields"""
  Currency: EVM_TokenHolder_Fields_Currency

  """Holder fields"""
  Holder: EVM_TokenHolder_Fields_Holder

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """Side1 argument"""
    side1: EVM_TokenHolder_StringFields!

    """Side2 argument"""
    side2: EVM_TokenHolder_StringFields!

    """Intersect with array"""
    intersectWith: [String!]

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String
  ): [String]

  """Average of the values"""
  average(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_TokenHolder_NumFields!
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_TokenHolder_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_TokenHolder_NumFields
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_TokenHolder_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_TokenHolder_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Count distinct values of the field"""
    distinct: [EVM_TokenHolder_EnumFields!]
  ): String

  """Covariance between two arguments"""
  covariance(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: EVM_TokenHolder_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_TokenHolder_NumFields
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_TokenHolder_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_TokenHolder_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_TokenHolder_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_TokenHolder_NumFields
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """Argument for Dispersion for a set of values"""
    of: EVM_TokenHolder_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_TokenHolder_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_TokenHolder_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """Argument for Kurtosis for a set of values"""
    of: EVM_TokenHolder_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: EVM_TokenHolder_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """Argument for nakamoto index"""
    of: EVM_TokenHolder_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: EVM_TokenHolder_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_TokenHolder_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_TokenHolder_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_TokenHolder_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """Argument for Standard deviation of the values"""
    of: EVM_TokenHolder_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_TokenHolder_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_TokenHolder_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_TokenHolder_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_TokenHolder_NumFields
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Uniq values of the field"""
    of: [EVM_TokenHolder_EnumFields!]!
  ): String
}

"""Listed names of fields in a cube"""
enum EVM_TokenHolder_EnumFields {
  BalanceUpdate_OutCount
  Currency_SmartContract
  Currency_Fungible
  Balance_Amount
  BalanceUpdate_Count
  Currency_Delegated
  Currency_ProtocolName
  Currency_HasURI
  BalanceUpdate_InAmount
  BalanceUpdate_FirstDate
  Currency_Symbol
  BalanceUpdate_OutAmount
  Holder_Address
  Currency_DelegatedTo
  Currency_Decimals
  Currency_Name
  BalanceUpdate_InCount
  Currency_Native
  BalanceUpdate_LastDate
}

"""Balance fields"""
type EVM_TokenHolder_Fields_Balance {
  """Amount value"""
  Amount(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""BalanceUpdate fields"""
type EVM_TokenHolder_Fields_BalanceUpdate {
  """Count value"""
  Count(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """FirstDate value"""
  FirstDate(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """InAmount value"""
  InAmount(
    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields
  ): String

  """InCount value"""
  InCount(
    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): String

  """LastDate value"""
  LastDate(
    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date
  ): String

  """OutAmount value"""
  OutAmount(
    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields
  ): String

  """OutCount value"""
  OutCount(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields
  ): String
}

"""Currency fields"""
type EVM_TokenHolder_Fields_Currency {
  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Native value"""
  Native(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Holder fields"""
type EVM_TokenHolder_Fields_Holder {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

input EVM_TokenHolder_Filter {
  """Select by Balance"""
  Balance: EVM_TokenHolder_Input_Balance_InputType

  """Select by Holder"""
  Holder: EVM_TokenHolder_Input_Holder_InputType

  """Any combination ( as OR ) of supplied conditions"""
  any: [EVM_TokenHolder_FilterAny!]

  """Select by BalanceUpdate"""
  BalanceUpdate: EVM_TokenHolder_Input_BalanceUpdate_InputType

  """Select by Currency"""
  Currency: EVM_TokenHolder_Input_Currency_InputType
}

input EVM_TokenHolder_FilterAny {
  """Select by BalanceUpdate"""
  BalanceUpdate: EVM_TokenHolder_Input_BalanceUpdate_InputType

  """Select by Currency"""
  Currency: EVM_TokenHolder_Input_Currency_InputType

  """Select by Balance"""
  Balance: EVM_TokenHolder_Input_Balance_InputType

  """Select by Holder"""
  Holder: EVM_TokenHolder_Input_Holder_InputType
}

"""Select by Balance"""
input EVM_TokenHolder_Input_Balance_InputType {
  Amount: EVM_Amount_With_Decimals
}

"""Select by BalanceUpdate"""
input EVM_TokenHolder_Input_BalanceUpdate_InputType {
  LastDate: OLAP_Date
  FirstDate: OLAP_Date
  OutCount: OLAP_BigInteger
  InAmount: EVM_Amount_With_Decimals
  InCount: OLAP_BigInteger
  OutAmount: EVM_Amount_With_Decimals
  Count: OLAP_BigInteger
}

"""Select by Currency"""
input EVM_TokenHolder_Input_Currency_InputType {
  HasURI: Boolean
  Name: OLAP_String
  DelegatedTo: OLAP_String
  Symbol: OLAP_String
  Delegated: Boolean
  ProtocolName: OLAP_String
  Decimals: OLAP_Integer
  Native: Boolean
  SmartContract: OLAP_String
  Fungible: Boolean
}

"""Select by Holder"""
input EVM_TokenHolder_Input_Holder_InputType {
  Address: OLAP_String
}

"""Limit definition"""
input EVM_TokenHolder_Limit {
  """Offset of results"""
  offset: Int = 0

  """Max count in results"""
  count: Int = 0
}

"""LimitBy definition"""
input EVM_TokenHolder_LimitBy {
  """Limit by specific field"""
  by: [EVM_TokenHolder_EnumFields!]

  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Listed names of numeric fields in a cube"""
enum EVM_TokenHolder_NumFields {
  Balance_Amount
  BalanceUpdate_Count
  BalanceUpdate_InAmount
  BalanceUpdate_OutCount
  BalanceUpdate_InCount
  BalanceUpdate_OutAmount
  Currency_Decimals
}

"""Order by"""
input EVM_TokenHolder_Ordering {
  """Select a field to sort ascending"""
  ascending: EVM_TokenHolder_EnumFields

  """Select a field to sort descending"""
  descending: EVM_TokenHolder_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum EVM_TokenHolder_StringFields {
  Currency_SmartContract
  BalanceUpdate_InAmount
  BalanceUpdate_FirstDate
  Currency_DelegatedTo
  BalanceUpdate_OutAmount
  Balance_Amount
  BalanceUpdate_InCount
  Currency_Symbol
  Currency_Name
  Holder_Address
  BalanceUpdate_OutCount
  BalanceUpdate_Count
  Currency_ProtocolName
  BalanceUpdate_LastDate
}

"""Listed names of comparable fields in a cube"""
enum EVM_Transaction_CompareFields {
  Transaction_Gas
  Receipt_ContractAddressCode_Size
  Receipt_CumulativeGasUsed
  Fee_PriorityFeePerGas
  Transaction_Cost
  Fee_Savings
  Transaction_Type
  Transaction_ToCode_Suicided
  Transaction_Protected
  Fee_Burnt
  Fee_EffectiveGasPriceInUSD
  Transaction_Value
  Block_Nonce
  Fee_SenderFeeInUSD
  Signature_S
  Fee_SenderFee
  Block_GasUsed
  Receipt_Type
  Transaction_CallCount
  Block_GasLimit
  Block_Number
  Receipt_L1_GasPriceInUSD
  Transaction_GasPrice
  Signature_V
  Transaction_GasPriceInUSD
  Receipt_GasUsed
  Block_Time
  ChainId
  Fee_MinerRewardInUSD
  Block_Date
  TransactionStatus_Success
  Transaction_ValueInUSD
  Transaction_Time
  Block_BaseFee
  Fee_BurntInUSD
  Receipt_L1_GasPrice
  Receipt_L1_Fee
  Transaction_Index
  Receipt_L1_FeeInUSD
  Transaction_GasFeeCap
  Transaction_ToCode_Size
  Fee_EffectiveGasPrice
  Receipt_Status
  Fee_MinerReward
  Transaction_CostInUSD
  Fee_SavingsInUSD
  Fee_GasRefund
  Block_Difficulty
  Transaction_GasTipCap
  Signature_R
  Receipt_ContractAddressCode_Suicided
  Fee_PriorityFeePerGasInUSD
  Transaction_Nonce
}

"""Transactions in EVM Blockchain"""
type EVM_Transaction_Cube {
  """Block fields"""
  Block: EVM_Transaction_Fields_Block

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Fee fields"""
  Fee: EVM_Transaction_Fields_Fee

  """Receipt fields"""
  Receipt: EVM_Transaction_Fields_Receipt

  """Signature fields"""
  Signature: EVM_Transaction_Fields_Signature

  """Transaction fields"""
  Transaction: EVM_Transaction_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: EVM_Transaction_Fields_TransactionStatus

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: EVM_Transaction_StringFields!

    """Side2 argument"""
    side2: EVM_Transaction_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_Transaction_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_Transaction_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_Transaction_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_Transaction_NumFields
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [EVM_Transaction_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """First argument for Covariance between two arguments"""
    of: EVM_Transaction_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_Transaction_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_Transaction_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_Transaction_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: EVM_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_Transaction_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """Argument for Kurtosis for a set of values"""
    of: EVM_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Median for a set of values"""
  median(
    """Argument for Median for a set of values"""
    of: EVM_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: EVM_Transaction_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """Argument for quantile"""
    of: EVM_Transaction_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_Transaction_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Argument for Standard deviation of the values"""
    of: EVM_Transaction_NumFields!
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_Transaction_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_Transaction_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_Transaction_NumFields
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Uniq values of the field"""
    of: [EVM_Transaction_EnumFields!]!
  ): String
}

"""Listed names of fields in a cube"""
enum EVM_Transaction_EnumFields {
  Transaction_Protected
  Transaction_CostInUSD
  Fee_PriorityFeePerGas
  Transaction_Nonce
  Fee_MinerReward
  TransactionStatus_Success
  Fee_GasRefund
  Transaction_GasFeeCap
  Receipt_ContractAddressCode_Hash
  Fee_EffectiveGasPrice
  Block_Coinbase
  Block_Time
  Fee_Savings
  Receipt_ContractAddress
  Block_Number
  Transaction_Cost
  Receipt_Type
  Receipt_Status
  Signature_R
  Block_Date
  Block_GasUsed
  Fee_Burnt
  Transaction_Type
  Fee_MinerRewardInUSD
  Receipt_GasUsed
  TransactionStatus_FaultError
  Signature_V
  Transaction_GasPriceInUSD
  Receipt_L1_GasPriceInUSD
  Transaction_ToCode_Suicided
  Block_Nonce
  ChainId
  Fee_SenderFeeInUSD
  Transaction_Time
  Fee_SenderFee
  Receipt_CumulativeGasUsed
  Transaction_Gas
  Receipt_ContractAddressCode_Size
  Block_L1_Coinbase
  Transaction_ToCode_Size
  Transaction_GasTipCap
  Fee_EffectiveGasPriceInUSD
  Transaction_Value
  Transaction_Index
  Transaction_ValueInUSD
  Fee_PriorityFeePerGasInUSD
  Block_BaseFee
  Receipt_L1_Fee
  Receipt_L1_GasPrice
  Transaction_CallCount
  Transaction_Data
  Fee_SavingsInUSD
  Block_Difficulty
  Block_Hash
  Transaction_To
  Transaction_Hash
  TransactionStatus_EndError
  Fee_BurntInUSD
  Block_L1_ParentHash
  Receipt_ContractAddressCode_Suicided
  Receipt_Bloom
  Receipt_PostState
  Signature_S
  Transaction_GasPrice
  Transaction_AccessList
  Receipt_L1_FeeInUSD
  Block_L1_Hash
  Block_ParentHash
  Transaction_From
  Transaction_ToCode_Hash
  Block_GasLimit
}

"""Block fields"""
type EVM_Transaction_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Coinbase value"""
  Coinbase(
    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): String

  """Date value"""
  Date(
    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): String

  """Difficulty value"""
  Difficulty(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasLimit value"""
  GasLimit(
    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """L1 fields"""
  L1: EVM_Transaction_Fields_Block_L1

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Time value"""
  Time(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): DateTime
}

"""L1 fields"""
type EVM_Transaction_Fields_Block_L1 {
  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Hash value"""
  Hash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Fee fields"""
type EVM_Transaction_Fields_Fee {
  """Burnt value"""
  Burnt(
    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): String

  """BurntInUSD value"""
  BurntInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """EffectiveGasPrice value"""
  EffectiveGasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """EffectiveGasPriceInUSD value"""
  EffectiveGasPriceInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasRefund value"""
  GasRefund(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): String

  """MinerReward value"""
  MinerReward(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """MinerRewardInUSD value"""
  MinerRewardInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """PriorityFeePerGas value"""
  PriorityFeePerGas(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """PriorityFeePerGasInUSD value"""
  PriorityFeePerGasInUSD(
    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields
  ): String

  """Savings value"""
  Savings(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): String

  """SavingsInUSD value"""
  SavingsInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): String

  """SenderFee value"""
  SenderFee(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """SenderFeeInUSD value"""
  SenderFeeInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Receipt fields"""
type EVM_Transaction_Fields_Receipt {
  """Bloom value"""
  Bloom(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ContractAddress value"""
  ContractAddress(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ContractAddressCode fields"""
  ContractAddressCode: EVM_Transaction_Fields_Receipt_ContractAddressCode

  """CumulativeGasUsed value"""
  CumulativeGasUsed(
    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """L1 fields"""
  L1: EVM_Transaction_Fields_Receipt_L1

  """PostState value"""
  PostState(
    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields
  ): String

  """Status value"""
  Status(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Type value"""
  Type(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): Int
}

"""ContractAddressCode fields"""
type EVM_Transaction_Fields_Receipt_ContractAddressCode {
  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Size value"""
  Size(
    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Int

  """Suicided value"""
  Suicided(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): Boolean
}

"""L1 fields"""
type EVM_Transaction_Fields_Receipt_L1 {
  """Fee value"""
  Fee(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPriceInUSD value"""
  GasPriceInUSD(
    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): String
}

"""Signature fields"""
type EVM_Transaction_Fields_Signature {
  """R value"""
  R(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """S value"""
  S(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): String

  """V value"""
  V(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String
}

"""Transaction fields"""
type EVM_Transaction_Fields_Transaction {
  """AccessList value"""
  AccessList(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Transaction_Fields_Transaction_AccessList_Select_Transaction_AccessList

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): [EVM_Transaction_Fields_Transaction_Transaction_AccessList]

  """CallCount value"""
  CallCount(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Cost value"""
  Cost(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """CostInUSD value"""
  CostInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Data value"""
  Data(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """From value"""
  From(
    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasFeeCap value"""
  GasFeeCap(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPriceInUSD value"""
  GasPriceInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): String

  """GasTipCap value"""
  GasTipCap(
    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Nonce value"""
  Nonce(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): String

  """Protected value"""
  Protected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): Boolean

  """Time value"""
  Time(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): DateTime

  """To value"""
  To(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): String

  """ToCode fields"""
  ToCode: EVM_Transaction_Fields_Transaction_ToCode

  """Type value"""
  Type(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): Int

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """ValueInUSD value"""
  ValueInUSD(
    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields
  ): String
}

"""Selector for Transaction_AccessList"""
input EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector {
  """Select value for Address"""
  Address: OLAP_String

  """Select value for StorageKeys"""
  StorageKeys: EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector_Transaction_AccessList_StorageKeys
}

"""
Array of Transaction_AccessList_StorageKeys includes or excludes provided value
"""
input EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector_Transaction_AccessList_StorageKeys {
  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]
}

"""Array of Transaction_AccessList includes or excludes provided value"""
input EVM_Transaction_Fields_Transaction_AccessList_Select_Transaction_AccessList {
  """Does not End with this element"""
  notEndsWith: [EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector]
}

"""ToCode fields"""
type EVM_Transaction_Fields_Transaction_ToCode {
  """Hash value"""
  Hash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): String

  """Size value"""
  Size(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Suicided value"""
  Suicided(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Transaction_AccessList fields"""
type EVM_Transaction_Fields_Transaction_Transaction_AccessList {
  Address: String
  StorageKeys: [String]
}

"""TransactionStatus fields"""
type EVM_Transaction_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """FaultError value"""
  FaultError(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

input EVM_Transaction_Filter {
  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by TransactionStatus"""
  TransactionStatus: EVM_Transaction_Input_TransactionStatus_InputType

  """Select by Receipt"""
  Receipt: EVM_Transaction_Input_Receipt_InputType

  """Select by Transaction"""
  Transaction: EVM_Transaction_Input_Transaction_InputType

  """Select by Fee"""
  Fee: EVM_Transaction_Input_Fee_InputType

  """Select by Block"""
  Block: EVM_Transaction_Input_Block_InputType

  """Select by Signature"""
  Signature: EVM_Transaction_Input_Signature_InputType

  """Any combination ( as OR ) of supplied conditions"""
  any: [EVM_Transaction_FilterAny!]
}

input EVM_Transaction_FilterAny {
  """Select by Signature"""
  Signature: EVM_Transaction_Input_Signature_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by TransactionStatus"""
  TransactionStatus: EVM_Transaction_Input_TransactionStatus_InputType

  """Select by Receipt"""
  Receipt: EVM_Transaction_Input_Receipt_InputType

  """Select by Transaction"""
  Transaction: EVM_Transaction_Input_Transaction_InputType

  """Select by Fee"""
  Fee: EVM_Transaction_Input_Fee_InputType

  """Select by Block"""
  Block: EVM_Transaction_Input_Block_InputType
}

"""Select by Block"""
input EVM_Transaction_Input_Block_InputType {
  Difficulty: OLAP_BigInteger
  Time: OLAP_DateTime
  Date: OLAP_Date
  L1: EVM_Transaction_Input_Block_L1_InputType
  Hash: OLAP_String
  Number: OLAP_BigInteger
  Coinbase: OLAP_String
  GasLimit: OLAP_BigInteger
  Nonce: OLAP_BigInteger
  GasUsed: OLAP_BigInteger
  BaseFee: OLAP_BigInteger
  ParentHash: OLAP_String
}

"""Select by L1"""
input EVM_Transaction_Input_Block_L1_InputType {
  Hash: OLAP_String
  Coinbase: OLAP_String
  ParentHash: OLAP_String
}

"""Select by Fee"""
input EVM_Transaction_Input_Fee_InputType {
  BurntInUSD: EVM_Amount_With_Decimals
  EffectiveGasPriceInUSD: EVM_Amount_With_Decimals
  Savings: EVM_Amount_With_Decimals
  MinerRewardInUSD: EVM_Amount_With_Decimals
  PriorityFeePerGasInUSD: EVM_Amount_With_Decimals
  Burnt: EVM_Amount_With_Decimals
  SenderFee: EVM_Amount_With_Decimals
  MinerReward: EVM_Amount_With_Decimals
  PriorityFeePerGas: EVM_Amount_With_Decimals
  SavingsInUSD: EVM_Amount_With_Decimals
  GasRefund: OLAP_BigInteger
  SenderFeeInUSD: EVM_Amount_With_Decimals
  EffectiveGasPrice: EVM_Amount_With_Decimals
}

"""Select by ContractAddressCode"""
input EVM_Transaction_Input_Receipt_ContractAddressCode_InputType {
  Hash: OLAP_String
  Size: OLAP_Integer
  Suicided: Boolean
}

"""Select by Receipt"""
input EVM_Transaction_Input_Receipt_InputType {
  ContractAddressCode: EVM_Transaction_Input_Receipt_ContractAddressCode_InputType
  CumulativeGasUsed: OLAP_BigInteger
  PostState: OLAP_String
  ContractAddress: OLAP_String
  Bloom: OLAP_String
  Status: OLAP_BigInteger
  L1: EVM_Transaction_Input_Receipt_L1_InputType
  Type: OLAP_Integer
  GasUsed: OLAP_BigInteger
}

"""Select by L1"""
input EVM_Transaction_Input_Receipt_L1_InputType {
  GasPriceInUSD: EVM_Amount_With_Decimals
  Fee: EVM_Amount_With_Decimals
  FeeInUSD: EVM_Amount_With_Decimals
  GasPrice: EVM_Amount_With_Decimals
}

"""Select by Signature"""
input EVM_Transaction_Input_Signature_InputType {
  R: OLAP_BigInteger
  S: OLAP_BigInteger
  V: OLAP_BigInteger
}

"""Selector for Transaction_AccessList"""
input EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector {
  """Select value for Address"""
  Address: OLAP_String

  """Select value for StorageKeys"""
  StorageKeys: EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector_Transaction_AccessList_StorageKeys
}

"""
Array of Transaction_AccessList_StorageKeys includes or excludes provided value
"""
input EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector_Transaction_AccessList_StorageKeys {
  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]
}

"""Array of Transaction_AccessList includes or excludes provided value"""
input EVM_Transaction_Input_Transaction_AccessList_Input_Transaction_AccessList {
  """Includes this element"""
  includes: [EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer
}

"""Select by Transaction"""
input EVM_Transaction_Input_Transaction_InputType {
  ValueInUSD: EVM_Amount_With_Decimals
  AccessList: EVM_Transaction_Input_Transaction_AccessList_Input_Transaction_AccessList
  Data: OLAP_String
  Value: EVM_Amount_With_Decimals
  Cost: EVM_Amount_With_Decimals
  CostInUSD: EVM_Amount_With_Decimals
  Gas: OLAP_BigInteger
  ToCode: EVM_Transaction_Input_Transaction_ToCode_InputType
  GasPriceInUSD: EVM_Amount_With_Decimals
  Nonce: OLAP_BigInteger
  Protected: Boolean
  GasTipCap: OLAP_BigInteger
  Time: OLAP_DateTime
  CallCount: OLAP_Integer
  GasPrice: EVM_Amount_With_Decimals
  Hash: OLAP_String
  To: OLAP_String
  Type: OLAP_Integer
  Index: OLAP_BigInteger
  From: OLAP_String
  GasFeeCap: OLAP_BigInteger
}

"""Select by ToCode"""
input EVM_Transaction_Input_Transaction_ToCode_InputType {
  Suicided: Boolean
  Hash: OLAP_String
  Size: OLAP_Integer
}

"""Select by TransactionStatus"""
input EVM_Transaction_Input_TransactionStatus_InputType {
  FaultError: OLAP_String
  EndError: OLAP_String
  Success: Boolean
}

"""Limit definition"""
input EVM_Transaction_Limit {
  """Offset of results"""
  offset: Int = 0

  """Max count in results"""
  count: Int = 0
}

"""LimitBy definition"""
input EVM_Transaction_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_Transaction_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum EVM_Transaction_NumFields {
  Fee_EffectiveGasPrice
  Receipt_Type
  Receipt_Status
  Fee_SenderFee
  Fee_SavingsInUSD
  Fee_PriorityFeePerGasInUSD
  Fee_Savings
  Transaction_Index
  Receipt_L1_GasPrice
  Signature_R
  Transaction_Nonce
  Receipt_L1_GasPriceInUSD
  Fee_EffectiveGasPriceInUSD
  Transaction_CallCount
  Block_Nonce
  Fee_SenderFeeInUSD
  Fee_Burnt
  Receipt_L1_Fee
  Transaction_Value
  Fee_GasRefund
  Fee_PriorityFeePerGas
  Transaction_Type
  Fee_MinerRewardInUSD
  Transaction_GasPrice
  Receipt_CumulativeGasUsed
  Transaction_GasPriceInUSD
  Block_Difficulty
  Transaction_ValueInUSD
  Signature_S
  Transaction_Gas
  Receipt_L1_FeeInUSD
  Receipt_GasUsed
  Transaction_GasFeeCap
  Transaction_Cost
  Transaction_CostInUSD
  ChainId
  Block_BaseFee
  Block_Number
  Transaction_GasTipCap
  Fee_MinerReward
  Block_GasUsed
  Signature_V
  Block_GasLimit
  Receipt_ContractAddressCode_Size
  Fee_BurntInUSD
  Transaction_ToCode_Size
}

"""Order by"""
input EVM_Transaction_Ordering {
  """Select a field to sort descending"""
  descending: EVM_Transaction_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String

  """Select a field to sort ascending"""
  ascending: EVM_Transaction_EnumFields
}

"""Listed names of string fields in a cube"""
enum EVM_Transaction_StringFields {
  Block_L1_Hash
  Transaction_Hash
  Fee_SavingsInUSD
  Receipt_ContractAddressCode_Hash
  Transaction_To
  Fee_MinerReward
  Block_GasUsed
  Transaction_Nonce
  Fee_GasRefund
  Transaction_GasPriceInUSD
  Receipt_L1_Fee
  Block_Coinbase
  Block_L1_ParentHash
  Block_Number
  Transaction_GasFeeCap
  Transaction_Index
  Signature_S
  ChainId
  Block_BaseFee
  Receipt_L1_GasPriceInUSD
  Fee_EffectiveGasPrice
  Transaction_From
  Transaction_ToCode_Hash
  Receipt_L1_GasPrice
  Transaction_Gas
  Block_Difficulty
  Receipt_ContractAddress
  Fee_MinerRewardInUSD
  Transaction_Value
  Receipt_L1_FeeInUSD
  Block_L1_Coinbase
  Transaction_GasTipCap
  Receipt_CumulativeGasUsed
  TransactionStatus_FaultError
  TransactionStatus_EndError
  Fee_PriorityFeePerGas
  Fee_Burnt
  Fee_BurntInUSD
  Transaction_Cost
  Receipt_Status
  Fee_SenderFeeInUSD
  Receipt_Bloom
  Transaction_GasPrice
  Block_GasLimit
  Receipt_GasUsed
  Transaction_CostInUSD
  Fee_Savings
  Fee_EffectiveGasPriceInUSD
  Fee_SenderFee
  Signature_R
  Signature_V
  Transaction_ValueInUSD
  Block_Hash
  Receipt_PostState
  Block_Date
  Block_Nonce
  Transaction_Data
  Fee_PriorityFeePerGasInUSD
  Block_ParentHash
}

"""Listed names of comparable fields in a cube"""
enum EVM_Transfer_CompareFields {
  Transaction_Nonce
  Call_Success
  Transfer_Currency_Fungible
  Fee_Savings
  Fee_MinerRewardInUSD
  Block_Number
  Transaction_Time
  Receipt_Type
  Transaction_Gas
  Block_Nonce
  Transaction_GasFeeCapInUSD
  Transaction_GasTipCapInUSD
  Transaction_Protected
  Fee_GasRefund
  TransactionStatus_Success
  Block_Date
  Transfer_Id
  Log_Signature_Parsed
  Transaction_GasPrice
  Transaction_Index
  Call_SelfDestruct
  Transfer_Currency_HasURI
  Fee_EffectiveGasPrice
  Fee_EffectiveGasPriceInUSD
  Block_Difficulty
  Transaction_Cost
  Transaction_GasPriceInUSD
  ChainId
  Block_GasLimit
  Call_CallerIndex
  Fee_PriorityFeePerGas
  Block_Time
  Call_Index
  Receipt_GasUsed
  Call_Create
  Call_Value
  Call_Delegated
  Transfer_Currency_Decimals
  Fee_Burnt
  Fee_SavingsInUSD
  Transfer_Currency_Native
  Call_InternalCalls
  Transfer_Currency_Delegated
  Fee_BurntInUSD
  Log_Index
  Block_GasUsed
  Fee_MinerReward
  Call_Signature_Parsed
  Transaction_Type
  Fee_SenderFee
  Transaction_CostInUSD
  Receipt_Status
  Receipt_L1_GasPrice
  Receipt_L1_Fee
  Transfer_Amount
  Block_BaseFee
  Receipt_L1_GasPriceInUSD
  Fee_PriorityFeePerGasInUSD
  Call_GasUsed
  Fee_SenderFeeInUSD
  Call_Reverted
  Transaction_GasFeeCap
  Receipt_L1_FeeInUSD
  Transaction_ValueInUSD
  Transaction_Value
  Log_Signature_SignatureType
  Call_Signature_SignatureType
  Transaction_GasTipCap
  Receipt_CumulativeGasUsed
  Log_LogAfterCallIndex
  Call_Gas
  Transfer_AmountInUSD
  Transfer_Success
}

"""Transfers of tokens and native currency in EVM Blockchain"""
type EVM_Transfer_Cube {
  """Block fields"""
  Block: EVM_Transfer_Fields_Block

  """Call fields"""
  Call: EVM_Transfer_Fields_Call

  """ChainId value"""
  ChainId(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """Fee fields"""
  Fee: EVM_Transfer_Fields_Fee

  """Log fields"""
  Log: EVM_Transfer_Fields_Log

  """Receipt fields"""
  Receipt: EVM_Transfer_Fields_Receipt

  """Transaction fields"""
  Transaction: EVM_Transfer_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: EVM_Transfer_Fields_TransactionStatus

  """Transfer fields"""
  Transfer: EVM_Transfer_Fields_Transfer

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """Side1 argument"""
    side1: EVM_Transfer_StringFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side2 argument"""
    side2: EVM_Transfer_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """Argument for Average of the values"""
    of: EVM_Transfer_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_Transfer_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_Transfer_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [EVM_Transfer_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: EVM_Transfer_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_Transfer_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_Transfer_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """Argument for Dispersion for a set of values"""
    of: EVM_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Argument for Entropy for a set of values"""
    of: EVM_Transfer_NumFields!
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_Transfer_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: EVM_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Median for a set of values"""
  median(
    """Argument for Median for a set of values"""
    of: EVM_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: EVM_Transfer_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Argument for quantile"""
    of: EVM_Transfer_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_Transfer_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_Transfer_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: EVM_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_Transfer_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_Transfer_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Uniq values of the field"""
    of: [EVM_Transfer_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String
}

"""Listed names of fields in a cube"""
enum EVM_Transfer_EnumFields {
  Transfer_Type
  Receipt_L1_Fee
  Transaction_GasFeeCap
  Log_SmartContract
  Transaction_Index
  Log_Signature_Name
  Fee_EffectiveGasPrice
  Receipt_Status
  Transaction_GasTipCapInUSD
  Transfer_Id
  Block_Number
  Call_From
  Block_L1_Hash
  Transaction_GasPrice
  Receipt_L1_GasPriceInUSD
  Call_Value
  Block_ParentHash
  Transaction_Hash
  Transaction_GasTipCap
  Transfer_Success
  Call_Signature_Parsed
  Transfer_Amount
  Transfer_Sender
  Receipt_GasUsed
  Block_Hash
  TransactionStatus_EndError
  Transaction_Type
  Call_InternalCalls
  Receipt_L1_GasPrice
  Call_Success
  Transfer_URI
  Call_Create
  Log_Signature_Abi
  Fee_PriorityFeePerGas
  Call_To
  Fee_EffectiveGasPriceInUSD
  Transaction_GasFeeCapInUSD
  Call_Signature_SignatureType
  Call_Index
  Transaction_GasPriceInUSD
  Fee_MinerReward
  Fee_Burnt
  Call_Signature_Signature
  Transfer_AmountInUSD
  Receipt_CumulativeGasUsed
  TransactionStatus_FaultError
  Receipt_Type
  Transfer_Currency_Symbol
  Call_Gas
  Call_Delegated
  Log_Index
  Transaction_From
  Log_Signature_Parsed
  Transaction_Gas
  Transfer_Currency_Delegated
  Fee_PriorityFeePerGasInUSD
  Call_SelfDestruct
  Transfer_Currency_SmartContract
  Call_Signature_Name
  Log_Signature_SignatureType
  Receipt_ContractAddress
  Transfer_Currency_Decimals
  Block_Nonce
  Fee_BurntInUSD
  Log_Signature_SignatureHash
  Fee_SavingsInUSD
  Transfer_Data
  Block_L1_ParentHash
  ChainId
  Call_Signature_SignatureHash
  Transfer_Currency_Name
  Block_GasUsed
  Fee_SenderFeeInUSD
  Fee_SenderFee
  Receipt_L1_FeeInUSD
  Fee_Savings
  Block_Date
  Fee_GasRefund
  Call_CallerIndex
  Transfer_Currency_HasURI
  Transaction_Protected
  Transaction_ValueInUSD
  Transaction_Nonce
  Transaction_To
  Transfer_Currency_Fungible
  Block_GasLimit
  Transfer_Receiver
  Transfer_Currency_ProtocolName
  Call_GasUsed
  Call_Signature_Abi
  Transaction_Cost
  Transfer_Currency_Native
  Transaction_Value
  Block_BaseFee
  Call_CallPath
  Transaction_Time
  Transaction_CostInUSD
  Call_Error
  Log_LogAfterCallIndex
  Block_Coinbase
  Block_Difficulty
  Transfer_Currency_DelegatedTo
  Call_Reverted
  Block_Time
  TransactionStatus_Success
  Fee_MinerRewardInUSD
  Log_Signature_Signature
}

"""Block fields"""
type EVM_Transfer_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String

  """Difficulty value"""
  Difficulty(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasLimit value"""
  GasLimit(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """L1 fields"""
  L1: EVM_Transfer_Fields_Block_L1

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Number value"""
  Number(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Time value"""
  Time(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): DateTime
}

"""L1 fields"""
type EVM_Transfer_Fields_Block_L1 {
  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Call fields"""
type EVM_Transfer_Fields_Call {
  """CallPath value"""
  CallPath(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Transfer_Fields_Call_CallPath_Select_Call_CallPath
  ): [Int]

  """CallerIndex value"""
  CallerIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Create value"""
  Create(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Error value"""
  Error(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String

  """Index value"""
  Index(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): Int

  """InternalCalls value"""
  InternalCalls(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): Int

  """Reverted value"""
  Reverted(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """SelfDestruct value"""
  SelfDestruct(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature fields"""
  Signature: EVM_Transfer_Fields_Call_Signature

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """To value"""
  To(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Value value"""
  Value(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_Transfer_Fields_Call_CallPath_Select_Call_CallPath {
  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]
}

"""Signature fields"""
type EVM_Transfer_Fields_Call_Signature {
  """Abi value"""
  Abi(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): Boolean

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureType value"""
  SignatureType(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Fee fields"""
type EVM_Transfer_Fields_Fee {
  """Burnt value"""
  Burnt(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """BurntInUSD value"""
  BurntInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """EffectiveGasPrice value"""
  EffectiveGasPrice(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String

  """EffectiveGasPriceInUSD value"""
  EffectiveGasPriceInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasRefund value"""
  GasRefund(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """MinerReward value"""
  MinerReward(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """MinerRewardInUSD value"""
  MinerRewardInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """PriorityFeePerGas value"""
  PriorityFeePerGas(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """PriorityFeePerGasInUSD value"""
  PriorityFeePerGasInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Savings value"""
  Savings(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """SavingsInUSD value"""
  SavingsInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """SenderFee value"""
  SenderFee(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String

  """SenderFeeInUSD value"""
  SenderFeeInUSD(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String
}

"""Log fields"""
type EVM_Transfer_Fields_Log {
  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """LogAfterCallIndex value"""
  LogAfterCallIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Signature fields"""
  Signature: EVM_Transfer_Fields_Log_Signature

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Signature fields"""
type EVM_Transfer_Fields_Log_Signature {
  """Abi value"""
  Abi(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """SignatureType value"""
  SignatureType(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Receipt fields"""
type EVM_Transfer_Fields_Receipt {
  """ContractAddress value"""
  ContractAddress(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """CumulativeGasUsed value"""
  CumulativeGasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String

  """L1 fields"""
  L1: EVM_Transfer_Fields_Receipt_L1

  """Status value"""
  Status(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""L1 fields"""
type EVM_Transfer_Fields_Receipt_L1 {
  """Fee value"""
  Fee(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPriceInUSD value"""
  GasPriceInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Transaction fields"""
type EVM_Transfer_Fields_Transaction {
  """Cost value"""
  Cost(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """CostInUSD value"""
  CostInUSD(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasFeeCap value"""
  GasFeeCap(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasFeeCapInUSD value"""
  GasFeeCapInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPriceInUSD value"""
  GasPriceInUSD(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """GasTipCap value"""
  GasTipCap(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasTipCapInUSD value"""
  GasTipCapInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Hash value"""
  Hash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """Index value"""
  Index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): Int

  """Nonce value"""
  Nonce(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """Protected value"""
  Protected(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Time value"""
  Time(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): DateTime

  """To value"""
  To(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): Int

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """ValueInUSD value"""
  ValueInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""TransactionStatus fields"""
type EVM_Transfer_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """FaultError value"""
  FaultError(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Transfer fields"""
type EVM_Transfer_Fields_Transfer {
  """Amount value"""
  Amount(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Currency fields"""
  Currency: EVM_Transfer_Fields_Transfer_Currency

  """Data value"""
  Data(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String

  """Id value"""
  Id(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Receiver value"""
  Receiver(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Sender value"""
  Sender(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Transfer_Fields_Transfer_Type_Select_Transfer_Type
  ): EVM_Transfer_Fields_Transfer_Transfer_Type_Output

  """URI value"""
  URI(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Currency fields"""
type EVM_Transfer_Fields_Transfer_Currency {
  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Native value"""
  Native(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """ProtocolName value"""
  ProtocolName(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Enumeration for Transfer_Type"""
enum EVM_Transfer_Fields_Transfer_Transfer_Type_Output {
  """Transfer_Type token"""
  token

  """Transfer_Type transaction"""
  transaction

  """Transfer_Type call"""
  call
}

"""Select filters for Transfer_Type"""
input EVM_Transfer_Fields_Transfer_Type_Select_Transfer_Type {
  """Exact match"""
  is: EVM_Transfer_Fields_Transfer_Type_Select_Transfer_Type_Input

  """Not this"""
  not: EVM_Transfer_Fields_Transfer_Type_Select_Transfer_Type_Input

  """One of the values"""
  in: [EVM_Transfer_Fields_Transfer_Type_Select_Transfer_Type_Input!]

  """Not one of the values"""
  notIn: [EVM_Transfer_Fields_Transfer_Type_Select_Transfer_Type_Input!]
}

"""Enumeration for Transfer_Type"""
enum EVM_Transfer_Fields_Transfer_Type_Select_Transfer_Type_Input {
  """Transfer_Type token"""
  token

  """Transfer_Type transaction"""
  transaction

  """Transfer_Type call"""
  call
}

input EVM_Transfer_Filter {
  """Select by Log"""
  Log: EVM_Transfer_Input_Log_InputType

  """Any combination ( as OR ) of supplied conditions"""
  any: [EVM_Transfer_FilterAny!]

  """Select by Receipt"""
  Receipt: EVM_Transfer_Input_Receipt_InputType

  """Select by Transaction"""
  Transaction: EVM_Transfer_Input_Transaction_InputType

  """Select by Fee"""
  Fee: EVM_Transfer_Input_Fee_InputType

  """Select by Transfer"""
  Transfer: EVM_Transfer_Input_Transfer_InputType

  """Select by TransactionStatus"""
  TransactionStatus: EVM_Transfer_Input_TransactionStatus_InputType

  """Select by Call"""
  Call: EVM_Transfer_Input_Call_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Block"""
  Block: EVM_Transfer_Input_Block_InputType
}

input EVM_Transfer_FilterAny {
  """Select by Block"""
  Block: EVM_Transfer_Input_Block_InputType

  """Select by Transaction"""
  Transaction: EVM_Transfer_Input_Transaction_InputType

  """Select by Fee"""
  Fee: EVM_Transfer_Input_Fee_InputType

  """Select by Call"""
  Call: EVM_Transfer_Input_Call_InputType

  """Select by Transfer"""
  Transfer: EVM_Transfer_Input_Transfer_InputType

  """Select by Log"""
  Log: EVM_Transfer_Input_Log_InputType

  """Select by TransactionStatus"""
  TransactionStatus: EVM_Transfer_Input_TransactionStatus_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Receipt"""
  Receipt: EVM_Transfer_Input_Receipt_InputType
}

"""Select by Block"""
input EVM_Transfer_Input_Block_InputType {
  Nonce: OLAP_BigInteger
  Hash: OLAP_String
  BaseFee: OLAP_BigInteger
  Difficulty: OLAP_BigInteger
  Coinbase: OLAP_String
  GasUsed: OLAP_BigInteger
  ParentHash: OLAP_String
  Number: OLAP_BigInteger
  GasLimit: OLAP_BigInteger
  L1: EVM_Transfer_Input_Block_L1_InputType
  Date: OLAP_Date
  Time: OLAP_DateTime
}

"""Select by L1"""
input EVM_Transfer_Input_Block_L1_InputType {
  ParentHash: OLAP_String
  Hash: OLAP_String
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_Transfer_Input_Call_CallPath_Input_Call_CallPath {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]
}

"""Select by Call"""
input EVM_Transfer_Input_Call_InputType {
  Value: OLAP_BigInteger
  Signature: EVM_Transfer_Input_Call_Signature_InputType
  Delegated: Boolean
  Reverted: Boolean
  To: OLAP_String
  GasUsed: OLAP_BigInteger
  From: OLAP_String
  Create: Boolean
  InternalCalls: OLAP_Integer
  SelfDestruct: Boolean
  Gas: OLAP_BigInteger
  Success: Boolean
  Index: OLAP_Integer
  Error: OLAP_String
  CallPath: EVM_Transfer_Input_Call_CallPath_Input_Call_CallPath
  CallerIndex: OLAP_Integer
}

"""Select by Signature"""
input EVM_Transfer_Input_Call_Signature_InputType {
  Abi: OLAP_String
  Signature: OLAP_String
  Name: OLAP_String
  SignatureHash: OLAP_String
  SignatureType: Boolean
  Parsed: Boolean
}

"""Select by Fee"""
input EVM_Transfer_Input_Fee_InputType {
  PriorityFeePerGasInUSD: EVM_Amount_With_Decimals
  SenderFee: EVM_Amount_With_Decimals
  MinerRewardInUSD: EVM_Amount_With_Decimals
  SenderFeeInUSD: EVM_Amount_With_Decimals
  EffectiveGasPrice: EVM_Amount_With_Decimals
  SavingsInUSD: EVM_Amount_With_Decimals
  MinerReward: EVM_Amount_With_Decimals
  BurntInUSD: EVM_Amount_With_Decimals
  EffectiveGasPriceInUSD: EVM_Amount_With_Decimals
  PriorityFeePerGas: EVM_Amount_With_Decimals
  Savings: EVM_Amount_With_Decimals
  GasRefund: OLAP_BigInteger
  Burnt: EVM_Amount_With_Decimals
}

"""Select by Log"""
input EVM_Transfer_Input_Log_InputType {
  Index: OLAP_Integer
  SmartContract: OLAP_String
  Signature: EVM_Transfer_Input_Log_Signature_InputType
  LogAfterCallIndex: OLAP_Integer
}

"""Select by Signature"""
input EVM_Transfer_Input_Log_Signature_InputType {
  Parsed: Boolean
  Name: OLAP_String
  SignatureHash: OLAP_String
  SignatureType: OLAP_Integer
  Abi: OLAP_String
  Signature: OLAP_String
}

"""Select by Receipt"""
input EVM_Transfer_Input_Receipt_InputType {
  L1: EVM_Transfer_Input_Receipt_L1_InputType
  ContractAddress: OLAP_String
  Type: OLAP_Integer
  Status: OLAP_BigInteger
  GasUsed: OLAP_BigInteger
  CumulativeGasUsed: OLAP_BigInteger
}

"""Select by L1"""
input EVM_Transfer_Input_Receipt_L1_InputType {
  FeeInUSD: EVM_Amount_With_Decimals
  GasPrice: EVM_Amount_With_Decimals
  GasPriceInUSD: EVM_Amount_With_Decimals
  Fee: EVM_Amount_With_Decimals
}

"""Select by Transaction"""
input EVM_Transfer_Input_Transaction_InputType {
  GasFeeCapInUSD: EVM_Amount_With_Decimals
  ValueInUSD: EVM_Amount_With_Decimals
  Type: OLAP_Integer
  Protected: Boolean
  Value: EVM_Amount_With_Decimals
  GasTipCap: EVM_Amount_With_Decimals
  Nonce: OLAP_BigInteger
  GasFeeCap: EVM_Amount_With_Decimals
  Cost: EVM_Amount_With_Decimals
  GasTipCapInUSD: EVM_Amount_With_Decimals
  GasPriceInUSD: EVM_Amount_With_Decimals
  Hash: OLAP_String
  GasPrice: EVM_Amount_With_Decimals
  Gas: OLAP_BigInteger
  To: OLAP_String
  Index: OLAP_Integer
  CostInUSD: EVM_Amount_With_Decimals
  Time: OLAP_DateTime
  From: OLAP_String
}

"""Select by TransactionStatus"""
input EVM_Transfer_Input_TransactionStatus_InputType {
  FaultError: OLAP_String
  Success: Boolean
  EndError: OLAP_String
}

"""Select by Currency"""
input EVM_Transfer_Input_Transfer_Currency_InputType {
  Name: OLAP_String
  HasURI: Boolean
  Native: Boolean
  Symbol: OLAP_String
  DelegatedTo: OLAP_String
  ProtocolName: OLAP_String
  Decimals: OLAP_Integer
  Fungible: Boolean
  SmartContract: OLAP_String
  Delegated: Boolean
}

"""Select by Transfer"""
input EVM_Transfer_Input_Transfer_InputType {
  URI: OLAP_String
  Success: Boolean
  Data: OLAP_String
  Amount: EVM_Amount_With_Decimals
  Sender: OLAP_String
  Id: OLAP_BigInteger
  AmountInUSD: EVM_Amount_With_Decimals
  Currency: EVM_Transfer_Input_Transfer_Currency_InputType
  Receiver: OLAP_String
  Type: EVM_Transfer_Input_Transfer_Type_Input_Transfer_Type
}

"""Select filters for Transfer_Type"""
input EVM_Transfer_Input_Transfer_Type_Input_Transfer_Type {
  """One of the values"""
  in: [EVM_Transfer_Input_Transfer_Type_Input_Transfer_Type_Input!]

  """Not one of the values"""
  notIn: [EVM_Transfer_Input_Transfer_Type_Input_Transfer_Type_Input!]

  """Exact match"""
  is: EVM_Transfer_Input_Transfer_Type_Input_Transfer_Type_Input

  """Not this"""
  not: EVM_Transfer_Input_Transfer_Type_Input_Transfer_Type_Input
}

"""Enumeration for Transfer_Type"""
enum EVM_Transfer_Input_Transfer_Type_Input_Transfer_Type_Input {
  """Transfer_Type call"""
  call

  """Transfer_Type token"""
  token

  """Transfer_Type transaction"""
  transaction
}

"""Limit definition"""
input EVM_Transfer_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input EVM_Transfer_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_Transfer_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum EVM_Transfer_NumFields {
  Transaction_Nonce
  Transfer_Id
  Block_BaseFee
  Log_Index
  Receipt_L1_FeeInUSD
  Transaction_GasPriceInUSD
  Transaction_GasFeeCap
  Fee_SavingsInUSD
  Fee_PriorityFeePerGasInUSD
  Transaction_GasPrice
  Transaction_Value
  Call_InternalCalls
  Call_CallerIndex
  Log_Signature_SignatureType
  Log_LogAfterCallIndex
  Fee_BurntInUSD
  Transaction_GasFeeCapInUSD
  Call_Gas
  Fee_SenderFeeInUSD
  Fee_Burnt
  Fee_PriorityFeePerGas
  Transfer_Currency_Decimals
  Transaction_CostInUSD
  Transaction_ValueInUSD
  Transaction_GasTipCap
  Transaction_Cost
  Call_GasUsed
  ChainId
  Receipt_L1_GasPrice
  Fee_MinerRewardInUSD
  Transaction_Index
  Receipt_CumulativeGasUsed
  Receipt_GasUsed
  Transaction_Gas
  Block_GasLimit
  Transfer_AmountInUSD
  Call_Index
  Transfer_Amount
  Fee_Savings
  Transaction_GasTipCapInUSD
  Fee_SenderFee
  Receipt_Type
  Fee_MinerReward
  Fee_EffectiveGasPriceInUSD
  Transaction_Type
  Block_Difficulty
  Fee_EffectiveGasPrice
  Block_GasUsed
  Block_Nonce
  Fee_GasRefund
  Receipt_Status
  Call_Value
  Receipt_L1_Fee
  Receipt_L1_GasPriceInUSD
  Block_Number
}

"""Order by"""
input EVM_Transfer_Ordering {
  """Select a field to sort ascending"""
  ascending: EVM_Transfer_EnumFields

  """Select a field to sort descending"""
  descending: EVM_Transfer_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum EVM_Transfer_StringFields {
  Transaction_GasFeeCapInUSD
  ChainId
  Transfer_Amount
  Call_Value
  Call_Signature_Abi
  Fee_Burnt
  Transaction_Hash
  Receipt_L1_FeeInUSD
  Transaction_ValueInUSD
  Receipt_L1_Fee
  Receipt_L1_GasPrice
  Transfer_Currency_Symbol
  Fee_BurntInUSD
  Transaction_To
  Log_Signature_Signature
  Receipt_GasUsed
  Fee_MinerReward
  Transfer_Receiver
  Call_To
  Transfer_Data
  Log_Signature_SignatureHash
  Transfer_AmountInUSD
  Block_Difficulty
  Block_Coinbase
  Transaction_From
  Block_GasUsed
  Call_Gas
  Transaction_GasFeeCap
  Fee_SenderFee
  Transfer_Currency_SmartContract
  Receipt_L1_GasPriceInUSD
  Fee_PriorityFeePerGas
  Receipt_ContractAddress
  Fee_SenderFeeInUSD
  Fee_PriorityFeePerGasInUSD
  Fee_GasRefund
  Log_Signature_Abi
  Call_Signature_SignatureHash
  Block_GasLimit
  Transfer_URI
  TransactionStatus_EndError
  Block_BaseFee
  Block_ParentHash
  Fee_EffectiveGasPrice
  Transaction_GasPriceInUSD
  Transaction_Gas
  Block_Number
  Call_From
  Transaction_GasTipCapInUSD
  Fee_MinerRewardInUSD
  Call_GasUsed
  Block_L1_Hash
  Call_Signature_Name
  Transfer_Sender
  Block_L1_ParentHash
  Fee_SavingsInUSD
  Receipt_Status
  Fee_EffectiveGasPriceInUSD
  Log_SmartContract
  Transaction_GasPrice
  Block_Hash
  Transfer_Currency_DelegatedTo
  Block_Date
  Transfer_Id
  Receipt_CumulativeGasUsed
  Block_Nonce
  Transaction_Value
  Transfer_Currency_ProtocolName
  Call_Error
  Call_Signature_Signature
  Transfer_Currency_Name
  Transaction_Cost
  Log_Signature_Name
  TransactionStatus_FaultError
  Transaction_Nonce
  Transaction_GasTipCap
  Transaction_CostInUSD
  Fee_Savings
}

"""Listed names of comparable fields in a cube"""
enum EVM_Uncle_CompareFields {
  Block_L1_BaseFeeInUSD
  Uncle_Index
  Uncle_Block_Date
  Block_Difficulty
  Block_Time
  Uncle_Block_BaseFeeInUSD
  Block_UnclesCount
  Block_TxCount
  Uncle_Block_BaseFee
  Uncle_Block_Difficulty
  Uncle_Block_Time
  Uncle_Block_Number
  Block_GasLimit
  Block_Number
  Block_GasUsed
  Block_Nonce
  Block_L1_BaseFee
  Uncle_Block_Nonce
  Uncle_Block_GasUsed
  Uncle_Block_GasLimit
  Block_Date
  ChainId
  Block_Result_Gas
  Block_BaseFeeInUSD
  Block_BaseFee
}

"""Uncle blocks in EVM Blockchain"""
type EVM_Uncle_Cube {
  """Block fields"""
  Block: EVM_Uncle_Fields_Block

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Uncle fields"""
  Uncle: EVM_Uncle_Fields_Uncle

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: EVM_Uncle_StringFields!

    """Side2 argument"""
    side2: EVM_Uncle_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_Uncle_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_Uncle_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_Uncle_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_Uncle_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_Uncle_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """Count distinct values of the field"""
    distinct: [EVM_Uncle_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: EVM_Uncle_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_Uncle_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_Uncle_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_Uncle_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_Uncle_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_Uncle_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Argument for Dispersion for a set of values"""
    of: EVM_Uncle_NumFields!
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_Uncle_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_Uncle_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: EVM_Uncle_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: EVM_Uncle_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: EVM_Uncle_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: EVM_Uncle_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_Uncle_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_Uncle_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_Uncle_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: EVM_Uncle_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_Uncle_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_Uncle_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_Uncle_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_Uncle_NumFields
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [EVM_Uncle_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum EVM_Uncle_EnumFields {
  Block_ReceiptHash
  Block_ParentHash
  Block_UnclesCount
  Uncle_Block_Time
  Block_Result_Gas
  Uncle_Block_TxHash
  Uncle_Block_Root
  Block_UncleHash
  Uncle_Block_UncleHash
  Block_TxHash
  Uncle_Block_Bloom
  Uncle_Block_Date
  Block_MixDigest
  Block_Hash
  Uncle_Block_MixDigest
  Block_Bloom
  Block_L1_BaseFeeInUSD
  Uncle_Block_ParentHash
  Block_BaseFeeInUSD
  Block_Date
  Uncle_Block_Nonce
  Uncle_Block_Hash
  Block_Number
  Block_TxCount
  Block_Coinbase
  Uncle_Block_BaseFee
  Uncle_Block_BaseFeeInUSD
  Uncle_Block_Coinbase
  Block_Extra
  Block_GasLimit
  Block_GasUsed
  Block_Difficulty
  Uncle_Index
  Block_L1_BaseFee
  Block_Root
  Block_Time
  Uncle_Block_Number
  Block_L1_Coinbase
  Uncle_Block_Difficulty
  ChainId
  Block_L1_Hash
  Uncle_Block_GasUsed
  Block_Nonce
  Uncle_Block_ReceiptHash
  Block_Result_Errors
  Uncle_Block_GasLimit
  Block_BaseFee
  Block_L1_ParentHash
  Uncle_Block_Extra
}

"""Block fields"""
type EVM_Uncle_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """BaseFeeInUSD value"""
  BaseFeeInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Bloom value"""
  Bloom(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Difficulty value"""
  Difficulty(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Extra value"""
  Extra(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields
  ): String

  """GasLimit value"""
  GasLimit(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """L1 fields"""
  L1: EVM_Uncle_Fields_Block_L1

  """MixDigest value"""
  MixDigest(
    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): String

  """Nonce value"""
  Nonce(
    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): String

  """Number value"""
  Number(
    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ReceiptHash value"""
  ReceiptHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Result fields"""
  Result: EVM_Uncle_Fields_Block_Result

  """Root value"""
  Root(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Time value"""
  Time(
    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime
  ): DateTime

  """TxCount value"""
  TxCount(
    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Int

  """TxHash value"""
  TxHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """UncleHash value"""
  UncleHash(
    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields
  ): String

  """UnclesCount value"""
  UnclesCount(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields
  ): Int
}

"""L1 fields"""
type EVM_Uncle_Fields_Block_L1 {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """BaseFeeInUSD value"""
  BaseFeeInUSD(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Coinbase value"""
  Coinbase(
    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentHash value"""
  ParentHash(
    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields
  ): String
}

"""Result fields"""
type EVM_Uncle_Fields_Block_Result {
  """Errors value"""
  Errors(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String
}

"""Uncle fields"""
type EVM_Uncle_Fields_Uncle {
  """Block fields"""
  Block: EVM_Uncle_Fields_Uncle_Block

  """Index value"""
  Index(
    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Int
}

"""Block fields"""
type EVM_Uncle_Fields_Uncle_Block {
  """BaseFee value"""
  BaseFee(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields
  ): String

  """BaseFeeInUSD value"""
  BaseFeeInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields
  ): String

  """Bloom value"""
  Bloom(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Difficulty value"""
  Difficulty(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields
  ): String

  """Extra value"""
  Extra(
    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields
  ): String

  """GasLimit value"""
  GasLimit(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """MixDigest value"""
  MixDigest(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ReceiptHash value"""
  ReceiptHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Root value"""
  Root(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """TxHash value"""
  TxHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """UncleHash value"""
  UncleHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields
  ): String
}

input EVM_Uncle_Filter {
  """Any combination ( as OR ) of supplied conditions"""
  any: [EVM_Uncle_FilterAny!]

  """Select by Block"""
  Block: EVM_Uncle_Input_Block_InputType

  """Select by Uncle"""
  Uncle: EVM_Uncle_Input_Uncle_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger
}

input EVM_Uncle_FilterAny {
  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Block"""
  Block: EVM_Uncle_Input_Block_InputType

  """Select by Uncle"""
  Uncle: EVM_Uncle_Input_Uncle_InputType
}

"""Select by Block"""
input EVM_Uncle_Input_Block_InputType {
  UnclesCount: OLAP_Integer
  TxHash: OLAP_String
  TxCount: OLAP_Integer
  Extra: OLAP_String
  Number: OLAP_BigInteger
  Difficulty: OLAP_BigInteger
  Result: EVM_Uncle_Input_Block_Result_InputType
  GasUsed: OLAP_BigInteger
  Nonce: OLAP_BigInteger
  Coinbase: OLAP_String
  GasLimit: OLAP_BigInteger
  ReceiptHash: OLAP_String
  Hash: OLAP_String
  UncleHash: OLAP_String
  Date: OLAP_Date
  ParentHash: OLAP_String
  Time: OLAP_DateTime
  Root: OLAP_String
  Bloom: OLAP_String
  MixDigest: OLAP_String
  BaseFeeInUSD: EVM_Amount_With_Decimals
  BaseFee: EVM_Amount_With_Decimals
  L1: EVM_Uncle_Input_Block_L1_InputType
}

"""Select by L1"""
input EVM_Uncle_Input_Block_L1_InputType {
  Hash: OLAP_String
  ParentHash: OLAP_String
  Coinbase: OLAP_String
  BaseFee: EVM_Amount_With_Decimals
  BaseFeeInUSD: EVM_Amount_With_Decimals
}

"""Select by Result"""
input EVM_Uncle_Input_Block_Result_InputType {
  Errors: OLAP_String
  Gas: OLAP_BigInteger
}

"""Select by Block"""
input EVM_Uncle_Input_Uncle_Block_InputType {
  MixDigest: OLAP_String
  GasUsed: OLAP_BigInteger
  Bloom: OLAP_String
  BaseFeeInUSD: EVM_Amount_With_Decimals
  Root: OLAP_String
  Nonce: OLAP_BigInteger
  Number: OLAP_BigInteger
  Extra: OLAP_String
  UncleHash: OLAP_String
  Date: OLAP_Date
  Time: OLAP_DateTime
  ReceiptHash: OLAP_String
  TxHash: OLAP_String
  BaseFee: EVM_Amount_With_Decimals
  Hash: OLAP_String
  Difficulty: OLAP_BigInteger
  ParentHash: OLAP_String
  Coinbase: OLAP_String
  GasLimit: OLAP_BigInteger
}

"""Select by Uncle"""
input EVM_Uncle_Input_Uncle_InputType {
  Block: EVM_Uncle_Input_Uncle_Block_InputType
  Index: OLAP_Integer
}

"""Limit definition"""
input EVM_Uncle_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input EVM_Uncle_LimitBy {
  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_Uncle_EnumFields!]

  """Max count in results"""
  count: Int = 0
}

"""Listed names of numeric fields in a cube"""
enum EVM_Uncle_NumFields {
  Block_GasUsed
  ChainId
  Uncle_Block_GasUsed
  Block_Nonce
  Block_Number
  Uncle_Block_Number
  Uncle_Index
  Block_Result_Gas
  Uncle_Block_Difficulty
  Block_Difficulty
  Uncle_Block_GasLimit
  Block_GasLimit
  Uncle_Block_Nonce
  Block_UnclesCount
  Block_BaseFee
  Block_L1_BaseFeeInUSD
  Block_TxCount
  Uncle_Block_BaseFee
  Block_BaseFeeInUSD
  Block_L1_BaseFee
  Uncle_Block_BaseFeeInUSD
}

"""Order by"""
input EVM_Uncle_Ordering {
  """Select a field to sort ascending"""
  ascending: EVM_Uncle_EnumFields

  """Select a field to sort descending"""
  descending: EVM_Uncle_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum EVM_Uncle_StringFields {
  Block_L1_BaseFeeInUSD
  Block_Nonce
  Block_UncleHash
  Block_ReceiptHash
  Uncle_Block_BaseFeeInUSD
  ChainId
  Uncle_Block_ParentHash
  Block_GasLimit
  Uncle_Block_Difficulty
  Block_Hash
  Uncle_Block_Date
  Block_Difficulty
  Uncle_Block_GasLimit
  Block_L1_BaseFee
  Uncle_Block_MixDigest
  Uncle_Block_ReceiptHash
  Uncle_Block_Bloom
  Uncle_Block_UncleHash
  Block_ParentHash
  Block_L1_Hash
  Block_BaseFeeInUSD
  Uncle_Block_Number
  Uncle_Block_GasUsed
  Uncle_Block_Nonce
  Block_L1_ParentHash
  Uncle_Block_BaseFee
  Block_Date
  Block_L1_Coinbase
  Block_Result_Gas
  Uncle_Block_Hash
  Uncle_Block_Extra
  Uncle_Block_Coinbase
  Block_BaseFee
  Block_Root
  Uncle_Block_Root
  Block_Result_Errors
  Uncle_Block_TxHash
  Block_TxHash
  Block_Bloom
  Block_GasUsed
  Block_Number
  Block_Coinbase
  Block_MixDigest
  Block_Extra
}

"""Select value of attributes"""
input EVM_ValueUnionSelector {
  """Selector of Unsigned Integer values"""
  UnsignedInteger: OLAP_Integer

  """Selector of Signed Integer values"""
  SignedInteger: OLAP_Integer

  """Selector of Bytes values"""
  Bytes: OLAP_String

  """Selector of BigInteger values"""
  BigInteger: OLAP_BigInteger

  """Selector of Address values"""
  Address: OLAP_String

  """Selector of String values"""
  String: OLAP_String

  """Selector of Boolean values"""
  Boolean: Boolean
}

input Metric_filter_ArrayOf_String {
  """Not equal to value"""
  ne: [String]

  """Greater than the value"""
  ge: [String]

  """Less than the value"""
  le: [String]

  """Greater or equal the value"""
  gt: [String]

  """Less or equal the value"""
  lt: [String]

  """Equal to value"""
  eq: [String]
}

input Metric_filter_Float {
  """Equal to value"""
  eq: Float

  """Not equal to value"""
  ne: Float

  """Greater than the value"""
  ge: Float

  """Less than the value"""
  le: Float

  """Greater or equal the value"""
  gt: Float

  """Less or equal the value"""
  lt: Float
}

input Metric_filter_String {
  """Greater than the value"""
  ge: String

  """Less than the value"""
  le: String

  """Greater or equal the value"""
  gt: String

  """Less or equal the value"""
  lt: String

  """Equal to value"""
  eq: String

  """Not equal to value"""
  ne: String
}

"""Big Integer ( more than 32 bits precision), including negative numbers"""
input OLAP_BigInteger {
  """Number is not in the provided list"""
  notIn: [String!]

  """Greater than the value"""
  ge: String

  """Less than the value"""
  le: String

  """Greater or equal the value"""
  gt: String

  """Less or equal the value"""
  lt: String

  """Equal to value"""
  eq: String

  """Not equal to value"""
  ne: String

  """Number in the provided list"""
  in: [String!]
}

"""Date representation YYYY-MM-DD format"""
input OLAP_Date {
  """Exact match the date"""
  is: String

  """Not this date"""
  not: String

  """Date in the provided list"""
  in: [String!]

  """Date is not in the provided list"""
  notIn: [String!]

  """Strictly before this date"""
  before: String

  """Strictly after this date"""
  after: String

  """Before this date and including it"""
  till: String

  """After this date and including it"""
  since: String
}

"""Interval for date rounding"""
input OLAP_DateInterval {
  """Offset in specified units ( default is day )"""
  offset: Int

  """Interval units ( default is second )"""
  in: OLAP_DateIntervalUnits

  """Interval size in specified units ( default is day )"""
  count: Int
}

enum OLAP_DateIntervalUnits {
  """Interval in days"""
  days

  """Interval in weeks"""
  weeks

  """Interval in months"""
  months

  """Interval in years"""
  years
}

"""Date and time in ISO8601 (2006-01-02T15:04:05.999999999Z) format"""
input OLAP_DateTime {
  """Time is not in the provided list"""
  notIn: [DateTime!]

  """Strictly before this time"""
  before: DateTime

  """Strictly after this time"""
  after: DateTime

  """Before this time and including it"""
  till: DateTime

  """After this time and including it"""
  since: DateTime

  """Exact match the time"""
  is: DateTime

  """Not this time"""
  not: DateTime

  """Time in the provided list"""
  in: [DateTime!]
}

"""Interval for time rounding"""
input OLAP_DateTimeInterval {
  """Interval units ( default is second )"""
  in: OLAP_DateTimeIntervalUnits

  """Interval size in specified units ( default is second )"""
  count: Int

  """Offset in specified units ( default is second )"""
  offset: Int
}

enum OLAP_DateTimeIntervalUnits {
  """Interval in weeks"""
  weeks

  """Interval in months"""
  months

  """Interval in years"""
  years

  """Interval in seconds"""
  seconds

  """Interval in minutes"""
  minutes

  """Interval in hours"""
  hours

  """Interval in days"""
  days
}

"""Float 64 bit precision data"""
input OLAP_Float {
  """Greater or equal the value"""
  gt: Float

  """Less or equal the value"""
  lt: Float

  """Equal to value"""
  eq: Float

  """Not equal to value"""
  ne: Float

  """Greater than the value"""
  ge: Float

  """Less than the value"""
  le: Float
}

"""Integer 32-bit signed"""
input OLAP_Integer {
  """Not equal to value"""
  ne: Int

  """Number in the provided list"""
  in: [Int!]

  """Number is not in the provided list"""
  notIn: [Int!]

  """Greater than the value"""
  ge: Int

  """Less than the value"""
  le: Int

  """Greater or equal the value"""
  gt: Int

  """Less or equal the value"""
  lt: Int

  """Equal to value"""
  eq: Int
}

"""Method used to calculate"""
enum OLAP_Metric_Calculation_Method_Exact {
  """Calculates the exact metric"""
  exact

  """Calculates the approximate metric"""
  approximate
}

"""String value"""
input OLAP_String {
  """String ends with postfix"""
  endsWith: [String!]

  """Not like this string with % as placeholder"""
  notLike: String

  """Included in the string"""
  includes: String

  """String starts with suffix"""
  startsWith: [String!]

  """Exact match the string"""
  is: String

  """Not included in this string"""
  notIncludes: String

  """Not this string"""
  not: String

  """String in the provided list"""
  in: [String!]

  """Like this string with % as placeholder"""
  like: String

  """String is not in the provided list"""
  notIn: [String!]
}

type RootQuery {
  EVM(
    """
    Controls which blocks are included in query results. Note that this field is ignored to query archive data
    """
    select_blocks: blocks_query_arg_enum

    """Controls which dataset used to get results"""
    dataset: dataset_arg_enum

    """Controls which dataset used to get results"""
    mempool: Boolean = false
    network: evm_network
  ): EVM
  Solana(
    """Controls which dataset used to get results"""
    dataset: dataset_arg_enum
    network: solana_network

    """
    Controls which blocks are included in query results. Note that this field is ignored to query archive data
    """
    select_blocks: blocks_query_arg_enum
  ): Solana
  Tron(
    network: tron_network

    """
    Controls which blocks are included in query results. Note that this field is ignored to query archive data
    """
    select_blocks: blocks_query_arg_enum

    """Controls which dataset used to get results"""
    dataset: dataset_arg_enum

    """Controls which dataset used to get results"""
    mempool: Boolean = false
  ): Tron
}

type RootSubscription {
  EVM(
    network: evm_network

    """
    Controls which blocks are included into update of the subscription data
    """
    trigger_on: blocks_update_arg_enum

    """Controls which dataset used to get results"""
    mempool: Boolean = false
  ): EVM_Subscription
  Solana(
    network: solana_network

    """
    Controls which blocks are included into update of the subscription data
    """
    trigger_on: blocks_update_arg_enum
  ): Solana_Subscription
  Tron(
    """Controls which dataset used to get results"""
    mempool: Boolean = false
    network: tron_network

    """
    Controls which blocks are included into update of the subscription data
    """
    trigger_on: blocks_update_arg_enum
  ): Tron_Subscription
}

"""Solana type blockchain schema"""
type Solana {
  BalanceUpdates(
    """Conditions on query to filter results"""
    where: Solana_BalanceUpdate_Filter

    """Field ordering"""
    orderBy: [Solana_BalanceUpdate_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_BalanceUpdate_LimitBy

    """Response limits"""
    limit: Solana_BalanceUpdate_Limit
  ): [Solana_BalanceUpdate_Cube!]
  Blocks(
    """Conditions on query to filter results"""
    where: Solana_Block_Filter

    """Field ordering"""
    orderBy: [Solana_Block_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_Block_LimitBy

    """Response limits"""
    limit: Solana_Block_Limit
  ): [Solana_Block_Cube!]
  DEXOrders(
    """Conditions on query to filter results"""
    where: Solana_DEXOrder_Filter

    """Field ordering"""
    orderBy: [Solana_DEXOrder_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_DEXOrder_LimitBy

    """Response limits"""
    limit: Solana_DEXOrder_Limit
  ): [Solana_DEXOrder_Cube!]
  DEXTradeByTokens(
    """Response limits"""
    limit: Solana_DEXTradeByToken_Limit

    """Conditions on query to filter results"""
    where: Solana_DEXTradeByToken_Filter

    """Field ordering"""
    orderBy: [Solana_DEXTradeByToken_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_DEXTradeByToken_LimitBy
  ): [Solana_DEXTradeByToken_Cube!]
  DEXTrades(
    """Conditions on query to filter results"""
    where: Solana_DEXTrade_Filter

    """Field ordering"""
    orderBy: [Solana_DEXTrade_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_DEXTrade_LimitBy

    """Response limits"""
    limit: Solana_DEXTrade_Limit
  ): [Solana_DEXTrade_Cube!]
  InstructionBalanceUpdates(
    """Conditions on query to filter results"""
    where: Solana_InstructionBalanceUpdate_Filter

    """Field ordering"""
    orderBy: [Solana_InstructionBalanceUpdate_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_InstructionBalanceUpdate_LimitBy

    """Response limits"""
    limit: Solana_InstructionBalanceUpdate_Limit
  ): [Solana_InstructionBalanceUpdate_Cube!]
  Instructions(
    """Field ordering"""
    orderBy: [Solana_Instruction_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_Instruction_LimitBy

    """Response limits"""
    limit: Solana_Instruction_Limit

    """Conditions on query to filter results"""
    where: Solana_Instruction_Filter
  ): [Solana_Instruction_Cube!]
  Rewards(
    """Conditions on query to filter results"""
    where: Solana_Reward_Filter

    """Field ordering"""
    orderBy: [Solana_Reward_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_Reward_LimitBy

    """Response limits"""
    limit: Solana_Reward_Limit
  ): [Solana_Reward_Cube!]
  Transactions(
    """Response limits by specified field"""
    limitBy: Solana_Transaction_LimitBy

    """Response limits"""
    limit: Solana_Transaction_Limit

    """Conditions on query to filter results"""
    where: Solana_Transaction_Filter

    """Field ordering"""
    orderBy: [Solana_Transaction_Ordering!]
  ): [Solana_Transaction_Cube!]
  Transfers(
    """Response limits"""
    limit: Solana_Transfer_Limit

    """Conditions on query to filter results"""
    where: Solana_Transfer_Filter

    """Field ordering"""
    orderBy: [Solana_Transfer_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_Transfer_LimitBy
  ): [Solana_Transfer_Cube!]
}

type Solana_ABI_Address_Value_Arg {
  address: String
}

type Solana_ABI_BigInt_Value_Arg {
  bigInteger: String
}

type Solana_ABI_Boolean_Value_Arg {
  bool: Boolean
}

type Solana_ABI_Bytes_Value_Arg {
  hex: String
}

type Solana_ABI_Float_Value_Arg {
  float: Float
}

type Solana_ABI_Integer_Value_Arg {
  integer: Int
}

type Solana_ABI_Json_Value_Arg {
  json: String
}

type Solana_ABI_String_Value_Arg {
  string: String
}

"""Union Type for argument values"""
union Solana_ABI_Value_Union = Solana_ABI_Integer_Value_Arg | Solana_ABI_String_Value_Arg | Solana_ABI_Address_Value_Arg | Solana_ABI_BigInt_Value_Arg | Solana_ABI_Bytes_Value_Arg | Solana_ABI_Boolean_Value_Arg | Solana_ABI_Float_Value_Arg | Solana_ABI_Json_Value_Arg

"""Listed names of comparable fields in a cube"""
enum Solana_BalanceUpdate_CompareFields {
  BalanceUpdate_Currency_VerifiedCollection
  BalanceUpdate_Currency_Wrapped
  BalanceUpdate_PostBalanceInUSD
  Block_Time
  Block_Slot
  BalanceUpdate_PreBalance
  BalanceUpdate_Currency_IsMutable
  BalanceUpdate_Currency_Decimals
  BalanceUpdate_Currency_PrimarySaleHappened
  Transaction_FeeInUSD
  Block_Height
  BalanceUpdate_AmountInUSD
  BalanceUpdate_PostBalance
  Transaction_Index
  BalanceUpdate_PreBalanceInUSD
  BalanceUpdate_Amount
  BalanceUpdate_Index
  Transaction_Result_Success
  Block_Date
  Transaction_Fee
  Block_ParentSlot
  BalanceUpdate_Currency_SellerFeeBasisPoints
  BalanceUpdate_Currency_Native
  BalanceUpdate_Currency_EditionNonce
  BalanceUpdate_Currency_Fungible
}

"""Balance Updates in transaction in Solana Blockchain"""
type Solana_BalanceUpdate_Cube {
  """BalanceUpdate fields"""
  BalanceUpdate: Solana_BalanceUpdate_Fields_BalanceUpdate

  """Block fields"""
  Block: Solana_BalanceUpdate_Fields_Block

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Transaction fields"""
  Transaction: Solana_BalanceUpdate_Fields_Transaction

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: Solana_BalanceUpdate_StringFields!

    """Side2 argument"""
    side2: Solana_BalanceUpdate_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: Solana_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """First argument for Contingency coefficient between two arguments"""
    of: Solana_BalanceUpdate_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: Solana_BalanceUpdate_NumFields
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Solana_BalanceUpdate_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Solana_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [Solana_BalanceUpdate_EnumFields!]
  ): String

  """Covariance between two arguments"""
  covariance(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: Solana_BalanceUpdate_NumFields

    """Second argument for Covariance between two arguments"""
    with: Solana_BalanceUpdate_NumFields
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Solana_BalanceUpdate_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Solana_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Solana_BalanceUpdate_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Solana_BalanceUpdate_NumFields
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Argument for Dispersion for a set of values"""
    of: Solana_BalanceUpdate_NumFields!
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: Solana_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: Solana_BalanceUpdate_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """Argument for Kurtosis for a set of values"""
    of: Solana_BalanceUpdate_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Argument for Median for a set of values"""
    of: Solana_BalanceUpdate_NumFields!
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: Solana_BalanceUpdate_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Argument for quantile"""
    of: Solana_BalanceUpdate_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """First argument for Rank correlation coefficient between two arguments"""
    of: Solana_BalanceUpdate_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: Solana_BalanceUpdate_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """Argument for Skew for a set of values"""
    of: Solana_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: Solana_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Argument for sum"""
    of: Solana_BalanceUpdate_NumFields!
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: Solana_BalanceUpdate_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Solana_BalanceUpdate_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Solana_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Uniq values of the field"""
    of: [Solana_BalanceUpdate_EnumFields!]!
  ): String
}

"""Listed names of fields in a cube"""
enum Solana_BalanceUpdate_EnumFields {
  BalanceUpdate_Currency_Uri
  BalanceUpdate_Currency_UpdateAuthority
  BalanceUpdate_Currency_TokenCreator_Verified
  Transaction_Signer
  BalanceUpdate_Currency_Symbol
  BalanceUpdate_Currency_Name
  BalanceUpdate_AmountInUSD
  ChainId
  Transaction_Result_ErrorMessage
  BalanceUpdate_Currency_ProgramAddress
  BalanceUpdate_PreBalanceInUSD
  BalanceUpdate_Currency_Fungible
  BalanceUpdate_Currency_VerifiedCollection
  BalanceUpdate_PostBalanceInUSD
  Transaction_Result_Success
  Block_Slot
  Transaction_FeeInUSD
  Block_ParentSlot
  BalanceUpdate_Currency_TokenStandard
  Block_Date
  BalanceUpdate_Currency_TokenCreator_Share
  BalanceUpdate_Currency_PrimarySaleHappened
  BalanceUpdate_Type
  Block_Hash
  Block_Height
  BalanceUpdate_Currency_SellerFeeBasisPoints
  BalanceUpdate_Account_Address
  Transaction_Signature
  BalanceUpdate_Currency_Decimals
  BalanceUpdate_Account_Token_Owner
  Transaction_FeePayer
  BalanceUpdate_Amount
  BalanceUpdate_Currency_EditionNonce
  Transaction_Index
  BalanceUpdate_Currency_MintAddress
  BalanceUpdate_PreBalance
  Block_ParentHash
  BalanceUpdate_Currency_IsMutable
  Block_Time
  Transaction_Fee
  BalanceUpdate_PostBalance
  BalanceUpdate_Currency_TokenCreator_Address
  BalanceUpdate_Index
  BalanceUpdate_Currency_Wrapped
  BalanceUpdate_Currency_Native
  BalanceUpdate_Currency_Key
  BalanceUpdate_Currency_CollectionAddress
  BalanceUpdate_Currency_MetadataAddress
}

"""BalanceUpdate fields"""
type Solana_BalanceUpdate_Fields_BalanceUpdate {
  """Account fields"""
  Account: Solana_BalanceUpdate_Fields_BalanceUpdate_Account

  """Amount value"""
  Amount(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields
  ): String

  """Currency fields"""
  Currency: Solana_BalanceUpdate_Fields_BalanceUpdate_Currency

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """PostBalance value"""
  PostBalance(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """PostBalanceInUSD value"""
  PostBalanceInUSD(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """PreBalance value"""
  PreBalance(
    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields
  ): String

  """PreBalanceInUSD value"""
  PreBalanceInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields
  ): String

  """Type value"""
  Type(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields
  ): Solana_BalanceUpdate_Fields_BalanceUpdate_BalanceUpdate_Type_Output
}

"""Account fields"""
type Solana_BalanceUpdate_Fields_BalanceUpdate_Account {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Token fields"""
  Token: Solana_BalanceUpdate_Fields_BalanceUpdate_Account_Token
}

"""Token fields"""
type Solana_BalanceUpdate_Fields_BalanceUpdate_Account_Token {
  """Owner value"""
  Owner(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Enumeration for BalanceUpdate_Type"""
enum Solana_BalanceUpdate_Fields_BalanceUpdate_BalanceUpdate_Type_Output {
  """BalanceUpdate_Type Transaction"""
  Transaction

  """BalanceUpdate_Type Reward"""
  Reward
}

"""Currency fields"""
type Solana_BalanceUpdate_Fields_BalanceUpdate_Currency {
  """CollectionAddress value"""
  CollectionAddress(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields
  ): String

  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """EditionNonce value"""
  EditionNonce(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """IsMutable value"""
  IsMutable(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Key value"""
  Key(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """MetadataAddress value"""
  MetadataAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """MintAddress value"""
  MintAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Native value"""
  Native(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """PrimarySaleHappened value"""
  PrimarySaleHappened(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """ProgramAddress value"""
  ProgramAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SellerFeeBasisPoints value"""
  SellerFeeBasisPoints(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Symbol value"""
  Symbol(
    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields
  ): String

  """TokenCreator fields"""
  TokenCreator: Solana_BalanceUpdate_Fields_BalanceUpdate_Currency_TokenCreator

  """TokenStandard value"""
  TokenStandard(
    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields
  ): String

  """UpdateAuthority value"""
  UpdateAuthority(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Uri value"""
  Uri(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """VerifiedCollection value"""
  VerifiedCollection(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Wrapped value"""
  Wrapped(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""TokenCreator fields"""
type Solana_BalanceUpdate_Fields_BalanceUpdate_Currency_TokenCreator {
  """Address value"""
  Address(
    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_BalanceUpdate_Fields_BalanceUpdate_Currency_TokenCreator_Address_Select_BalanceUpdate_Currency_TokenCreator_Address

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields
  ): [String]

  """Share value"""
  Share(
    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_BalanceUpdate_Fields_BalanceUpdate_Currency_TokenCreator_Share_Select_BalanceUpdate_Currency_TokenCreator_Share

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields
  ): [Int]

  """Verified value"""
  Verified(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_BalanceUpdate_Fields_BalanceUpdate_Currency_TokenCreator_Verified_Select_BalanceUpdate_Currency_TokenCreator_Verified
  ): [Boolean]
}

"""
Array of BalanceUpdate_Currency_TokenCreator_Address includes or excludes provided value
"""
input Solana_BalanceUpdate_Fields_BalanceUpdate_Currency_TokenCreator_Address_Select_BalanceUpdate_Currency_TokenCreator_Address {
  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]
}

"""
Array of BalanceUpdate_Currency_TokenCreator_Share includes or excludes provided value
"""
input Solana_BalanceUpdate_Fields_BalanceUpdate_Currency_TokenCreator_Share_Select_BalanceUpdate_Currency_TokenCreator_Share {
  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]
}

"""
Array of BalanceUpdate_Currency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_BalanceUpdate_Fields_BalanceUpdate_Currency_TokenCreator_Verified_Select_BalanceUpdate_Currency_TokenCreator_Verified {
  """Excludes this element"""
  excludes: [Boolean]

  """Starts with this element"""
  startsWith: [Boolean]

  """Ends with this element"""
  endsWith: [Boolean]

  """Does not start with this element"""
  notStartsWith: [Boolean]

  """Does not End with this element"""
  notEndsWith: [Boolean]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Boolean]
}

"""Select filters for BalanceUpdate_Type"""
input Solana_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type {
  """Exact match"""
  is: Solana_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type_Input

  """Not this"""
  not: Solana_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type_Input

  """One of the values"""
  in: [Solana_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type_Input!]

  """Not one of the values"""
  notIn: [Solana_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type_Input!]
}

"""Enumeration for BalanceUpdate_Type"""
enum Solana_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type_Input {
  """BalanceUpdate_Type Transaction"""
  Transaction

  """BalanceUpdate_Type Reward"""
  Reward
}

"""Block fields"""
type Solana_BalanceUpdate_Fields_Block {
  """Date value"""
  Date(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Height value"""
  Height(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentSlot value"""
  ParentSlot(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Slot value"""
  Slot(
    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields
  ): String

  """Time value"""
  Time(
    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields
  ): DateTime
}

"""Transaction fields"""
type Solana_BalanceUpdate_Fields_Transaction {
  """Fee value"""
  Fee(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields
  ): String

  """FeePayer value"""
  FeePayer(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Result fields"""
  Result: Solana_BalanceUpdate_Fields_Transaction_Result

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Signer value"""
  Signer(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Result fields"""
type Solana_BalanceUpdate_Fields_Transaction_Result {
  """ErrorMessage value"""
  ErrorMessage(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Solana_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

input Solana_BalanceUpdate_Filter {
  """Select by BalanceUpdate"""
  BalanceUpdate: Solana_BalanceUpdate_Input_BalanceUpdate_InputType

  """Select by Block"""
  Block: Solana_BalanceUpdate_Input_Block_InputType

  """Select by Transaction"""
  Transaction: Solana_BalanceUpdate_Input_Transaction_InputType

  """String value"""
  ChainId: OLAP_String

  """Any combination ( as OR ) of supplied conditions"""
  any: [Solana_BalanceUpdate_FilterAny!]
}

input Solana_BalanceUpdate_FilterAny {
  """String value"""
  ChainId: OLAP_String

  """Select by BalanceUpdate"""
  BalanceUpdate: Solana_BalanceUpdate_Input_BalanceUpdate_InputType

  """Select by Block"""
  Block: Solana_BalanceUpdate_Input_Block_InputType

  """Select by Transaction"""
  Transaction: Solana_BalanceUpdate_Input_Transaction_InputType
}

"""Select by Account"""
input Solana_BalanceUpdate_Input_BalanceUpdate_Account_InputType {
  Token: Solana_BalanceUpdate_Input_BalanceUpdate_Account_Token_InputType
  Address: OLAP_String
}

"""Select by Token"""
input Solana_BalanceUpdate_Input_BalanceUpdate_Account_Token_InputType {
  Owner: OLAP_String
}

"""Select by Currency"""
input Solana_BalanceUpdate_Input_BalanceUpdate_Currency_InputType {
  TokenCreator: Solana_BalanceUpdate_Input_BalanceUpdate_Currency_TokenCreator_InputType
  Key: OLAP_String
  UpdateAuthority: OLAP_String
  PrimarySaleHappened: Boolean
  MintAddress: OLAP_String
  Symbol: OLAP_String
  CollectionAddress: OLAP_String
  IsMutable: Boolean
  Fungible: Boolean
  Wrapped: Boolean
  Name: OLAP_String
  SellerFeeBasisPoints: OLAP_Integer
  MetadataAddress: OLAP_String
  VerifiedCollection: Boolean
  EditionNonce: OLAP_Integer
  TokenStandard: OLAP_String
  ProgramAddress: OLAP_String
  Uri: OLAP_String
  Decimals: OLAP_Integer
  Native: Boolean
}

"""
Array of BalanceUpdate_Currency_TokenCreator_Address includes or excludes provided value
"""
input Solana_BalanceUpdate_Input_BalanceUpdate_Currency_TokenCreator_Address_Input_BalanceUpdate_Currency_TokenCreator_Address {
  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]
}

"""Select by TokenCreator"""
input Solana_BalanceUpdate_Input_BalanceUpdate_Currency_TokenCreator_InputType {
  Share: Solana_BalanceUpdate_Input_BalanceUpdate_Currency_TokenCreator_Share_Input_BalanceUpdate_Currency_TokenCreator_Share
  Verified: Solana_BalanceUpdate_Input_BalanceUpdate_Currency_TokenCreator_Verified_Input_BalanceUpdate_Currency_TokenCreator_Verified
  Address: Solana_BalanceUpdate_Input_BalanceUpdate_Currency_TokenCreator_Address_Input_BalanceUpdate_Currency_TokenCreator_Address
}

"""
Array of BalanceUpdate_Currency_TokenCreator_Share includes or excludes provided value
"""
input Solana_BalanceUpdate_Input_BalanceUpdate_Currency_TokenCreator_Share_Input_BalanceUpdate_Currency_TokenCreator_Share {
  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]
}

"""
Array of BalanceUpdate_Currency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_BalanceUpdate_Input_BalanceUpdate_Currency_TokenCreator_Verified_Input_BalanceUpdate_Currency_TokenCreator_Verified {
  """Starts with this element"""
  startsWith: [Boolean]

  """Ends with this element"""
  endsWith: [Boolean]

  """Does not start with this element"""
  notStartsWith: [Boolean]

  """Does not End with this element"""
  notEndsWith: [Boolean]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]
}

"""Select by BalanceUpdate"""
input Solana_BalanceUpdate_Input_BalanceUpdate_InputType {
  Account: Solana_BalanceUpdate_Input_BalanceUpdate_Account_InputType
  Amount: EVM_Amount_With_Decimals
  PostBalanceInUSD: EVM_Amount_With_Decimals
  Type: Solana_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type
  PreBalance: EVM_Amount_With_Decimals
  PreBalanceInUSD: EVM_Amount_With_Decimals
  Currency: Solana_BalanceUpdate_Input_BalanceUpdate_Currency_InputType
  PostBalance: EVM_Amount_With_Decimals
  AmountInUSD: EVM_Amount_With_Decimals
  Index: OLAP_Integer
}

"""Select filters for BalanceUpdate_Type"""
input Solana_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type {
  """Exact match"""
  is: Solana_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type_Input

  """Not this"""
  not: Solana_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type_Input

  """One of the values"""
  in: [Solana_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type_Input!]

  """Not one of the values"""
  notIn: [Solana_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type_Input!]
}

"""Enumeration for BalanceUpdate_Type"""
enum Solana_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type_Input {
  """BalanceUpdate_Type Transaction"""
  Transaction

  """BalanceUpdate_Type Reward"""
  Reward
}

"""Select by Block"""
input Solana_BalanceUpdate_Input_Block_InputType {
  ParentHash: OLAP_String
  Time: OLAP_DateTime
  Date: OLAP_Date
  Height: OLAP_BigInteger
  Slot: OLAP_BigInteger
  ParentSlot: OLAP_BigInteger
  Hash: OLAP_String
}

"""Select by Transaction"""
input Solana_BalanceUpdate_Input_Transaction_InputType {
  Result: Solana_BalanceUpdate_Input_Transaction_Result_InputType
  Index: OLAP_Integer
  FeePayer: OLAP_String
  Signer: OLAP_String
  Signature: OLAP_String
  Fee: EVM_Amount_With_Decimals
  FeeInUSD: EVM_Amount_With_Decimals
}

"""Select by Result"""
input Solana_BalanceUpdate_Input_Transaction_Result_InputType {
  Success: Boolean
  ErrorMessage: OLAP_String
}

"""Limit definition"""
input Solana_BalanceUpdate_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input Solana_BalanceUpdate_LimitBy {
  """Limit by specific field"""
  by: [Solana_BalanceUpdate_EnumFields!]

  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Listed names of numeric fields in a cube"""
enum Solana_BalanceUpdate_NumFields {
  Block_Height
  Block_Slot
  BalanceUpdate_PostBalance
  Block_ParentSlot
  BalanceUpdate_Amount
  BalanceUpdate_Index
  BalanceUpdate_Currency_SellerFeeBasisPoints
  Transaction_FeeInUSD
  BalanceUpdate_Currency_Decimals
  Transaction_Index
  BalanceUpdate_PreBalanceInUSD
  Transaction_Fee
  BalanceUpdate_PreBalance
  BalanceUpdate_Currency_EditionNonce
  BalanceUpdate_AmountInUSD
  BalanceUpdate_PostBalanceInUSD
}

"""Order by"""
input Solana_BalanceUpdate_Ordering {
  """Select a field to sort ascending"""
  ascending: Solana_BalanceUpdate_EnumFields

  """Select a field to sort descending"""
  descending: Solana_BalanceUpdate_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum Solana_BalanceUpdate_StringFields {
  Transaction_Signer
  BalanceUpdate_Account_Token_Owner
  BalanceUpdate_Currency_CollectionAddress
  BalanceUpdate_PreBalanceInUSD
  ChainId
  BalanceUpdate_Currency_TokenStandard
  BalanceUpdate_Currency_Name
  BalanceUpdate_Currency_UpdateAuthority
  Transaction_FeePayer
  BalanceUpdate_Currency_Symbol
  Transaction_FeeInUSD
  Block_Date
  BalanceUpdate_Currency_MetadataAddress
  Block_Hash
  BalanceUpdate_PreBalance
  Block_Height
  Transaction_Result_ErrorMessage
  Transaction_Fee
  BalanceUpdate_Currency_MintAddress
  BalanceUpdate_Amount
  Block_ParentHash
  Block_Slot
  BalanceUpdate_Currency_Key
  Transaction_Signature
  BalanceUpdate_AmountInUSD
  BalanceUpdate_PostBalance
  Block_ParentSlot
  BalanceUpdate_PostBalanceInUSD
  BalanceUpdate_Account_Address
  BalanceUpdate_Currency_ProgramAddress
  BalanceUpdate_Currency_Uri
}

"""Listed names of comparable fields in a cube"""
enum Solana_Block_CompareFields {
  Block_Time
  Block_Slot
  Block_TxCount
  Block_ParentSlot
  Block_Date
  Block_RewardsCount
  Block_Height
}

"""Block of transactions in Solana Blockchain"""
type Solana_Block_Cube {
  """Block fields"""
  Block: Solana_Block_Fields_Block

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """Side1 argument"""
    side1: Solana_Block_StringFields!

    """Side2 argument"""
    side2: Solana_Block_StringFields!

    """Intersect with array"""
    intersectWith: [String!]

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String
  ): [String]

  """Average of the values"""
  average(
    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: Solana_Block_NumFields!
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """Second argument for Contingency coefficient between two arguments"""
    with: Solana_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: Solana_Block_NumFields
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Solana_Block_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Solana_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """Count distinct values of the field"""
    distinct: [Solana_Block_EnumFields!]
  ): String

  """Covariance between two arguments"""
  covariance(
    """Second argument for Covariance between two arguments"""
    with: Solana_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: Solana_Block_NumFields
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Solana_Block_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Solana_Block_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Solana_Block_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Solana_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: Solana_Block_NumFields!
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: Solana_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: Solana_Block_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """Argument for Kurtosis for a set of values"""
    of: Solana_Block_NumFields!
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: Solana_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: Solana_Block_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Argument for quantile"""
    of: Solana_Block_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """First argument for Rank correlation coefficient between two arguments"""
    of: Solana_Block_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: Solana_Block_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: Solana_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: Solana_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: Solana_Block_NumFields!
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: Solana_Block_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Solana_Block_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Solana_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter
  ): Float

  """Count unique records"""
  uniq(
    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [Solana_Block_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter
  ): String
}

"""Listed names of fields in a cube"""
enum Solana_Block_EnumFields {
  Block_RewardsCount
  Block_Time
  Block_TxCount
  Block_ParentSlot
  Block_ParentHash
  Block_Height
  Block_Slot
  Block_Date
  ChainId
  Block_Hash
}

"""Block fields"""
type Solana_Block_Fields_Block {
  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Height value"""
  Height(
    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Return value when the argument is maximum"""
    maximum: Solana_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter
  ): String

  """ParentSlot value"""
  ParentSlot(
    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """RewardsCount value"""
  RewardsCount(
    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Slot value"""
  Slot(
    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """TxCount value"""
  TxCount(
    """Return value when the argument is minimum"""
    minimum: Solana_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Block_CompareFields
  ): Int
}

input Solana_Block_Filter {
  """Select by Block"""
  Block: Solana_Block_Input_Block_InputType

  """String value"""
  ChainId: OLAP_String

  """Any combination ( as OR ) of supplied conditions"""
  any: [Solana_Block_FilterAny!]
}

input Solana_Block_FilterAny {
  """Select by Block"""
  Block: Solana_Block_Input_Block_InputType

  """String value"""
  ChainId: OLAP_String
}

"""Select by Block"""
input Solana_Block_Input_Block_InputType {
  ParentSlot: OLAP_BigInteger
  TxCount: OLAP_Integer
  Date: OLAP_Date
  Hash: OLAP_String
  Slot: OLAP_BigInteger
  ParentHash: OLAP_String
  RewardsCount: OLAP_Integer
  Time: OLAP_DateTime
  Height: OLAP_BigInteger
}

"""Limit definition"""
input Solana_Block_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input Solana_Block_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [Solana_Block_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum Solana_Block_NumFields {
  Block_RewardsCount
  Block_Height
  Block_Slot
  Block_TxCount
  Block_ParentSlot
}

"""Order by"""
input Solana_Block_Ordering {
  """Select a field to sort ascending"""
  ascending: Solana_Block_EnumFields

  """Select a field to sort descending"""
  descending: Solana_Block_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum Solana_Block_StringFields {
  Block_ParentHash
  Block_Height
  Block_Slot
  Block_ParentSlot
  Block_Date
  ChainId
  Block_Hash
}

"""Listed names of comparable fields in a cube"""
enum Solana_DEXOrder_CompareFields {
  Instruction_InternalSeqNumber
  OrderEvent_Order_LimitPriceInUSD
  OrderEvent_Market_QuoteCurrency_Wrapped
  OrderEvent_Index
  OrderEvent_Market_BaseCurrency_EditionNonce
  OrderEvent_Market_BaseCurrency_PrimarySaleHappened
  Transaction_Result_Success
  OrderEvent_Market_QuoteCurrency_PrimarySaleHappened
  Instruction_Index
  OrderEvent_Market_QuoteCurrency_VerifiedCollection
  OrderEvent_Market_BaseCurrency_IsMutable
  OrderEvent_Order_LimitAmountInUSD
  Transaction_Fee
  OrderEvent_Market_QuoteCurrency_Native
  OrderEvent_Market_BaseCurrency_Decimals
  OrderEvent_Market_QuoteCurrency_SellerFeeBasisPoints
  Block_ParentSlot
  OrderEvent_Market_BaseCurrency_SellerFeeBasisPoints
  Block_Slot
  OrderEvent_Market_BaseCurrency_Wrapped
  OrderEvent_Market_QuoteCurrency_Fungible
  OrderEvent_Market_QuoteCurrency_EditionNonce
  Block_Height
  OrderEvent_Market_QuoteCurrency_Decimals
  OrderEvent_Market_BaseCurrency_Fungible
  Instruction_ExternalSeqNumber
  Block_Date
  OrderEvent_Market_QuoteCurrency_IsMutable
  Block_Time
  OrderEvent_Order_LimitPrice
  Instruction_Program_Parsed
  Transaction_Index
  Transaction_FeeInUSD
  OrderEvent_Market_BaseCurrency_Native
  OrderEvent_Market_BaseCurrency_VerifiedCollection
  OrderEvent_Order_LimitAmount
  OrderEvent_Order_BuySide
}

"""DEX Orders in Solana Blockchain"""
type Solana_DEXOrder_Cube {
  """Block fields"""
  Block: Solana_DEXOrder_Fields_Block

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Instruction fields"""
  Instruction: Solana_DEXOrder_Fields_Instruction

  """OrderEvent fields"""
  OrderEvent: Solana_DEXOrder_Fields_OrderEvent

  """Transaction fields"""
  Transaction: Solana_DEXOrder_Fields_Transaction

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: Solana_DEXOrder_StringFields!

    """Side2 argument"""
    side2: Solana_DEXOrder_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Argument for Average of the values"""
    of: Solana_DEXOrder_NumFields!
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: Solana_DEXOrder_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: Solana_DEXOrder_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Solana_DEXOrder_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Solana_DEXOrder_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Count records or uniques of arguments"""
  count(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [Solana_DEXOrder_EnumFields!]
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: Solana_DEXOrder_NumFields

    """Second argument for Covariance between two arguments"""
    with: Solana_DEXOrder_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Solana_DEXOrder_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Solana_DEXOrder_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Solana_DEXOrder_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Solana_DEXOrder_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: Solana_DEXOrder_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: Solana_DEXOrder_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: Solana_DEXOrder_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: Solana_DEXOrder_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): Float

  """Median for a set of values"""
  median(
    """Argument for Median for a set of values"""
    of: Solana_DEXOrder_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: Solana_DEXOrder_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: Solana_DEXOrder_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: Solana_DEXOrder_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: Solana_DEXOrder_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: Solana_DEXOrder_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: Solana_DEXOrder_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: Solana_DEXOrder_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: Solana_DEXOrder_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Solana_DEXOrder_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Solana_DEXOrder_NumFields
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [Solana_DEXOrder_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum Solana_DEXOrder_EnumFields {
  OrderEvent_Order_LimitAmountInUSD
  OrderEvent_Market_BaseCurrency_Symbol
  Transaction_Result_Success
  OrderEvent_Market_QuoteCurrency_Decimals
  Block_ParentSlot
  OrderEvent_Order_Payer
  OrderEvent_Order_LimitPrice
  OrderEvent_Market_BaseCurrency_MintAddress
  OrderEvent_Market_QuoteCurrency_MetadataAddress
  Transaction_Signature
  Instruction_Program_AccountNames
  Transaction_Index
  OrderEvent_Market_QuoteCurrency_TokenStandard
  Instruction_Index
  Block_Hash
  OrderEvent_Market_QuoteCurrency_TokenCreator_Verified
  OrderEvent_Market_BaseCurrency_TokenCreator_Address
  OrderEvent_Order_Mint
  OrderEvent_Market_BaseCurrency_VerifiedCollection
  Instruction_Program_Arguments
  OrderEvent_Market_BaseCurrency_CollectionAddress
  OrderEvent_Market_QuoteCurrency_Native
  OrderEvent_Market_BaseCurrency_Decimals
  OrderEvent_Market_QuoteCurrency_SellerFeeBasisPoints
  OrderEvent_Market_QuoteCurrency_Name
  OrderEvent_Market_BaseCurrency_PrimarySaleHappened
  OrderEvent_Market_BaseCurrency_ProgramAddress
  OrderEvent_Order_LimitAmount
  OrderEvent_Market_BaseCurrency_UpdateAuthority
  Instruction_Program_Name
  Instruction_Program_Method
  OrderEvent_Dex_ProgramAddress
  OrderEvent_Market_BaseCurrency_TokenCreator_Share
  OrderEvent_Market_QuoteCurrency_UpdateAuthority
  OrderEvent_Market_QuoteCurrency_IsMutable
  Transaction_Fee
  OrderEvent_Type
  OrderEvent_Market_QuoteCurrency_PrimarySaleHappened
  OrderEvent_Market_BaseCurrency_EditionNonce
  OrderEvent_Market_QuoteCurrency_MintAddress
  OrderEvent_Market_BaseCurrency_MetadataAddress
  Transaction_FeeInUSD
  Block_Date
  Block_Time
  OrderEvent_Market_QuoteCurrency_ProgramAddress
  Instruction_ExternalSeqNumber
  Transaction_FeePayer
  OrderEvent_Market_QuoteCurrency_TokenCreator_Address
  OrderEvent_Market_QuoteCurrency_Wrapped
  OrderEvent_Market_QuoteCurrency_Key
  OrderEvent_Market_QuoteCurrency_Symbol
  OrderEvent_Index
  OrderEvent_Market_BaseCurrency_Uri
  OrderEvent_Market_MarketAddress
  OrderEvent_Market_QuoteCurrency_CollectionAddress
  OrderEvent_Order_LimitPriceInUSD
  OrderEvent_Market_QuoteCurrency_Uri
  Block_ParentHash
  OrderEvent_Market_QuoteCurrency_EditionNonce
  Instruction_CallPath
  OrderEvent_Market_QuoteCurrency_Fungible
  OrderEvent_Market_QuoteCurrency_TokenCreator_Share
  OrderEvent_Market_QuoteCurrency_VerifiedCollection
  OrderEvent_Market_BaseCurrency_Native
  OrderEvent_Market_BaseCurrency_Fungible
  OrderEvent_Order_BuySide
  OrderEvent_Market_BaseCurrency_Key
  OrderEvent_Market_BaseCurrency_Name
  OrderEvent_Market_BaseCurrency_TokenCreator_Verified
  Instruction_Accounts
  OrderEvent_Market_BaseCurrency_TokenStandard
  OrderEvent_Order_Owner
  OrderEvent_Market_BaseCurrency_IsMutable
  Instruction_Program_Json
  Instruction_Program_Parsed
  Transaction_Result_ErrorMessage
  Block_Height
  OrderEvent_Order_Account
  OrderEvent_Dex_ProtocolFamily
  ChainId
  OrderEvent_Market_BaseCurrency_SellerFeeBasisPoints
  Transaction_Signer
  Instruction_Program_Address
  OrderEvent_Order_OrderId
  OrderEvent_Dex_ProtocolName
  Block_Slot
  Instruction_InternalSeqNumber
  OrderEvent_Market_BaseCurrency_Wrapped
}

"""Block fields"""
type Solana_DEXOrder_Fields_Block {
  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Height value"""
  Height(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentSlot value"""
  ParentSlot(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): String

  """Slot value"""
  Slot(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime
}

"""Instruction fields"""
type Solana_DEXOrder_Fields_Instruction {
  """Accounts value"""
  Accounts(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXOrder_Fields_Instruction_Accounts_Select_Instruction_Accounts
  ): [Solana_DEXOrder_Fields_Instruction_Instruction_Accounts]

  """CallPath value"""
  CallPath(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXOrder_Fields_Instruction_CallPath_Select_Instruction_CallPath

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields
  ): [Int]

  """ExternalSeqNumber value"""
  ExternalSeqNumber(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """InternalSeqNumber value"""
  InternalSeqNumber(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Program fields"""
  Program: Solana_DEXOrder_Fields_Instruction_Program
}

"""Selector for Instruction_Accounts"""
input Solana_DEXOrder_Fields_Instruction_Accounts_Select_FieldSelector {
  """Select value for IsWritable"""
  IsWritable: Boolean

  """Select value for Token"""
  Token: Solana_DEXOrder_Fields_Instruction_Accounts_Select_FieldSelector_FieldSelector

  """Select value for Address"""
  Address: OLAP_String
}

"""Selector for Instruction_Accounts_Token"""
input Solana_DEXOrder_Fields_Instruction_Accounts_Select_FieldSelector_FieldSelector {
  """Select value for Owner"""
  Owner: OLAP_String

  """Select value for ProgramId"""
  ProgramId: OLAP_String

  """Select value for Mint"""
  Mint: OLAP_String
}

"""Array of Instruction_Accounts includes or excludes provided value"""
input Solana_DEXOrder_Fields_Instruction_Accounts_Select_Instruction_Accounts {
  """Does not start with this element"""
  notStartsWith: [Solana_DEXOrder_Fields_Instruction_Accounts_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Solana_DEXOrder_Fields_Instruction_Accounts_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Solana_DEXOrder_Fields_Instruction_Accounts_Select_FieldSelector]

  """Excludes this element"""
  excludes: [Solana_DEXOrder_Fields_Instruction_Accounts_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [Solana_DEXOrder_Fields_Instruction_Accounts_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [Solana_DEXOrder_Fields_Instruction_Accounts_Select_FieldSelector]
}

"""Array of Instruction_CallPath includes or excludes provided value"""
input Solana_DEXOrder_Fields_Instruction_CallPath_Select_Instruction_CallPath {
  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer
}

"""Instruction_Accounts fields"""
type Solana_DEXOrder_Fields_Instruction_Instruction_Accounts {
  Address: String
  IsWritable: Boolean
  Token: Solana_DEXOrder_Fields_Instruction_Instruction_Accounts_Token
}

"""Instruction_Accounts_Token fields"""
type Solana_DEXOrder_Fields_Instruction_Instruction_Accounts_Token {
  Mint: String
  Owner: String
  ProgramId: String
}

"""Program fields"""
type Solana_DEXOrder_Fields_Instruction_Program {
  """AccountNames value"""
  AccountNames(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXOrder_Fields_Instruction_Program_AccountNames_Select_Instruction_Program_AccountNames

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields
  ): [String]

  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Arguments value"""
  Arguments(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXOrder_Fields_Instruction_Program_Arguments_Select_Instruction_Program_Arguments

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields
  ): [Solana_DEXOrder_Fields_Instruction_Program_Instruction_Program_Arguments]

  """Json value"""
  Json(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields
  ): String

  """Method value"""
  Method(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields
  ): String

  """Name value"""
  Name(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields
  ): String

  """Parsed value"""
  Parsed(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields
  ): Boolean
}

"""
Array of Instruction_Program_AccountNames includes or excludes provided value
"""
input Solana_DEXOrder_Fields_Instruction_Program_AccountNames_Select_Instruction_Program_AccountNames {
  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]
}

"""Selector for Instruction_Program_Arguments"""
input Solana_DEXOrder_Fields_Instruction_Program_Arguments_Select_FieldSelector {
  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Value"""
  Value: Solana_ValueUnionSelector
}

"""
Array of Instruction_Program_Arguments includes or excludes provided value
"""
input Solana_DEXOrder_Fields_Instruction_Program_Arguments_Select_Instruction_Program_Arguments {
  """Includes this element"""
  includes: [Solana_DEXOrder_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Excludes this element"""
  excludes: [Solana_DEXOrder_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [Solana_DEXOrder_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [Solana_DEXOrder_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Solana_DEXOrder_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Solana_DEXOrder_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer
}

"""Instruction_Program_Arguments fields"""
type Solana_DEXOrder_Fields_Instruction_Program_Instruction_Program_Arguments {
  Name: String
  Type: String
  Value: Solana_ABI_Value_Union
}

"""OrderEvent fields"""
type Solana_DEXOrder_Fields_OrderEvent {
  """Dex fields"""
  Dex: Solana_DEXOrder_Fields_OrderEvent_Dex

  """Index value"""
  Index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields
  ): Int

  """Market fields"""
  Market: Solana_DEXOrder_Fields_OrderEvent_Market

  """Order fields"""
  Order: Solana_DEXOrder_Fields_OrderEvent_Order

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXOrder_Fields_OrderEvent_Type_Select_OrderEvent_Type
  ): Solana_DEXOrder_Fields_OrderEvent_OrderEvent_Type_Output
}

"""Dex fields"""
type Solana_DEXOrder_Fields_OrderEvent_Dex {
  """ProgramAddress value"""
  ProgramAddress(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields
  ): String

  """ProtocolFamily value"""
  ProtocolFamily(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields
  ): String
}

"""Market fields"""
type Solana_DEXOrder_Fields_OrderEvent_Market {
  """BaseCurrency fields"""
  BaseCurrency: Solana_DEXOrder_Fields_OrderEvent_Market_BaseCurrency

  """MarketAddress value"""
  MarketAddress(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): String

  """QuoteCurrency fields"""
  QuoteCurrency: Solana_DEXOrder_Fields_OrderEvent_Market_QuoteCurrency
}

"""BaseCurrency fields"""
type Solana_DEXOrder_Fields_OrderEvent_Market_BaseCurrency {
  """CollectionAddress value"""
  CollectionAddress(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields
  ): String

  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """EditionNonce value"""
  EditionNonce(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Fungible value"""
  Fungible(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields
  ): Boolean

  """IsMutable value"""
  IsMutable(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields
  ): Boolean

  """Key value"""
  Key(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): String

  """MetadataAddress value"""
  MetadataAddress(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): String

  """MintAddress value"""
  MintAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Native value"""
  Native(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): Boolean

  """PrimarySaleHappened value"""
  PrimarySaleHappened(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """ProgramAddress value"""
  ProgramAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SellerFeeBasisPoints value"""
  SellerFeeBasisPoints(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields
  ): Int

  """Symbol value"""
  Symbol(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields
  ): String

  """TokenCreator fields"""
  TokenCreator: Solana_DEXOrder_Fields_OrderEvent_Market_BaseCurrency_TokenCreator

  """TokenStandard value"""
  TokenStandard(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields
  ): String

  """UpdateAuthority value"""
  UpdateAuthority(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): String

  """Uri value"""
  Uri(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): String

  """VerifiedCollection value"""
  VerifiedCollection(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Wrapped value"""
  Wrapped(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields
  ): Boolean
}

"""TokenCreator fields"""
type Solana_DEXOrder_Fields_OrderEvent_Market_BaseCurrency_TokenCreator {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXOrder_Fields_OrderEvent_Market_BaseCurrency_TokenCreator_Address_Select_OrderEvent_Market_BaseCurrency_TokenCreator_Address
  ): [String]

  """Share value"""
  Share(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXOrder_Fields_OrderEvent_Market_BaseCurrency_TokenCreator_Share_Select_OrderEvent_Market_BaseCurrency_TokenCreator_Share

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): [Int]

  """Verified value"""
  Verified(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXOrder_Fields_OrderEvent_Market_BaseCurrency_TokenCreator_Verified_Select_OrderEvent_Market_BaseCurrency_TokenCreator_Verified

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): [Boolean]
}

"""
Array of OrderEvent_Market_BaseCurrency_TokenCreator_Address includes or excludes provided value
"""
input Solana_DEXOrder_Fields_OrderEvent_Market_BaseCurrency_TokenCreator_Address_Select_OrderEvent_Market_BaseCurrency_TokenCreator_Address {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]
}

"""
Array of OrderEvent_Market_BaseCurrency_TokenCreator_Share includes or excludes provided value
"""
input Solana_DEXOrder_Fields_OrderEvent_Market_BaseCurrency_TokenCreator_Share_Select_OrderEvent_Market_BaseCurrency_TokenCreator_Share {
  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]
}

"""
Array of OrderEvent_Market_BaseCurrency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_DEXOrder_Fields_OrderEvent_Market_BaseCurrency_TokenCreator_Verified_Select_OrderEvent_Market_BaseCurrency_TokenCreator_Verified {
  """Ends with this element"""
  endsWith: [Boolean]

  """Does not start with this element"""
  notStartsWith: [Boolean]

  """Does not End with this element"""
  notEndsWith: [Boolean]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]

  """Starts with this element"""
  startsWith: [Boolean]
}

"""QuoteCurrency fields"""
type Solana_DEXOrder_Fields_OrderEvent_Market_QuoteCurrency {
  """CollectionAddress value"""
  CollectionAddress(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields
  ): String

  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """EditionNonce value"""
  EditionNonce(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """IsMutable value"""
  IsMutable(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields
  ): Boolean

  """Key value"""
  Key(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """MetadataAddress value"""
  MetadataAddress(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields
  ): String

  """MintAddress value"""
  MintAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Native value"""
  Native(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """PrimarySaleHappened value"""
  PrimarySaleHappened(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields
  ): Boolean

  """ProgramAddress value"""
  ProgramAddress(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): String

  """SellerFeeBasisPoints value"""
  SellerFeeBasisPoints(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """TokenCreator fields"""
  TokenCreator: Solana_DEXOrder_Fields_OrderEvent_Market_QuoteCurrency_TokenCreator

  """TokenStandard value"""
  TokenStandard(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """UpdateAuthority value"""
  UpdateAuthority(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Uri value"""
  Uri(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """VerifiedCollection value"""
  VerifiedCollection(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Wrapped value"""
  Wrapped(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""TokenCreator fields"""
type Solana_DEXOrder_Fields_OrderEvent_Market_QuoteCurrency_TokenCreator {
  """Address value"""
  Address(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXOrder_Fields_OrderEvent_Market_QuoteCurrency_TokenCreator_Address_Select_OrderEvent_Market_QuoteCurrency_TokenCreator_Address

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): [String]

  """Share value"""
  Share(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXOrder_Fields_OrderEvent_Market_QuoteCurrency_TokenCreator_Share_Select_OrderEvent_Market_QuoteCurrency_TokenCreator_Share
  ): [Int]

  """Verified value"""
  Verified(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXOrder_Fields_OrderEvent_Market_QuoteCurrency_TokenCreator_Verified_Select_OrderEvent_Market_QuoteCurrency_TokenCreator_Verified
  ): [Boolean]
}

"""
Array of OrderEvent_Market_QuoteCurrency_TokenCreator_Address includes or excludes provided value
"""
input Solana_DEXOrder_Fields_OrderEvent_Market_QuoteCurrency_TokenCreator_Address_Select_OrderEvent_Market_QuoteCurrency_TokenCreator_Address {
  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]
}

"""
Array of OrderEvent_Market_QuoteCurrency_TokenCreator_Share includes or excludes provided value
"""
input Solana_DEXOrder_Fields_OrderEvent_Market_QuoteCurrency_TokenCreator_Share_Select_OrderEvent_Market_QuoteCurrency_TokenCreator_Share {
  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]
}

"""
Array of OrderEvent_Market_QuoteCurrency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_DEXOrder_Fields_OrderEvent_Market_QuoteCurrency_TokenCreator_Verified_Select_OrderEvent_Market_QuoteCurrency_TokenCreator_Verified {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]

  """Starts with this element"""
  startsWith: [Boolean]

  """Ends with this element"""
  endsWith: [Boolean]

  """Does not start with this element"""
  notStartsWith: [Boolean]

  """Does not End with this element"""
  notEndsWith: [Boolean]
}

"""Order fields"""
type Solana_DEXOrder_Fields_OrderEvent_Order {
  """Account value"""
  Account(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """BuySide value"""
  BuySide(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields
  ): Boolean

  """LimitAmount value"""
  LimitAmount(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """LimitAmountInUSD value"""
  LimitAmountInUSD(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields
  ): String

  """LimitPrice value"""
  LimitPrice(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """LimitPriceInUSD value"""
  LimitPriceInUSD(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): String

  """Mint value"""
  Mint(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter
  ): String

  """OrderId value"""
  OrderId(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Owner value"""
  Owner(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Payer value"""
  Payer(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Enumeration for OrderEvent_Type"""
enum Solana_DEXOrder_Fields_OrderEvent_OrderEvent_Type_Output {
  """OrderEvent_Type Open"""
  Open

  """OrderEvent_Type Update"""
  Update

  """OrderEvent_Type Cancel"""
  Cancel
}

"""Select filters for OrderEvent_Type"""
input Solana_DEXOrder_Fields_OrderEvent_Type_Select_OrderEvent_Type {
  """Exact match"""
  is: Solana_DEXOrder_Fields_OrderEvent_Type_Select_OrderEvent_Type_Input

  """Not this"""
  not: Solana_DEXOrder_Fields_OrderEvent_Type_Select_OrderEvent_Type_Input

  """One of the values"""
  in: [Solana_DEXOrder_Fields_OrderEvent_Type_Select_OrderEvent_Type_Input!]

  """Not one of the values"""
  notIn: [Solana_DEXOrder_Fields_OrderEvent_Type_Select_OrderEvent_Type_Input!]
}

"""Enumeration for OrderEvent_Type"""
enum Solana_DEXOrder_Fields_OrderEvent_Type_Select_OrderEvent_Type_Input {
  """OrderEvent_Type Open"""
  Open

  """OrderEvent_Type Update"""
  Update

  """OrderEvent_Type Cancel"""
  Cancel
}

"""Transaction fields"""
type Solana_DEXOrder_Fields_Transaction {
  """Fee value"""
  Fee(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeePayer value"""
  FeePayer(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Result fields"""
  Result: Solana_DEXOrder_Fields_Transaction_Result

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Signer value"""
  Signer(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Result fields"""
type Solana_DEXOrder_Fields_Transaction_Result {
  """ErrorMessage value"""
  ErrorMessage(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXOrder_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXOrder_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXOrder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

input Solana_DEXOrder_Filter {
  """Select by Block"""
  Block: Solana_DEXOrder_Input_Block_InputType

  """Select by Transaction"""
  Transaction: Solana_DEXOrder_Input_Transaction_InputType

  """Select by Instruction"""
  Instruction: Solana_DEXOrder_Input_Instruction_InputType

  """Select by OrderEvent"""
  OrderEvent: Solana_DEXOrder_Input_OrderEvent_InputType

  """String value"""
  ChainId: OLAP_String

  """Any combination ( as OR ) of supplied conditions"""
  any: [Solana_DEXOrder_FilterAny!]
}

input Solana_DEXOrder_FilterAny {
  """Select by Instruction"""
  Instruction: Solana_DEXOrder_Input_Instruction_InputType

  """Select by OrderEvent"""
  OrderEvent: Solana_DEXOrder_Input_OrderEvent_InputType

  """String value"""
  ChainId: OLAP_String

  """Select by Block"""
  Block: Solana_DEXOrder_Input_Block_InputType

  """Select by Transaction"""
  Transaction: Solana_DEXOrder_Input_Transaction_InputType
}

"""Select by Block"""
input Solana_DEXOrder_Input_Block_InputType {
  Height: OLAP_BigInteger
  Date: OLAP_Date
  ParentSlot: OLAP_BigInteger
  ParentHash: OLAP_String
  Hash: OLAP_String
  Slot: OLAP_BigInteger
  Time: OLAP_DateTime
}

"""Selector for Instruction_Accounts"""
input Solana_DEXOrder_Input_Instruction_Accounts_Input_FieldSelector {
  """Select value for Address"""
  Address: OLAP_String

  """Select value for IsWritable"""
  IsWritable: Boolean

  """Select value for Token"""
  Token: Solana_DEXOrder_Input_Instruction_Accounts_Input_FieldSelector_FieldSelector
}

"""Selector for Instruction_Accounts_Token"""
input Solana_DEXOrder_Input_Instruction_Accounts_Input_FieldSelector_FieldSelector {
  """Select value for Owner"""
  Owner: OLAP_String

  """Select value for ProgramId"""
  ProgramId: OLAP_String

  """Select value for Mint"""
  Mint: OLAP_String
}

"""Array of Instruction_Accounts includes or excludes provided value"""
input Solana_DEXOrder_Input_Instruction_Accounts_Input_Instruction_Accounts {
  """Starts with this element"""
  startsWith: [Solana_DEXOrder_Input_Instruction_Accounts_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [Solana_DEXOrder_Input_Instruction_Accounts_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Solana_DEXOrder_Input_Instruction_Accounts_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Solana_DEXOrder_Input_Instruction_Accounts_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Solana_DEXOrder_Input_Instruction_Accounts_Input_FieldSelector]

  """Excludes this element"""
  excludes: [Solana_DEXOrder_Input_Instruction_Accounts_Input_FieldSelector]
}

"""Array of Instruction_CallPath includes or excludes provided value"""
input Solana_DEXOrder_Input_Instruction_CallPath_Input_Instruction_CallPath {
  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]
}

"""Select by Instruction"""
input Solana_DEXOrder_Input_Instruction_InputType {
  ExternalSeqNumber: OLAP_Integer
  CallPath: Solana_DEXOrder_Input_Instruction_CallPath_Input_Instruction_CallPath
  InternalSeqNumber: OLAP_Integer
  Program: Solana_DEXOrder_Input_Instruction_Program_InputType
  Accounts: Solana_DEXOrder_Input_Instruction_Accounts_Input_Instruction_Accounts
  Index: OLAP_Integer
}

"""
Array of Instruction_Program_AccountNames includes or excludes provided value
"""
input Solana_DEXOrder_Input_Instruction_Program_AccountNames_Input_Instruction_Program_AccountNames {
  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]
}

"""Selector for Instruction_Program_Arguments"""
input Solana_DEXOrder_Input_Instruction_Program_Arguments_Input_FieldSelector {
  """Select value for Value"""
  Value: Solana_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String
}

"""
Array of Instruction_Program_Arguments includes or excludes provided value
"""
input Solana_DEXOrder_Input_Instruction_Program_Arguments_Input_Instruction_Program_Arguments {
  """Does not End with this element"""
  notEndsWith: [Solana_DEXOrder_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Solana_DEXOrder_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Excludes this element"""
  excludes: [Solana_DEXOrder_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [Solana_DEXOrder_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [Solana_DEXOrder_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Solana_DEXOrder_Input_Instruction_Program_Arguments_Input_FieldSelector]
}

"""Select by Program"""
input Solana_DEXOrder_Input_Instruction_Program_InputType {
  Arguments: Solana_DEXOrder_Input_Instruction_Program_Arguments_Input_Instruction_Program_Arguments
  Address: OLAP_String
  Parsed: Boolean
  Json: OLAP_String
  Name: OLAP_String
  Method: OLAP_String
  AccountNames: Solana_DEXOrder_Input_Instruction_Program_AccountNames_Input_Instruction_Program_AccountNames
}

"""Select by Dex"""
input Solana_DEXOrder_Input_OrderEvent_Dex_InputType {
  ProtocolFamily: OLAP_String
  ProgramAddress: OLAP_String
  ProtocolName: OLAP_String
}

"""Select by OrderEvent"""
input Solana_DEXOrder_Input_OrderEvent_InputType {
  Dex: Solana_DEXOrder_Input_OrderEvent_Dex_InputType
  Market: Solana_DEXOrder_Input_OrderEvent_Market_InputType
  Order: Solana_DEXOrder_Input_OrderEvent_Order_InputType
  Type: Solana_DEXOrder_Input_OrderEvent_Type_Input_OrderEvent_Type
  Index: OLAP_Integer
}

"""Select by BaseCurrency"""
input Solana_DEXOrder_Input_OrderEvent_Market_BaseCurrency_InputType {
  MintAddress: OLAP_String
  Uri: OLAP_String
  VerifiedCollection: Boolean
  CollectionAddress: OLAP_String
  MetadataAddress: OLAP_String
  Name: OLAP_String
  Fungible: Boolean
  IsMutable: Boolean
  Wrapped: Boolean
  SellerFeeBasisPoints: OLAP_Integer
  Symbol: OLAP_String
  ProgramAddress: OLAP_String
  TokenStandard: OLAP_String
  Native: Boolean
  PrimarySaleHappened: Boolean
  EditionNonce: OLAP_Integer
  TokenCreator: Solana_DEXOrder_Input_OrderEvent_Market_BaseCurrency_TokenCreator_InputType
  UpdateAuthority: OLAP_String
  Key: OLAP_String
  Decimals: OLAP_Integer
}

"""
Array of OrderEvent_Market_BaseCurrency_TokenCreator_Address includes or excludes provided value
"""
input Solana_DEXOrder_Input_OrderEvent_Market_BaseCurrency_TokenCreator_Address_Input_OrderEvent_Market_BaseCurrency_TokenCreator_Address {
  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]
}

"""Select by TokenCreator"""
input Solana_DEXOrder_Input_OrderEvent_Market_BaseCurrency_TokenCreator_InputType {
  Address: Solana_DEXOrder_Input_OrderEvent_Market_BaseCurrency_TokenCreator_Address_Input_OrderEvent_Market_BaseCurrency_TokenCreator_Address
  Verified: Solana_DEXOrder_Input_OrderEvent_Market_BaseCurrency_TokenCreator_Verified_Input_OrderEvent_Market_BaseCurrency_TokenCreator_Verified
  Share: Solana_DEXOrder_Input_OrderEvent_Market_BaseCurrency_TokenCreator_Share_Input_OrderEvent_Market_BaseCurrency_TokenCreator_Share
}

"""
Array of OrderEvent_Market_BaseCurrency_TokenCreator_Share includes or excludes provided value
"""
input Solana_DEXOrder_Input_OrderEvent_Market_BaseCurrency_TokenCreator_Share_Input_OrderEvent_Market_BaseCurrency_TokenCreator_Share {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]
}

"""
Array of OrderEvent_Market_BaseCurrency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_DEXOrder_Input_OrderEvent_Market_BaseCurrency_TokenCreator_Verified_Input_OrderEvent_Market_BaseCurrency_TokenCreator_Verified {
  """Does not start with this element"""
  notStartsWith: [Boolean]

  """Does not End with this element"""
  notEndsWith: [Boolean]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]

  """Starts with this element"""
  startsWith: [Boolean]

  """Ends with this element"""
  endsWith: [Boolean]
}

"""Select by Market"""
input Solana_DEXOrder_Input_OrderEvent_Market_InputType {
  BaseCurrency: Solana_DEXOrder_Input_OrderEvent_Market_BaseCurrency_InputType
  QuoteCurrency: Solana_DEXOrder_Input_OrderEvent_Market_QuoteCurrency_InputType
  MarketAddress: OLAP_String
}

"""Select by QuoteCurrency"""
input Solana_DEXOrder_Input_OrderEvent_Market_QuoteCurrency_InputType {
  Uri: OLAP_String
  Name: OLAP_String
  MintAddress: OLAP_String
  TokenStandard: OLAP_String
  Key: OLAP_String
  Wrapped: Boolean
  SellerFeeBasisPoints: OLAP_Integer
  VerifiedCollection: Boolean
  EditionNonce: OLAP_Integer
  Fungible: Boolean
  ProgramAddress: OLAP_String
  MetadataAddress: OLAP_String
  UpdateAuthority: OLAP_String
  Decimals: OLAP_Integer
  Native: Boolean
  CollectionAddress: OLAP_String
  PrimarySaleHappened: Boolean
  IsMutable: Boolean
  Symbol: OLAP_String
  TokenCreator: Solana_DEXOrder_Input_OrderEvent_Market_QuoteCurrency_TokenCreator_InputType
}

"""
Array of OrderEvent_Market_QuoteCurrency_TokenCreator_Address includes or excludes provided value
"""
input Solana_DEXOrder_Input_OrderEvent_Market_QuoteCurrency_TokenCreator_Address_Input_OrderEvent_Market_QuoteCurrency_TokenCreator_Address {
  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]
}

"""Select by TokenCreator"""
input Solana_DEXOrder_Input_OrderEvent_Market_QuoteCurrency_TokenCreator_InputType {
  Address: Solana_DEXOrder_Input_OrderEvent_Market_QuoteCurrency_TokenCreator_Address_Input_OrderEvent_Market_QuoteCurrency_TokenCreator_Address
  Share: Solana_DEXOrder_Input_OrderEvent_Market_QuoteCurrency_TokenCreator_Share_Input_OrderEvent_Market_QuoteCurrency_TokenCreator_Share
  Verified: Solana_DEXOrder_Input_OrderEvent_Market_QuoteCurrency_TokenCreator_Verified_Input_OrderEvent_Market_QuoteCurrency_TokenCreator_Verified
}

"""
Array of OrderEvent_Market_QuoteCurrency_TokenCreator_Share includes or excludes provided value
"""
input Solana_DEXOrder_Input_OrderEvent_Market_QuoteCurrency_TokenCreator_Share_Input_OrderEvent_Market_QuoteCurrency_TokenCreator_Share {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]
}

"""
Array of OrderEvent_Market_QuoteCurrency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_DEXOrder_Input_OrderEvent_Market_QuoteCurrency_TokenCreator_Verified_Input_OrderEvent_Market_QuoteCurrency_TokenCreator_Verified {
  """Does not End with this element"""
  notEndsWith: [Boolean]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]

  """Starts with this element"""
  startsWith: [Boolean]

  """Ends with this element"""
  endsWith: [Boolean]

  """Does not start with this element"""
  notStartsWith: [Boolean]
}

"""Select by Order"""
input Solana_DEXOrder_Input_OrderEvent_Order_InputType {
  Owner: OLAP_String
  LimitPriceInUSD: EVM_Amount_With_Decimals
  Payer: OLAP_String
  LimitPrice: EVM_Amount_With_Decimals
  LimitAmountInUSD: EVM_Amount_With_Decimals
  LimitAmount: EVM_Amount_With_Decimals
  BuySide: Boolean
  OrderId: OLAP_String
  Account: OLAP_String
  Mint: OLAP_String
}

"""Select filters for OrderEvent_Type"""
input Solana_DEXOrder_Input_OrderEvent_Type_Input_OrderEvent_Type {
  """Exact match"""
  is: Solana_DEXOrder_Input_OrderEvent_Type_Input_OrderEvent_Type_Input

  """Not this"""
  not: Solana_DEXOrder_Input_OrderEvent_Type_Input_OrderEvent_Type_Input

  """One of the values"""
  in: [Solana_DEXOrder_Input_OrderEvent_Type_Input_OrderEvent_Type_Input!]

  """Not one of the values"""
  notIn: [Solana_DEXOrder_Input_OrderEvent_Type_Input_OrderEvent_Type_Input!]
}

"""Enumeration for OrderEvent_Type"""
enum Solana_DEXOrder_Input_OrderEvent_Type_Input_OrderEvent_Type_Input {
  """OrderEvent_Type Open"""
  Open

  """OrderEvent_Type Update"""
  Update

  """OrderEvent_Type Cancel"""
  Cancel
}

"""Select by Transaction"""
input Solana_DEXOrder_Input_Transaction_InputType {
  Index: OLAP_Integer
  Result: Solana_DEXOrder_Input_Transaction_Result_InputType
  Signer: OLAP_String
  FeePayer: OLAP_String
  Fee: EVM_Amount_With_Decimals
  FeeInUSD: EVM_Amount_With_Decimals
  Signature: OLAP_String
}

"""Select by Result"""
input Solana_DEXOrder_Input_Transaction_Result_InputType {
  Success: Boolean
  ErrorMessage: OLAP_String
}

"""Limit definition"""
input Solana_DEXOrder_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input Solana_DEXOrder_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [Solana_DEXOrder_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum Solana_DEXOrder_NumFields {
  Transaction_Fee
  Transaction_Index
  Instruction_Index
  OrderEvent_Index
  OrderEvent_Market_BaseCurrency_SellerFeeBasisPoints
  OrderEvent_Order_LimitAmountInUSD
  OrderEvent_Market_QuoteCurrency_EditionNonce
  Transaction_FeeInUSD
  OrderEvent_Order_LimitPriceInUSD
  Block_Height
  Instruction_InternalSeqNumber
  OrderEvent_Order_LimitAmount
  OrderEvent_Market_BaseCurrency_Decimals
  OrderEvent_Market_QuoteCurrency_SellerFeeBasisPoints
  OrderEvent_Market_QuoteCurrency_Decimals
  Block_ParentSlot
  Block_Slot
  OrderEvent_Order_LimitPrice
  OrderEvent_Market_BaseCurrency_EditionNonce
  Instruction_ExternalSeqNumber
}

"""Order by"""
input Solana_DEXOrder_Ordering {
  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String

  """Select a field to sort ascending"""
  ascending: Solana_DEXOrder_EnumFields

  """Select a field to sort descending"""
  descending: Solana_DEXOrder_EnumFields
}

"""Listed names of string fields in a cube"""
enum Solana_DEXOrder_StringFields {
  OrderEvent_Market_QuoteCurrency_UpdateAuthority
  OrderEvent_Market_QuoteCurrency_Symbol
  OrderEvent_Order_OrderId
  OrderEvent_Market_BaseCurrency_Key
  Instruction_Program_Address
  OrderEvent_Market_BaseCurrency_Uri
  OrderEvent_Dex_ProtocolFamily
  OrderEvent_Market_BaseCurrency_CollectionAddress
  OrderEvent_Dex_ProtocolName
  OrderEvent_Market_QuoteCurrency_MetadataAddress
  Block_Date
  OrderEvent_Market_BaseCurrency_UpdateAuthority
  Transaction_Signer
  Instruction_Program_Json
  Transaction_Fee
  Block_Slot
  Block_ParentHash
  Block_Height
  OrderEvent_Market_BaseCurrency_Symbol
  Transaction_FeeInUSD
  OrderEvent_Order_LimitAmount
  OrderEvent_Order_LimitAmountInUSD
  Instruction_Program_Name
  OrderEvent_Market_BaseCurrency_Name
  OrderEvent_Order_Payer
  OrderEvent_Order_LimitPrice
  OrderEvent_Market_QuoteCurrency_Name
  OrderEvent_Market_BaseCurrency_TokenStandard
  ChainId
  OrderEvent_Market_QuoteCurrency_Uri
  OrderEvent_Market_MarketAddress
  OrderEvent_Order_Account
  OrderEvent_Dex_ProgramAddress
  OrderEvent_Order_Owner
  OrderEvent_Order_LimitPriceInUSD
  OrderEvent_Market_BaseCurrency_MetadataAddress
  OrderEvent_Market_QuoteCurrency_MintAddress
  OrderEvent_Market_QuoteCurrency_Key
  OrderEvent_Market_QuoteCurrency_TokenStandard
  Transaction_Signature
  OrderEvent_Market_QuoteCurrency_CollectionAddress
  OrderEvent_Market_BaseCurrency_MintAddress
  OrderEvent_Market_QuoteCurrency_ProgramAddress
  Transaction_FeePayer
  OrderEvent_Market_BaseCurrency_ProgramAddress
  Instruction_Program_Method
  OrderEvent_Order_Mint
  Block_Hash
  Block_ParentSlot
  Transaction_Result_ErrorMessage
}

"""Listed names of comparable fields in a cube"""
enum Solana_DEXTrade_CompareFields {
  Trade_Buy_Order_BuySide
  Transaction_Result_Success
  Instruction_Index
  Instruction_InternalSeqNumber
  Trade_Sell_Currency_Native
  Trade_Sell_Currency_Decimals
  Trade_Buy_Currency_Fungible
  Block_ParentSlot
  Trade_Buy_Order_LimitPrice
  Trade_Sell_Currency_SellerFeeBasisPoints
  Trade_Sell_Order_BuySide
  Trade_PriceAsymmetry
  Trade_Sell_Amount
  Trade_Buy_Currency_Wrapped
  Transaction_Fee
  Block_Height
  Trade_Buy_Amount
  Trade_Sell_Order_LimitPrice
  Block_Time
  Trade_Buy_AmountInUSD
  Trade_Sell_Price
  Trade_Sell_Currency_Fungible
  Trade_Index
  Trade_Buy_PriceInUSD
  Block_Date
  Trade_Sell_Currency_PrimarySaleHappened
  Trade_Buy_Currency_VerifiedCollection
  Transaction_Index
  Trade_Sell_Currency_Wrapped
  Transaction_FeeInUSD
  Trade_Buy_Currency_PrimarySaleHappened
  Trade_Sell_Order_LimitAmount
  Trade_Sell_Currency_VerifiedCollection
  Trade_Sell_AmountInUSD
  Trade_Buy_Currency_IsMutable
  Trade_Buy_Currency_Native
  Trade_Sell_PriceInUSD
  Trade_Buy_Currency_EditionNonce
  Trade_Buy_Currency_Decimals
  Block_Slot
  Instruction_Program_Parsed
  Trade_Sell_Currency_EditionNonce
  Trade_Buy_Price
  Trade_Sell_Currency_IsMutable
  Instruction_ExternalSeqNumber
  Trade_Buy_Order_LimitAmount
  Trade_Buy_Currency_SellerFeeBasisPoints
}

"""DEX Trades in Solana Blockchain"""
type Solana_DEXTrade_Cube {
  """Block fields"""
  Block: Solana_DEXTrade_Fields_Block

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Instruction fields"""
  Instruction: Solana_DEXTrade_Fields_Instruction

  """Trade fields"""
  Trade: Solana_DEXTrade_Fields_Trade

  """Transaction fields"""
  Transaction: Solana_DEXTrade_Fields_Transaction

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """Side2 argument"""
    side2: Solana_DEXTrade_StringFields!

    """Intersect with array"""
    intersectWith: [String!]

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: Solana_DEXTrade_StringFields!
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: Solana_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Second argument for Contingency coefficient between two arguments"""
    with: Solana_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """First argument for Contingency coefficient between two arguments"""
    of: Solana_DEXTrade_NumFields
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Solana_DEXTrade_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Solana_DEXTrade_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [Solana_DEXTrade_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: Solana_DEXTrade_NumFields

    """Second argument for Covariance between two arguments"""
    with: Solana_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Solana_DEXTrade_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Solana_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Solana_DEXTrade_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Solana_DEXTrade_NumFields
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """Argument for Dispersion for a set of values"""
    of: Solana_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: Solana_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: Solana_DEXTrade_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: Solana_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: Solana_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: Solana_DEXTrade_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Argument for quantile"""
    of: Solana_DEXTrade_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: Solana_DEXTrade_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: Solana_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: Solana_DEXTrade_NumFields!
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: Solana_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Argument for sum"""
    of: Solana_DEXTrade_NumFields!
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: Solana_DEXTrade_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Solana_DEXTrade_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Solana_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Uniq values of the field"""
    of: [Solana_DEXTrade_EnumFields!]!
  ): String
}

"""Listed names of fields in a cube"""
enum Solana_DEXTrade_EnumFields {
  Trade_Sell_Currency_PrimarySaleHappened
  Trade_Sell_Currency_VerifiedCollection
  Trade_Buy_Currency_ProgramAddress
  Trade_Buy_Order_Owner
  Transaction_Fee
  Block_ParentHash
  Trade_Sell_Currency_Symbol
  Trade_Sell_Currency_MintAddress
  Trade_Sell_Currency_TokenCreator_Address
  Trade_Buy_Order_Account
  Trade_Buy_Currency_Symbol
  Trade_Sell_Currency_Key
  Trade_Sell_AmountInUSD
  Instruction_Program_Parsed
  Trade_Sell_Currency_MetadataAddress
  Trade_Sell_Amount
  Transaction_Result_ErrorMessage
  Trade_Buy_Currency_CollectionAddress
  Trade_Sell_Account_Token_Owner
  Trade_Market_MarketAddress
  Instruction_Accounts
  Block_Date
  Trade_Sell_Account_Address
  Trade_Buy_Currency_Native
  Trade_Index
  Trade_Sell_Order_BuySide
  Instruction_Program_Arguments
  Instruction_Program_Json
  Trade_Buy_Price
  Instruction_Program_Address
  Trade_Buy_Order_Payer
  Trade_Buy_Order_BuySide
  Trade_Sell_Currency_CollectionAddress
  Trade_Sell_Order_Payer
  Block_Hash
  Trade_Buy_Currency_TokenCreator_Share
  Trade_Buy_Currency_PrimarySaleHappened
  Trade_Sell_Currency_Wrapped
  Block_Time
  Trade_Dex_ProgramAddress
  Trade_Sell_Currency_SellerFeeBasisPoints
  Instruction_Index
  Trade_Buy_Currency_SellerFeeBasisPoints
  Trade_Sell_Order_LimitPrice
  Trade_Sell_Order_Account
  Trade_Sell_Currency_ProgramAddress
  Trade_Buy_Currency_EditionNonce
  Trade_Buy_Currency_TokenCreator_Address
  Trade_Buy_AmountInUSD
  Trade_Sell_Currency_Decimals
  Trade_Buy_PriceInUSD
  Trade_Sell_Currency_Name
  Trade_Buy_Currency_Uri
  Trade_Sell_Currency_TokenCreator_Verified
  Trade_Buy_Currency_MintAddress
  Trade_Sell_Order_OrderId
  Transaction_FeePayer
  Transaction_FeeInUSD
  Block_ParentSlot
  Block_Slot
  Trade_Dex_ProtocolName
  Instruction_CallPath
  Instruction_Program_Method
  ChainId
  Trade_Dex_ProtocolFamily
  Trade_Sell_Currency_TokenCreator_Share
  Trade_Sell_Currency_IsMutable
  Trade_Buy_Currency_IsMutable
  Trade_Sell_Currency_EditionNonce
  Transaction_Signer
  Trade_Sell_Currency_Fungible
  Trade_Buy_Currency_MetadataAddress
  Trade_Buy_Order_Mint
  Instruction_Program_AccountNames
  Trade_Sell_Order_Mint
  Transaction_Index
  Instruction_ExternalSeqNumber
  Trade_Buy_Order_OrderId
  Trade_Buy_Currency_Fungible
  Transaction_Signature
  Trade_Sell_Price
  Trade_Buy_Currency_Key
  Trade_Buy_Currency_TokenStandard
  Block_Height
  Instruction_Program_Name
  Trade_Buy_Currency_Decimals
  Trade_Buy_Currency_VerifiedCollection
  Trade_Buy_Order_LimitPrice
  Trade_Sell_Order_LimitAmount
  Trade_PriceAsymmetry
  Trade_Buy_Account_Address
  Trade_Buy_Currency_UpdateAuthority
  Trade_Buy_Currency_Name
  Trade_Buy_Amount
  Trade_Buy_Currency_TokenCreator_Verified
  Transaction_Result_Success
  Trade_Sell_Currency_UpdateAuthority
  Trade_Buy_Account_Token_Owner
  Trade_Buy_Currency_Wrapped
  Trade_Sell_PriceInUSD
  Trade_Sell_Currency_TokenStandard
  Trade_Buy_Order_LimitAmount
  Trade_Sell_Order_Owner
  Trade_Sell_Currency_Native
  Instruction_InternalSeqNumber
  Trade_Sell_Currency_Uri
}

"""Block fields"""
type Solana_DEXTrade_Fields_Block {
  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Hash value"""
  Hash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): String

  """Height value"""
  Height(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): String

  """ParentHash value"""
  ParentHash(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): String

  """ParentSlot value"""
  ParentSlot(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Slot value"""
  Slot(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Time value"""
  Time(
    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime
  ): DateTime
}

"""Instruction fields"""
type Solana_DEXTrade_Fields_Instruction {
  """Accounts value"""
  Accounts(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTrade_Fields_Instruction_Accounts_Select_Instruction_Accounts
  ): [Solana_DEXTrade_Fields_Instruction_Instruction_Accounts]

  """CallPath value"""
  CallPath(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTrade_Fields_Instruction_CallPath_Select_Instruction_CallPath

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): [Int]

  """ExternalSeqNumber value"""
  ExternalSeqNumber(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields
  ): Int

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """InternalSeqNumber value"""
  InternalSeqNumber(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): Int

  """Program fields"""
  Program: Solana_DEXTrade_Fields_Instruction_Program
}

"""Selector for Instruction_Accounts"""
input Solana_DEXTrade_Fields_Instruction_Accounts_Select_FieldSelector {
  """Select value for IsWritable"""
  IsWritable: Boolean

  """Select value for Token"""
  Token: Solana_DEXTrade_Fields_Instruction_Accounts_Select_FieldSelector_FieldSelector

  """Select value for Address"""
  Address: OLAP_String
}

"""Selector for Instruction_Accounts_Token"""
input Solana_DEXTrade_Fields_Instruction_Accounts_Select_FieldSelector_FieldSelector {
  """Select value for ProgramId"""
  ProgramId: OLAP_String

  """Select value for Mint"""
  Mint: OLAP_String

  """Select value for Owner"""
  Owner: OLAP_String
}

"""Array of Instruction_Accounts includes or excludes provided value"""
input Solana_DEXTrade_Fields_Instruction_Accounts_Select_Instruction_Accounts {
  """Ends with this element"""
  endsWith: [Solana_DEXTrade_Fields_Instruction_Accounts_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Solana_DEXTrade_Fields_Instruction_Accounts_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Solana_DEXTrade_Fields_Instruction_Accounts_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Solana_DEXTrade_Fields_Instruction_Accounts_Select_FieldSelector]

  """Excludes this element"""
  excludes: [Solana_DEXTrade_Fields_Instruction_Accounts_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [Solana_DEXTrade_Fields_Instruction_Accounts_Select_FieldSelector]
}

"""Array of Instruction_CallPath includes or excludes provided value"""
input Solana_DEXTrade_Fields_Instruction_CallPath_Select_Instruction_CallPath {
  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer
}

"""Instruction_Accounts fields"""
type Solana_DEXTrade_Fields_Instruction_Instruction_Accounts {
  Address: String
  IsWritable: Boolean
  Token: Solana_DEXTrade_Fields_Instruction_Instruction_Accounts_Token
}

"""Instruction_Accounts_Token fields"""
type Solana_DEXTrade_Fields_Instruction_Instruction_Accounts_Token {
  Mint: String
  Owner: String
  ProgramId: String
}

"""Program fields"""
type Solana_DEXTrade_Fields_Instruction_Program {
  """AccountNames value"""
  AccountNames(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTrade_Fields_Instruction_Program_AccountNames_Select_Instruction_Program_AccountNames
  ): [String]

  """Address value"""
  Address(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): String

  """Arguments value"""
  Arguments(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTrade_Fields_Instruction_Program_Arguments_Select_Instruction_Program_Arguments
  ): [Solana_DEXTrade_Fields_Instruction_Program_Instruction_Program_Arguments]

  """Json value"""
  Json(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): String

  """Method value"""
  Method(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): Boolean
}

"""
Array of Instruction_Program_AccountNames includes or excludes provided value
"""
input Solana_DEXTrade_Fields_Instruction_Program_AccountNames_Select_Instruction_Program_AccountNames {
  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]
}

"""Selector for Instruction_Program_Arguments"""
input Solana_DEXTrade_Fields_Instruction_Program_Arguments_Select_FieldSelector {
  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Value"""
  Value: EVM_ValueUnionSelector
}

"""
Array of Instruction_Program_Arguments includes or excludes provided value
"""
input Solana_DEXTrade_Fields_Instruction_Program_Arguments_Select_Instruction_Program_Arguments {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Solana_DEXTrade_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Excludes this element"""
  excludes: [Solana_DEXTrade_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [Solana_DEXTrade_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [Solana_DEXTrade_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Solana_DEXTrade_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Solana_DEXTrade_Fields_Instruction_Program_Arguments_Select_FieldSelector]
}

"""Instruction_Program_Arguments fields"""
type Solana_DEXTrade_Fields_Instruction_Program_Instruction_Program_Arguments {
  Name: String
  Type: String
  Value: EVM_ABI_Value_Union
}

"""Trade fields"""
type Solana_DEXTrade_Fields_Trade {
  """Buy fields"""
  Buy: Solana_DEXTrade_Fields_Trade_Buy

  """Dex fields"""
  Dex: Solana_DEXTrade_Fields_Trade_Dex

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Market fields"""
  Market: Solana_DEXTrade_Fields_Trade_Market

  """PriceAsymmetry value"""
  PriceAsymmetry(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): Float

  """Sell fields"""
  Sell: Solana_DEXTrade_Fields_Trade_Sell
}

"""Buy fields"""
type Solana_DEXTrade_Fields_Trade_Buy {
  """Account fields"""
  Account: Solana_DEXTrade_Fields_Trade_Buy_Account

  """Amount value"""
  Amount(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): String

  """Currency fields"""
  Currency: Solana_DEXTrade_Fields_Trade_Buy_Currency

  """Order fields"""
  Order: Solana_DEXTrade_Fields_Trade_Buy_Order

  """Price value"""
  Price(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """PriceInUSD value"""
  PriceInUSD(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float
}

"""Account fields"""
type Solana_DEXTrade_Fields_Trade_Buy_Account {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Token fields"""
  Token: Solana_DEXTrade_Fields_Trade_Buy_Account_Token
}

"""Token fields"""
type Solana_DEXTrade_Fields_Trade_Buy_Account_Token {
  """Owner value"""
  Owner(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): String
}

"""Currency fields"""
type Solana_DEXTrade_Fields_Trade_Buy_Currency {
  """CollectionAddress value"""
  CollectionAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """EditionNonce value"""
  EditionNonce(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): Int

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """IsMutable value"""
  IsMutable(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Key value"""
  Key(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields
  ): String

  """MetadataAddress value"""
  MetadataAddress(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): String

  """MintAddress value"""
  MintAddress(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Native value"""
  Native(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): Boolean

  """PrimarySaleHappened value"""
  PrimarySaleHappened(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): Boolean

  """ProgramAddress value"""
  ProgramAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SellerFeeBasisPoints value"""
  SellerFeeBasisPoints(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): Int

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """TokenCreator fields"""
  TokenCreator: Solana_DEXTrade_Fields_Trade_Buy_Currency_TokenCreator

  """TokenStandard value"""
  TokenStandard(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields
  ): String

  """UpdateAuthority value"""
  UpdateAuthority(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields
  ): String

  """Uri value"""
  Uri(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """VerifiedCollection value"""
  VerifiedCollection(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): Boolean

  """Wrapped value"""
  Wrapped(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): Boolean
}

"""TokenCreator fields"""
type Solana_DEXTrade_Fields_Trade_Buy_Currency_TokenCreator {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTrade_Fields_Trade_Buy_Currency_TokenCreator_Address_Select_Trade_Buy_Currency_TokenCreator_Address
  ): [String]

  """Share value"""
  Share(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTrade_Fields_Trade_Buy_Currency_TokenCreator_Share_Select_Trade_Buy_Currency_TokenCreator_Share

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields
  ): [Int]

  """Verified value"""
  Verified(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTrade_Fields_Trade_Buy_Currency_TokenCreator_Verified_Select_Trade_Buy_Currency_TokenCreator_Verified

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): [Boolean]
}

"""
Array of Trade_Buy_Currency_TokenCreator_Address includes or excludes provided value
"""
input Solana_DEXTrade_Fields_Trade_Buy_Currency_TokenCreator_Address_Select_Trade_Buy_Currency_TokenCreator_Address {
  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]
}

"""
Array of Trade_Buy_Currency_TokenCreator_Share includes or excludes provided value
"""
input Solana_DEXTrade_Fields_Trade_Buy_Currency_TokenCreator_Share_Select_Trade_Buy_Currency_TokenCreator_Share {
  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]
}

"""
Array of Trade_Buy_Currency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_DEXTrade_Fields_Trade_Buy_Currency_TokenCreator_Verified_Select_Trade_Buy_Currency_TokenCreator_Verified {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]

  """Starts with this element"""
  startsWith: [Boolean]

  """Ends with this element"""
  endsWith: [Boolean]

  """Does not start with this element"""
  notStartsWith: [Boolean]

  """Does not End with this element"""
  notEndsWith: [Boolean]
}

"""Order fields"""
type Solana_DEXTrade_Fields_Trade_Buy_Order {
  """Account value"""
  Account(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """BuySide value"""
  BuySide(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """LimitAmount value"""
  LimitAmount(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): String

  """LimitPrice value"""
  LimitPrice(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields
  ): String

  """Mint value"""
  Mint(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): String

  """OrderId value"""
  OrderId(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Owner value"""
  Owner(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Payer value"""
  Payer(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Dex fields"""
type Solana_DEXTrade_Fields_Trade_Dex {
  """ProgramAddress value"""
  ProgramAddress(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): String

  """ProtocolFamily value"""
  ProtocolFamily(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Market fields"""
type Solana_DEXTrade_Fields_Trade_Market {
  """MarketAddress value"""
  MarketAddress(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields
  ): String
}

"""Sell fields"""
type Solana_DEXTrade_Fields_Trade_Sell {
  """Account fields"""
  Account: Solana_DEXTrade_Fields_Trade_Sell_Account

  """Amount value"""
  Amount(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): String

  """Currency fields"""
  Currency: Solana_DEXTrade_Fields_Trade_Sell_Currency

  """Order fields"""
  Order: Solana_DEXTrade_Fields_Trade_Sell_Order

  """Price value"""
  Price(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """PriceInUSD value"""
  PriceInUSD(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float
}

"""Account fields"""
type Solana_DEXTrade_Fields_Trade_Sell_Account {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Token fields"""
  Token: Solana_DEXTrade_Fields_Trade_Sell_Account_Token
}

"""Token fields"""
type Solana_DEXTrade_Fields_Trade_Sell_Account_Token {
  """Owner value"""
  Owner(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Currency fields"""
type Solana_DEXTrade_Fields_Trade_Sell_Currency {
  """CollectionAddress value"""
  CollectionAddress(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields
  ): String

  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """EditionNonce value"""
  EditionNonce(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields
  ): Int

  """Fungible value"""
  Fungible(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): Boolean

  """IsMutable value"""
  IsMutable(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): Boolean

  """Key value"""
  Key(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """MetadataAddress value"""
  MetadataAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """MintAddress value"""
  MintAddress(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Native value"""
  Native(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """PrimarySaleHappened value"""
  PrimarySaleHappened(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): Boolean

  """ProgramAddress value"""
  ProgramAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SellerFeeBasisPoints value"""
  SellerFeeBasisPoints(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """TokenCreator fields"""
  TokenCreator: Solana_DEXTrade_Fields_Trade_Sell_Currency_TokenCreator

  """TokenStandard value"""
  TokenStandard(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """UpdateAuthority value"""
  UpdateAuthority(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields
  ): String

  """Uri value"""
  Uri(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """VerifiedCollection value"""
  VerifiedCollection(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields
  ): Boolean

  """Wrapped value"""
  Wrapped(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""TokenCreator fields"""
type Solana_DEXTrade_Fields_Trade_Sell_Currency_TokenCreator {
  """Address value"""
  Address(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTrade_Fields_Trade_Sell_Currency_TokenCreator_Address_Select_Trade_Sell_Currency_TokenCreator_Address

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): [String]

  """Share value"""
  Share(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTrade_Fields_Trade_Sell_Currency_TokenCreator_Share_Select_Trade_Sell_Currency_TokenCreator_Share
  ): [Int]

  """Verified value"""
  Verified(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTrade_Fields_Trade_Sell_Currency_TokenCreator_Verified_Select_Trade_Sell_Currency_TokenCreator_Verified

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): [Boolean]
}

"""
Array of Trade_Sell_Currency_TokenCreator_Address includes or excludes provided value
"""
input Solana_DEXTrade_Fields_Trade_Sell_Currency_TokenCreator_Address_Select_Trade_Sell_Currency_TokenCreator_Address {
  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]
}

"""
Array of Trade_Sell_Currency_TokenCreator_Share includes or excludes provided value
"""
input Solana_DEXTrade_Fields_Trade_Sell_Currency_TokenCreator_Share_Select_Trade_Sell_Currency_TokenCreator_Share {
  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]
}

"""
Array of Trade_Sell_Currency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_DEXTrade_Fields_Trade_Sell_Currency_TokenCreator_Verified_Select_Trade_Sell_Currency_TokenCreator_Verified {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]

  """Starts with this element"""
  startsWith: [Boolean]

  """Ends with this element"""
  endsWith: [Boolean]

  """Does not start with this element"""
  notStartsWith: [Boolean]

  """Does not End with this element"""
  notEndsWith: [Boolean]
}

"""Order fields"""
type Solana_DEXTrade_Fields_Trade_Sell_Order {
  """Account value"""
  Account(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """BuySide value"""
  BuySide(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): Boolean

  """LimitAmount value"""
  LimitAmount(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): String

  """LimitPrice value"""
  LimitPrice(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Mint value"""
  Mint(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields
  ): String

  """OrderId value"""
  OrderId(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields
  ): String

  """Owner value"""
  Owner(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Payer value"""
  Payer(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): String
}

"""Transaction fields"""
type Solana_DEXTrade_Fields_Transaction {
  """Fee value"""
  Fee(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeePayer value"""
  FeePayer(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Result fields"""
  Result: Solana_DEXTrade_Fields_Transaction_Result

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Signer value"""
  Signer(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields
  ): String
}

"""Result fields"""
type Solana_DEXTrade_Fields_Transaction_Result {
  """ErrorMessage value"""
  ErrorMessage(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

input Solana_DEXTrade_Filter {
  """Select by Transaction"""
  Transaction: Solana_DEXTrade_Input_Transaction_InputType

  """Select by Instruction"""
  Instruction: Solana_DEXTrade_Input_Instruction_InputType

  """Select by Block"""
  Block: Solana_DEXTrade_Input_Block_InputType

  """String value"""
  ChainId: OLAP_String

  """Any combination ( as OR ) of supplied conditions"""
  any: [Solana_DEXTrade_FilterAny!]

  """Select by Trade"""
  Trade: Solana_DEXTrade_Input_Trade_InputType
}

input Solana_DEXTrade_FilterAny {
  """String value"""
  ChainId: OLAP_String

  """Select by Trade"""
  Trade: Solana_DEXTrade_Input_Trade_InputType

  """Select by Transaction"""
  Transaction: Solana_DEXTrade_Input_Transaction_InputType

  """Select by Instruction"""
  Instruction: Solana_DEXTrade_Input_Instruction_InputType

  """Select by Block"""
  Block: Solana_DEXTrade_Input_Block_InputType
}

"""Select by Block"""
input Solana_DEXTrade_Input_Block_InputType {
  Slot: OLAP_BigInteger
  ParentSlot: OLAP_BigInteger
  Hash: OLAP_String
  ParentHash: OLAP_String
  Height: OLAP_BigInteger
  Time: OLAP_DateTime
  Date: OLAP_Date
}

"""Selector for Instruction_Accounts"""
input Solana_DEXTrade_Input_Instruction_Accounts_Input_FieldSelector {
  """Select value for Token"""
  Token: Solana_DEXTrade_Input_Instruction_Accounts_Input_FieldSelector_FieldSelector

  """Select value for Address"""
  Address: OLAP_String

  """Select value for IsWritable"""
  IsWritable: Boolean
}

"""Selector for Instruction_Accounts_Token"""
input Solana_DEXTrade_Input_Instruction_Accounts_Input_FieldSelector_FieldSelector {
  """Select value for Owner"""
  Owner: OLAP_String

  """Select value for ProgramId"""
  ProgramId: OLAP_String

  """Select value for Mint"""
  Mint: OLAP_String
}

"""Array of Instruction_Accounts includes or excludes provided value"""
input Solana_DEXTrade_Input_Instruction_Accounts_Input_Instruction_Accounts {
  """Includes this element"""
  includes: [Solana_DEXTrade_Input_Instruction_Accounts_Input_FieldSelector]

  """Excludes this element"""
  excludes: [Solana_DEXTrade_Input_Instruction_Accounts_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [Solana_DEXTrade_Input_Instruction_Accounts_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [Solana_DEXTrade_Input_Instruction_Accounts_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Solana_DEXTrade_Input_Instruction_Accounts_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Solana_DEXTrade_Input_Instruction_Accounts_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer
}

"""Array of Instruction_CallPath includes or excludes provided value"""
input Solana_DEXTrade_Input_Instruction_CallPath_Input_Instruction_CallPath {
  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]
}

"""Select by Instruction"""
input Solana_DEXTrade_Input_Instruction_InputType {
  InternalSeqNumber: OLAP_Integer
  Program: Solana_DEXTrade_Input_Instruction_Program_InputType
  Accounts: Solana_DEXTrade_Input_Instruction_Accounts_Input_Instruction_Accounts
  Index: OLAP_Integer
  CallPath: Solana_DEXTrade_Input_Instruction_CallPath_Input_Instruction_CallPath
  ExternalSeqNumber: OLAP_Integer
}

"""
Array of Instruction_Program_AccountNames includes or excludes provided value
"""
input Solana_DEXTrade_Input_Instruction_Program_AccountNames_Input_Instruction_Program_AccountNames {
  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]
}

"""Selector for Instruction_Program_Arguments"""
input Solana_DEXTrade_Input_Instruction_Program_Arguments_Input_FieldSelector {
  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Value"""
  Value: EVM_ValueUnionSelector
}

"""
Array of Instruction_Program_Arguments includes or excludes provided value
"""
input Solana_DEXTrade_Input_Instruction_Program_Arguments_Input_Instruction_Program_Arguments {
  """Excludes this element"""
  excludes: [Solana_DEXTrade_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [Solana_DEXTrade_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [Solana_DEXTrade_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Solana_DEXTrade_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Solana_DEXTrade_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Solana_DEXTrade_Input_Instruction_Program_Arguments_Input_FieldSelector]
}

"""Select by Program"""
input Solana_DEXTrade_Input_Instruction_Program_InputType {
  Parsed: Boolean
  Name: OLAP_String
  Method: OLAP_String
  AccountNames: Solana_DEXTrade_Input_Instruction_Program_AccountNames_Input_Instruction_Program_AccountNames
  Address: OLAP_String
  Arguments: Solana_DEXTrade_Input_Instruction_Program_Arguments_Input_Instruction_Program_Arguments
  Json: OLAP_String
}

"""Select by Account"""
input Solana_DEXTrade_Input_Trade_Buy_Account_InputType {
  Token: Solana_DEXTrade_Input_Trade_Buy_Account_Token_InputType
  Address: OLAP_String
}

"""Select by Token"""
input Solana_DEXTrade_Input_Trade_Buy_Account_Token_InputType {
  Owner: OLAP_String
}

"""Select by Currency"""
input Solana_DEXTrade_Input_Trade_Buy_Currency_InputType {
  Wrapped: Boolean
  CollectionAddress: OLAP_String
  UpdateAuthority: OLAP_String
  VerifiedCollection: Boolean
  Native: Boolean
  Fungible: Boolean
  IsMutable: Boolean
  ProgramAddress: OLAP_String
  Decimals: OLAP_Integer
  Name: OLAP_String
  Symbol: OLAP_String
  Key: OLAP_String
  EditionNonce: OLAP_Integer
  TokenStandard: OLAP_String
  TokenCreator: Solana_DEXTrade_Input_Trade_Buy_Currency_TokenCreator_InputType
  MetadataAddress: OLAP_String
  SellerFeeBasisPoints: OLAP_Integer
  Uri: OLAP_String
  PrimarySaleHappened: Boolean
  MintAddress: OLAP_String
}

"""
Array of Trade_Buy_Currency_TokenCreator_Address includes or excludes provided value
"""
input Solana_DEXTrade_Input_Trade_Buy_Currency_TokenCreator_Address_Input_Trade_Buy_Currency_TokenCreator_Address {
  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]
}

"""Select by TokenCreator"""
input Solana_DEXTrade_Input_Trade_Buy_Currency_TokenCreator_InputType {
  Share: Solana_DEXTrade_Input_Trade_Buy_Currency_TokenCreator_Share_Input_Trade_Buy_Currency_TokenCreator_Share
  Verified: Solana_DEXTrade_Input_Trade_Buy_Currency_TokenCreator_Verified_Input_Trade_Buy_Currency_TokenCreator_Verified
  Address: Solana_DEXTrade_Input_Trade_Buy_Currency_TokenCreator_Address_Input_Trade_Buy_Currency_TokenCreator_Address
}

"""
Array of Trade_Buy_Currency_TokenCreator_Share includes or excludes provided value
"""
input Solana_DEXTrade_Input_Trade_Buy_Currency_TokenCreator_Share_Input_Trade_Buy_Currency_TokenCreator_Share {
  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]
}

"""
Array of Trade_Buy_Currency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_DEXTrade_Input_Trade_Buy_Currency_TokenCreator_Verified_Input_Trade_Buy_Currency_TokenCreator_Verified {
  """Does not End with this element"""
  notEndsWith: [Boolean]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]

  """Starts with this element"""
  startsWith: [Boolean]

  """Ends with this element"""
  endsWith: [Boolean]

  """Does not start with this element"""
  notStartsWith: [Boolean]
}

"""Select by Buy"""
input Solana_DEXTrade_Input_Trade_Buy_InputType {
  PriceInUSD: OLAP_Float
  Account: Solana_DEXTrade_Input_Trade_Buy_Account_InputType
  Amount: EVM_Amount_With_Decimals
  AmountInUSD: EVM_Amount_With_Decimals
  Currency: Solana_DEXTrade_Input_Trade_Buy_Currency_InputType
  Order: Solana_DEXTrade_Input_Trade_Buy_Order_InputType
  Price: OLAP_Float
}

"""Select by Order"""
input Solana_DEXTrade_Input_Trade_Buy_Order_InputType {
  LimitAmount: OLAP_BigInteger
  BuySide: Boolean
  LimitPrice: OLAP_BigInteger
  Payer: OLAP_String
  OrderId: OLAP_String
  Account: OLAP_String
  Mint: OLAP_String
  Owner: OLAP_String
}

"""Select by Dex"""
input Solana_DEXTrade_Input_Trade_Dex_InputType {
  ProtocolFamily: OLAP_String
  ProtocolName: OLAP_String
  ProgramAddress: OLAP_String
}

"""Select by Trade"""
input Solana_DEXTrade_Input_Trade_InputType {
  PriceAsymmetry: OLAP_Float
  Index: OLAP_Integer
  Sell: Solana_DEXTrade_Input_Trade_Sell_InputType
  Buy: Solana_DEXTrade_Input_Trade_Buy_InputType
  Market: Solana_DEXTrade_Input_Trade_Market_InputType
  Dex: Solana_DEXTrade_Input_Trade_Dex_InputType
}

"""Select by Market"""
input Solana_DEXTrade_Input_Trade_Market_InputType {
  MarketAddress: OLAP_String
}

"""Select by Account"""
input Solana_DEXTrade_Input_Trade_Sell_Account_InputType {
  Address: OLAP_String
  Token: Solana_DEXTrade_Input_Trade_Sell_Account_Token_InputType
}

"""Select by Token"""
input Solana_DEXTrade_Input_Trade_Sell_Account_Token_InputType {
  Owner: OLAP_String
}

"""Select by Currency"""
input Solana_DEXTrade_Input_Trade_Sell_Currency_InputType {
  VerifiedCollection: Boolean
  EditionNonce: OLAP_Integer
  Uri: OLAP_String
  UpdateAuthority: OLAP_String
  Fungible: Boolean
  MintAddress: OLAP_String
  CollectionAddress: OLAP_String
  Wrapped: Boolean
  Key: OLAP_String
  MetadataAddress: OLAP_String
  Name: OLAP_String
  Symbol: OLAP_String
  SellerFeeBasisPoints: OLAP_Integer
  Decimals: OLAP_Integer
  TokenStandard: OLAP_String
  ProgramAddress: OLAP_String
  IsMutable: Boolean
  PrimarySaleHappened: Boolean
  Native: Boolean
  TokenCreator: Solana_DEXTrade_Input_Trade_Sell_Currency_TokenCreator_InputType
}

"""
Array of Trade_Sell_Currency_TokenCreator_Address includes or excludes provided value
"""
input Solana_DEXTrade_Input_Trade_Sell_Currency_TokenCreator_Address_Input_Trade_Sell_Currency_TokenCreator_Address {
  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]
}

"""Select by TokenCreator"""
input Solana_DEXTrade_Input_Trade_Sell_Currency_TokenCreator_InputType {
  Verified: Solana_DEXTrade_Input_Trade_Sell_Currency_TokenCreator_Verified_Input_Trade_Sell_Currency_TokenCreator_Verified
  Share: Solana_DEXTrade_Input_Trade_Sell_Currency_TokenCreator_Share_Input_Trade_Sell_Currency_TokenCreator_Share
  Address: Solana_DEXTrade_Input_Trade_Sell_Currency_TokenCreator_Address_Input_Trade_Sell_Currency_TokenCreator_Address
}

"""
Array of Trade_Sell_Currency_TokenCreator_Share includes or excludes provided value
"""
input Solana_DEXTrade_Input_Trade_Sell_Currency_TokenCreator_Share_Input_Trade_Sell_Currency_TokenCreator_Share {
  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]
}

"""
Array of Trade_Sell_Currency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_DEXTrade_Input_Trade_Sell_Currency_TokenCreator_Verified_Input_Trade_Sell_Currency_TokenCreator_Verified {
  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]

  """Starts with this element"""
  startsWith: [Boolean]

  """Ends with this element"""
  endsWith: [Boolean]

  """Does not start with this element"""
  notStartsWith: [Boolean]

  """Does not End with this element"""
  notEndsWith: [Boolean]

  """Length of the array"""
  length: OLAP_Integer
}

"""Select by Sell"""
input Solana_DEXTrade_Input_Trade_Sell_InputType {
  PriceInUSD: OLAP_Float
  Currency: Solana_DEXTrade_Input_Trade_Sell_Currency_InputType
  Order: Solana_DEXTrade_Input_Trade_Sell_Order_InputType
  Account: Solana_DEXTrade_Input_Trade_Sell_Account_InputType
  Amount: EVM_Amount_With_Decimals
  AmountInUSD: EVM_Amount_With_Decimals
  Price: OLAP_Float
}

"""Select by Order"""
input Solana_DEXTrade_Input_Trade_Sell_Order_InputType {
  Account: OLAP_String
  Owner: OLAP_String
  Payer: OLAP_String
  LimitAmount: OLAP_BigInteger
  LimitPrice: OLAP_BigInteger
  BuySide: Boolean
  OrderId: OLAP_String
  Mint: OLAP_String
}

"""Select by Transaction"""
input Solana_DEXTrade_Input_Transaction_InputType {
  Signer: OLAP_String
  Fee: EVM_Amount_With_Decimals
  FeeInUSD: EVM_Amount_With_Decimals
  Result: Solana_DEXTrade_Input_Transaction_Result_InputType
  Index: OLAP_Integer
  Signature: OLAP_String
  FeePayer: OLAP_String
}

"""Select by Result"""
input Solana_DEXTrade_Input_Transaction_Result_InputType {
  Success: Boolean
  ErrorMessage: OLAP_String
}

"""Limit definition"""
input Solana_DEXTrade_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input Solana_DEXTrade_LimitBy {
  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [Solana_DEXTrade_EnumFields!]

  """Max count in results"""
  count: Int = 0
}

"""Listed names of numeric fields in a cube"""
enum Solana_DEXTrade_NumFields {
  Block_ParentSlot
  Trade_Sell_PriceInUSD
  Block_Height
  Trade_Buy_AmountInUSD
  Trade_Index
  Trade_Sell_Currency_Decimals
  Trade_Buy_Amount
  Instruction_InternalSeqNumber
  Trade_Buy_Currency_Decimals
  Trade_Sell_AmountInUSD
  Transaction_Index
  Trade_PriceAsymmetry
  Transaction_FeeInUSD
  Trade_Buy_Order_LimitAmount
  Trade_Buy_Currency_SellerFeeBasisPoints
  Trade_Buy_PriceInUSD
  Trade_Sell_Amount
  Transaction_Fee
  Trade_Buy_Currency_EditionNonce
  Trade_Sell_Order_LimitPrice
  Trade_Sell_Currency_SellerFeeBasisPoints
  Instruction_ExternalSeqNumber
  Instruction_Index
  Trade_Sell_Currency_EditionNonce
  Trade_Buy_Order_LimitPrice
  Trade_Buy_Price
  Trade_Sell_Price
  Trade_Sell_Order_LimitAmount
  Block_Slot
}

"""Order by"""
input Solana_DEXTrade_Ordering {
  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String

  """Select a field to sort ascending"""
  ascending: Solana_DEXTrade_EnumFields

  """Select a field to sort descending"""
  descending: Solana_DEXTrade_EnumFields
}

"""Listed names of string fields in a cube"""
enum Solana_DEXTrade_StringFields {
  Trade_Sell_Order_Payer
  Trade_Market_MarketAddress
  Trade_Buy_Currency_ProgramAddress
  Trade_Sell_Currency_Key
  Trade_Sell_Currency_Symbol
  Trade_Sell_Currency_Name
  Instruction_Program_Method
  ChainId
  Trade_Buy_Order_Account
  Block_ParentHash
  Trade_Dex_ProgramAddress
  Trade_Sell_Currency_MetadataAddress
  Transaction_Signer
  Transaction_Fee
  Trade_Buy_Order_Mint
  Trade_Buy_Order_OrderId
  Instruction_Program_Name
  Trade_Buy_Currency_MintAddress
  Trade_Sell_Order_OrderId
  Trade_Sell_Currency_MintAddress
  Trade_Buy_Account_Address
  Trade_Sell_Currency_UpdateAuthority
  Transaction_FeeInUSD
  Trade_Dex_ProtocolFamily
  Transaction_Result_ErrorMessage
  Transaction_FeePayer
  Trade_Sell_Currency_TokenStandard
  Trade_Sell_Order_Owner
  Trade_Buy_Currency_MetadataAddress
  Trade_Buy_Currency_CollectionAddress
  Trade_Sell_Order_Mint
  Trade_Buy_Currency_TokenStandard
  Trade_Buy_Order_LimitAmount
  Trade_Buy_Currency_Name
  Trade_Buy_Currency_Symbol
  Instruction_Program_Address
  Trade_Sell_AmountInUSD
  Transaction_Signature
  Trade_Sell_Currency_CollectionAddress
  Trade_Buy_Order_LimitPrice
  Trade_Buy_Account_Token_Owner
  Trade_Sell_Order_LimitAmount
  Trade_Dex_ProtocolName
  Trade_Sell_Amount
  Trade_Sell_Account_Address
  Trade_Sell_Order_Account
  Trade_Buy_Currency_Key
  Block_Slot
  Block_ParentSlot
  Trade_Buy_AmountInUSD
  Trade_Buy_Currency_UpdateAuthority
  Block_Height
  Trade_Buy_Order_Owner
  Trade_Sell_Currency_ProgramAddress
  Trade_Buy_Currency_Uri
  Instruction_Program_Json
  Trade_Sell_Order_LimitPrice
  Trade_Sell_Account_Token_Owner
  Trade_Buy_Order_Payer
  Block_Hash
  Trade_Buy_Amount
  Trade_Sell_Currency_Uri
  Block_Date
}

"""Listed names of comparable fields in a cube"""
enum Solana_DEXTradeByToken_CompareFields {
  Trade_Side_Currency_Wrapped
  Trade_Order_BuySide
  Instruction_Index
  Trade_Index
  Trade_Side_Currency_PrimarySaleHappened
  Block_Height
  Instruction_ExternalSeqNumber
  Trade_Side_Currency_Decimals
  Trade_Side_Amount
  Trade_Currency_VerifiedCollection
  Transaction_Index
  Transaction_Fee
  Trade_PriceInUSD
  Trade_Price
  Block_ParentSlot
  Trade_Side_Order_LimitAmount
  Trade_Side_Currency_VerifiedCollection
  Trade_Currency_Fungible
  Trade_Order_LimitPrice
  Trade_Order_LimitAmount
  Trade_Side_AmountInUSD
  Trade_Currency_Wrapped
  Trade_Side_Currency_EditionNonce
  Trade_Side_Currency_Native
  Transaction_Result_Success
  Instruction_InternalSeqNumber
  Instruction_Program_Parsed
  Trade_PriceAsymmetry
  Trade_Currency_Decimals
  Block_Time
  Transaction_FeeInUSD
  Trade_Side_Currency_IsMutable
  Trade_Currency_IsMutable
  Trade_Side_Currency_SellerFeeBasisPoints
  Trade_Currency_PrimarySaleHappened
  Block_Slot
  Trade_Side_Currency_Fungible
  Trade_AmountInUSD
  Trade_Side_Order_BuySide
  Trade_Currency_Native
  Trade_Currency_EditionNonce
  Trade_Currency_SellerFeeBasisPoints
  Trade_Amount
  Block_Date
  Trade_Side_Order_LimitPrice
}

"""DEX Trades by a token in Solana Blockchain"""
type Solana_DEXTradeByToken_Cube {
  """Block fields"""
  Block: Solana_DEXTradeByToken_Fields_Block

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Instruction fields"""
  Instruction: Solana_DEXTradeByToken_Fields_Instruction

  """Trade fields"""
  Trade: Solana_DEXTradeByToken_Fields_Trade

  """Transaction fields"""
  Transaction: Solana_DEXTradeByToken_Fields_Transaction

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """Side1 argument"""
    side1: Solana_DEXTradeByToken_StringFields!

    """Side2 argument"""
    side2: Solana_DEXTradeByToken_StringFields!

    """Intersect with array"""
    intersectWith: [String!]

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: Solana_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: Solana_DEXTradeByToken_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: Solana_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Solana_DEXTradeByToken_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Solana_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [Solana_DEXTradeByToken_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: Solana_DEXTradeByToken_NumFields

    """Second argument for Covariance between two arguments"""
    with: Solana_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Solana_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Solana_DEXTradeByToken_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Solana_DEXTradeByToken_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Solana_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: Solana_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: Solana_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: Solana_DEXTradeByToken_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: Solana_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): Float

  """Median for a set of values"""
  median(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: Solana_DEXTradeByToken_NumFields!
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """Argument for nakamoto index"""
    of: Solana_DEXTradeByToken_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: Solana_DEXTradeByToken_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: Solana_DEXTradeByToken_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: Solana_DEXTradeByToken_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: Solana_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: Solana_DEXTradeByToken_NumFields!
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: Solana_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: Solana_DEXTradeByToken_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Solana_DEXTradeByToken_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Solana_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): Float

  """Count unique records"""
  uniq(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [Solana_DEXTradeByToken_EnumFields!]!
  ): String
}

"""Listed names of fields in a cube"""
enum Solana_DEXTradeByToken_EnumFields {
  Trade_Currency_Name
  Trade_Side_Currency_TokenStandard
  ChainId
  Trade_Side_Currency_CollectionAddress
  Trade_Currency_EditionNonce
  Trade_Currency_UpdateAuthority
  Trade_Side_Order_Mint
  Trade_Currency_IsMutable
  Instruction_CallPath
  Transaction_Signer
  Trade_Currency_CollectionAddress
  Trade_Currency_TokenCreator_Address
  Trade_Order_LimitAmount
  Transaction_Index
  Trade_Side_Currency_Symbol
  Trade_Order_Account
  Trade_Index
  Instruction_Program_Json
  Trade_Side_Account_Token_Owner
  Block_Date
  Trade_Dex_ProtocolFamily
  Trade_Currency_ProgramAddress
  Block_Time
  Trade_Currency_Fungible
  Trade_PriceInUSD
  Trade_Currency_Uri
  Trade_Order_Owner
  Trade_Order_Payer
  Trade_Side_AmountInUSD
  Block_Hash
  Transaction_Signature
  Trade_Side_Order_LimitAmount
  Trade_Currency_PrimarySaleHappened
  Instruction_Program_Address
  Block_Height
  Trade_Side_Currency_TokenCreator_Share
  Trade_Side_Currency_VerifiedCollection
  Trade_Side_Currency_Uri
  Block_ParentHash
  Trade_Order_LimitPrice
  Instruction_Program_AccountNames
  Trade_Price
  Transaction_Result_ErrorMessage
  Trade_Currency_Wrapped
  Trade_Account_Token_Owner
  Transaction_FeeInUSD
  Transaction_FeePayer
  Trade_Currency_TokenStandard
  Block_Slot
  Trade_Side_Currency_MintAddress
  Trade_Side_Order_Account
  Trade_Order_Mint
  Trade_Side_Currency_SellerFeeBasisPoints
  Trade_Side_Currency_Key
  Trade_Side_Currency_UpdateAuthority
  Instruction_Program_Parsed
  Trade_Currency_Key
  Transaction_Fee
  Instruction_Program_Arguments
  Instruction_Index
  Trade_Currency_VerifiedCollection
  Trade_Account_Address
  Trade_PriceAsymmetry
  Trade_Currency_SellerFeeBasisPoints
  Trade_Side_Order_Payer
  Trade_Currency_Decimals
  Trade_Dex_ProgramAddress
  Trade_Currency_Native
  Trade_Side_Currency_EditionNonce
  Instruction_InternalSeqNumber
  Instruction_Program_Method
  Trade_Order_OrderId
  Trade_Currency_TokenCreator_Verified
  Trade_Side_Currency_PrimarySaleHappened
  Trade_Side_Currency_Fungible
  Trade_Side_Currency_TokenCreator_Address
  Trade_Side_Amount
  Trade_Side_Currency_Wrapped
  Transaction_Result_Success
  Trade_Side_Order_LimitPrice
  Trade_Currency_TokenCreator_Share
  Instruction_ExternalSeqNumber
  Instruction_Program_Name
  Trade_Dex_ProtocolName
  Trade_Side_Order_Owner
  Trade_AmountInUSD
  Trade_Side_Type
  Trade_Currency_Symbol
  Trade_Side_Order_OrderId
  Trade_Side_Currency_MetadataAddress
  Trade_Side_Account_Address
  Trade_Amount
  Trade_Side_Currency_ProgramAddress
  Block_ParentSlot
  Instruction_Accounts
  Trade_Side_Currency_Name
  Trade_Market_MarketAddress
  Trade_Currency_MintAddress
  Trade_Currency_MetadataAddress
  Trade_Order_BuySide
  Trade_Side_Currency_TokenCreator_Verified
  Trade_Side_Currency_IsMutable
  Trade_Side_Currency_Decimals
  Trade_Side_Currency_Native
  Trade_Side_Order_BuySide
}

"""Block fields"""
type Solana_DEXTradeByToken_Fields_Block {
  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): String

  """Height value"""
  Height(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentSlot value"""
  ParentSlot(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Slot value"""
  Slot(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime
}

"""Instruction fields"""
type Solana_DEXTradeByToken_Fields_Instruction {
  """Accounts value"""
  Accounts(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTradeByToken_Fields_Instruction_Accounts_Select_Instruction_Accounts
  ): [Solana_DEXTradeByToken_Fields_Instruction_Instruction_Accounts]

  """CallPath value"""
  CallPath(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTradeByToken_Fields_Instruction_CallPath_Select_Instruction_CallPath

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields
  ): [Int]

  """ExternalSeqNumber value"""
  ExternalSeqNumber(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields
  ): Int

  """Index value"""
  Index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields
  ): Int

  """InternalSeqNumber value"""
  InternalSeqNumber(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields
  ): Int

  """Program fields"""
  Program: Solana_DEXTradeByToken_Fields_Instruction_Program
}

"""Selector for Instruction_Accounts"""
input Solana_DEXTradeByToken_Fields_Instruction_Accounts_Select_FieldSelector {
  """Select value for IsWritable"""
  IsWritable: Boolean

  """Select value for Token"""
  Token: Solana_DEXTradeByToken_Fields_Instruction_Accounts_Select_FieldSelector_FieldSelector

  """Select value for Address"""
  Address: OLAP_String
}

"""Selector for Instruction_Accounts_Token"""
input Solana_DEXTradeByToken_Fields_Instruction_Accounts_Select_FieldSelector_FieldSelector {
  """Select value for ProgramId"""
  ProgramId: OLAP_String

  """Select value for Mint"""
  Mint: OLAP_String

  """Select value for Owner"""
  Owner: OLAP_String
}

"""Array of Instruction_Accounts includes or excludes provided value"""
input Solana_DEXTradeByToken_Fields_Instruction_Accounts_Select_Instruction_Accounts {
  """Starts with this element"""
  startsWith: [Solana_DEXTradeByToken_Fields_Instruction_Accounts_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [Solana_DEXTradeByToken_Fields_Instruction_Accounts_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Solana_DEXTradeByToken_Fields_Instruction_Accounts_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Solana_DEXTradeByToken_Fields_Instruction_Accounts_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Solana_DEXTradeByToken_Fields_Instruction_Accounts_Select_FieldSelector]

  """Excludes this element"""
  excludes: [Solana_DEXTradeByToken_Fields_Instruction_Accounts_Select_FieldSelector]
}

"""Array of Instruction_CallPath includes or excludes provided value"""
input Solana_DEXTradeByToken_Fields_Instruction_CallPath_Select_Instruction_CallPath {
  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]
}

"""Instruction_Accounts fields"""
type Solana_DEXTradeByToken_Fields_Instruction_Instruction_Accounts {
  Address: String
  IsWritable: Boolean
  Token: Solana_DEXTradeByToken_Fields_Instruction_Instruction_Accounts_Token
}

"""Instruction_Accounts_Token fields"""
type Solana_DEXTradeByToken_Fields_Instruction_Instruction_Accounts_Token {
  Mint: String
  Owner: String
  ProgramId: String
}

"""Program fields"""
type Solana_DEXTradeByToken_Fields_Instruction_Program {
  """AccountNames value"""
  AccountNames(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTradeByToken_Fields_Instruction_Program_AccountNames_Select_Instruction_Program_AccountNames
  ): [String]

  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Arguments value"""
  Arguments(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTradeByToken_Fields_Instruction_Program_Arguments_Select_Instruction_Program_Arguments
  ): [Solana_DEXTradeByToken_Fields_Instruction_Program_Instruction_Program_Arguments]

  """Json value"""
  Json(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Method value"""
  Method(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): String

  """Parsed value"""
  Parsed(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields
  ): Boolean
}

"""
Array of Instruction_Program_AccountNames includes or excludes provided value
"""
input Solana_DEXTradeByToken_Fields_Instruction_Program_AccountNames_Select_Instruction_Program_AccountNames {
  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]
}

"""Selector for Instruction_Program_Arguments"""
input Solana_DEXTradeByToken_Fields_Instruction_Program_Arguments_Select_FieldSelector {
  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Value"""
  Value: EVM_ValueUnionSelector
}

"""
Array of Instruction_Program_Arguments includes or excludes provided value
"""
input Solana_DEXTradeByToken_Fields_Instruction_Program_Arguments_Select_Instruction_Program_Arguments {
  """Does not start with this element"""
  notStartsWith: [Solana_DEXTradeByToken_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Solana_DEXTradeByToken_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Solana_DEXTradeByToken_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Excludes this element"""
  excludes: [Solana_DEXTradeByToken_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [Solana_DEXTradeByToken_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [Solana_DEXTradeByToken_Fields_Instruction_Program_Arguments_Select_FieldSelector]
}

"""Instruction_Program_Arguments fields"""
type Solana_DEXTradeByToken_Fields_Instruction_Program_Instruction_Program_Arguments {
  Name: String
  Type: String
  Value: EVM_ABI_Value_Union
}

"""Trade fields"""
type Solana_DEXTradeByToken_Fields_Trade {
  """Account fields"""
  Account: Solana_DEXTradeByToken_Fields_Trade_Account

  """Amount value"""
  Amount(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Currency fields"""
  Currency: Solana_DEXTradeByToken_Fields_Trade_Currency

  """Dex fields"""
  Dex: Solana_DEXTradeByToken_Fields_Trade_Dex

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Market fields"""
  Market: Solana_DEXTradeByToken_Fields_Trade_Market

  """Order fields"""
  Order: Solana_DEXTradeByToken_Fields_Trade_Order

  """Price value"""
  Price(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """PriceAsymmetry value"""
  PriceAsymmetry(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """PriceInUSD value"""
  PriceInUSD(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): Float

  """Side fields"""
  Side: Solana_DEXTradeByToken_Fields_Trade_Side
}

"""Account fields"""
type Solana_DEXTradeByToken_Fields_Trade_Account {
  """Address value"""
  Address(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): String

  """Token fields"""
  Token: Solana_DEXTradeByToken_Fields_Trade_Account_Token
}

"""Token fields"""
type Solana_DEXTradeByToken_Fields_Trade_Account_Token {
  """Owner value"""
  Owner(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Currency fields"""
type Solana_DEXTradeByToken_Fields_Trade_Currency {
  """CollectionAddress value"""
  CollectionAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """EditionNonce value"""
  EditionNonce(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """IsMutable value"""
  IsMutable(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Key value"""
  Key(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """MetadataAddress value"""
  MetadataAddress(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields
  ): String

  """MintAddress value"""
  MintAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields
  ): String

  """Native value"""
  Native(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields
  ): Boolean

  """PrimarySaleHappened value"""
  PrimarySaleHappened(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """ProgramAddress value"""
  ProgramAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SellerFeeBasisPoints value"""
  SellerFeeBasisPoints(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Symbol value"""
  Symbol(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields
  ): String

  """TokenCreator fields"""
  TokenCreator: Solana_DEXTradeByToken_Fields_Trade_Currency_TokenCreator

  """TokenStandard value"""
  TokenStandard(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """UpdateAuthority value"""
  UpdateAuthority(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Uri value"""
  Uri(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields
  ): String

  """VerifiedCollection value"""
  VerifiedCollection(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields
  ): Boolean

  """Wrapped value"""
  Wrapped(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""TokenCreator fields"""
type Solana_DEXTradeByToken_Fields_Trade_Currency_TokenCreator {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTradeByToken_Fields_Trade_Currency_TokenCreator_Address_Select_Trade_Currency_TokenCreator_Address
  ): [String]

  """Share value"""
  Share(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTradeByToken_Fields_Trade_Currency_TokenCreator_Share_Select_Trade_Currency_TokenCreator_Share
  ): [Int]

  """Verified value"""
  Verified(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTradeByToken_Fields_Trade_Currency_TokenCreator_Verified_Select_Trade_Currency_TokenCreator_Verified
  ): [Boolean]
}

"""
Array of Trade_Currency_TokenCreator_Address includes or excludes provided value
"""
input Solana_DEXTradeByToken_Fields_Trade_Currency_TokenCreator_Address_Select_Trade_Currency_TokenCreator_Address {
  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]
}

"""
Array of Trade_Currency_TokenCreator_Share includes or excludes provided value
"""
input Solana_DEXTradeByToken_Fields_Trade_Currency_TokenCreator_Share_Select_Trade_Currency_TokenCreator_Share {
  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]
}

"""
Array of Trade_Currency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_DEXTradeByToken_Fields_Trade_Currency_TokenCreator_Verified_Select_Trade_Currency_TokenCreator_Verified {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]

  """Starts with this element"""
  startsWith: [Boolean]

  """Ends with this element"""
  endsWith: [Boolean]

  """Does not start with this element"""
  notStartsWith: [Boolean]

  """Does not End with this element"""
  notEndsWith: [Boolean]
}

"""Dex fields"""
type Solana_DEXTradeByToken_Fields_Trade_Dex {
  """ProgramAddress value"""
  ProgramAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolFamily value"""
  ProtocolFamily(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Market fields"""
type Solana_DEXTradeByToken_Fields_Trade_Market {
  """MarketAddress value"""
  MarketAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Order fields"""
type Solana_DEXTradeByToken_Fields_Trade_Order {
  """Account value"""
  Account(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """BuySide value"""
  BuySide(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): Boolean

  """LimitAmount value"""
  LimitAmount(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """LimitPrice value"""
  LimitPrice(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Mint value"""
  Mint(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """OrderId value"""
  OrderId(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Owner value"""
  Owner(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Payer value"""
  Payer(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Side fields"""
type Solana_DEXTradeByToken_Fields_Trade_Side {
  """Account fields"""
  Account: Solana_DEXTradeByToken_Fields_Trade_Side_Account

  """Amount value"""
  Amount(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields
  ): String

  """Currency fields"""
  Currency: Solana_DEXTradeByToken_Fields_Trade_Side_Currency

  """Order fields"""
  Order: Solana_DEXTradeByToken_Fields_Trade_Side_Order

  """Type value"""
  Type(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields
  ): Solana_DEXTradeByToken_Fields_Trade_Side_Trade_Side_Output
}

"""Account fields"""
type Solana_DEXTradeByToken_Fields_Trade_Side_Account {
  """Address value"""
  Address(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): String

  """Token fields"""
  Token: Solana_DEXTradeByToken_Fields_Trade_Side_Account_Token
}

"""Token fields"""
type Solana_DEXTradeByToken_Fields_Trade_Side_Account_Token {
  """Owner value"""
  Owner(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Currency fields"""
type Solana_DEXTradeByToken_Fields_Trade_Side_Currency {
  """CollectionAddress value"""
  CollectionAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """EditionNonce value"""
  EditionNonce(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """IsMutable value"""
  IsMutable(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields
  ): Boolean

  """Key value"""
  Key(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """MetadataAddress value"""
  MetadataAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """MintAddress value"""
  MintAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Native value"""
  Native(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """PrimarySaleHappened value"""
  PrimarySaleHappened(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields
  ): Boolean

  """ProgramAddress value"""
  ProgramAddress(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields
  ): String

  """SellerFeeBasisPoints value"""
  SellerFeeBasisPoints(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields
  ): Int

  """Symbol value"""
  Symbol(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): String

  """TokenCreator fields"""
  TokenCreator: Solana_DEXTradeByToken_Fields_Trade_Side_Currency_TokenCreator

  """TokenStandard value"""
  TokenStandard(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """UpdateAuthority value"""
  UpdateAuthority(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields
  ): String

  """Uri value"""
  Uri(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """VerifiedCollection value"""
  VerifiedCollection(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields
  ): Boolean

  """Wrapped value"""
  Wrapped(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields
  ): Boolean
}

"""TokenCreator fields"""
type Solana_DEXTradeByToken_Fields_Trade_Side_Currency_TokenCreator {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTradeByToken_Fields_Trade_Side_Currency_TokenCreator_Address_Select_Trade_Side_Currency_TokenCreator_Address
  ): [String]

  """Share value"""
  Share(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTradeByToken_Fields_Trade_Side_Currency_TokenCreator_Share_Select_Trade_Side_Currency_TokenCreator_Share
  ): [Int]

  """Verified value"""
  Verified(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_DEXTradeByToken_Fields_Trade_Side_Currency_TokenCreator_Verified_Select_Trade_Side_Currency_TokenCreator_Verified
  ): [Boolean]
}

"""
Array of Trade_Side_Currency_TokenCreator_Address includes or excludes provided value
"""
input Solana_DEXTradeByToken_Fields_Trade_Side_Currency_TokenCreator_Address_Select_Trade_Side_Currency_TokenCreator_Address {
  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]
}

"""
Array of Trade_Side_Currency_TokenCreator_Share includes or excludes provided value
"""
input Solana_DEXTradeByToken_Fields_Trade_Side_Currency_TokenCreator_Share_Select_Trade_Side_Currency_TokenCreator_Share {
  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]
}

"""
Array of Trade_Side_Currency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_DEXTradeByToken_Fields_Trade_Side_Currency_TokenCreator_Verified_Select_Trade_Side_Currency_TokenCreator_Verified {
  """Ends with this element"""
  endsWith: [Boolean]

  """Does not start with this element"""
  notStartsWith: [Boolean]

  """Does not End with this element"""
  notEndsWith: [Boolean]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]

  """Starts with this element"""
  startsWith: [Boolean]
}

"""Order fields"""
type Solana_DEXTradeByToken_Fields_Trade_Side_Order {
  """Account value"""
  Account(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields
  ): String

  """BuySide value"""
  BuySide(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """LimitAmount value"""
  LimitAmount(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """LimitPrice value"""
  LimitPrice(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Mint value"""
  Mint(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """OrderId value"""
  OrderId(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Owner value"""
  Owner(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): String

  """Payer value"""
  Payer(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): String
}

"""Enumeration for Trade_Side"""
enum Solana_DEXTradeByToken_Fields_Trade_Side_Trade_Side_Output {
  """Trade_Side buy"""
  buy

  """Trade_Side sell"""
  sell
}

"""Select filters for Trade_Side"""
input Solana_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side {
  """Exact match"""
  is: Solana_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input

  """Not this"""
  not: Solana_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input

  """One of the values"""
  in: [Solana_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input!]

  """Not one of the values"""
  notIn: [Solana_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input!]
}

"""Enumeration for Trade_Side"""
enum Solana_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input {
  """Trade_Side buy"""
  buy

  """Trade_Side sell"""
  sell
}

"""Transaction fields"""
type Solana_DEXTradeByToken_Fields_Transaction {
  """Fee value"""
  Fee(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeePayer value"""
  FeePayer(
    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Result fields"""
  Result: Solana_DEXTradeByToken_Fields_Transaction_Result

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Signer value"""
  Signer(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields
  ): String
}

"""Result fields"""
type Solana_DEXTradeByToken_Fields_Transaction_Result {
  """ErrorMessage value"""
  ErrorMessage(
    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Return value when the argument is minimum"""
    minimum: Solana_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_DEXTradeByToken_CompareFields
  ): Boolean
}

input Solana_DEXTradeByToken_Filter {
  """Select by Trade"""
  Trade: Solana_DEXTradeByToken_Input_Trade_InputType

  """Select by Transaction"""
  Transaction: Solana_DEXTradeByToken_Input_Transaction_InputType

  """Any combination ( as OR ) of supplied conditions"""
  any: [Solana_DEXTradeByToken_FilterAny!]

  """Select by Block"""
  Block: Solana_DEXTradeByToken_Input_Block_InputType

  """Select by Instruction"""
  Instruction: Solana_DEXTradeByToken_Input_Instruction_InputType

  """String value"""
  ChainId: OLAP_String
}

input Solana_DEXTradeByToken_FilterAny {
  """String value"""
  ChainId: OLAP_String

  """Select by Trade"""
  Trade: Solana_DEXTradeByToken_Input_Trade_InputType

  """Select by Transaction"""
  Transaction: Solana_DEXTradeByToken_Input_Transaction_InputType

  """Select by Block"""
  Block: Solana_DEXTradeByToken_Input_Block_InputType

  """Select by Instruction"""
  Instruction: Solana_DEXTradeByToken_Input_Instruction_InputType
}

"""Select by Block"""
input Solana_DEXTradeByToken_Input_Block_InputType {
  Hash: OLAP_String
  ParentHash: OLAP_String
  ParentSlot: OLAP_BigInteger
  Height: OLAP_BigInteger
  Date: OLAP_Date
  Slot: OLAP_BigInteger
  Time: OLAP_DateTime
}

"""Selector for Instruction_Accounts"""
input Solana_DEXTradeByToken_Input_Instruction_Accounts_Input_FieldSelector {
  """Select value for Address"""
  Address: OLAP_String

  """Select value for IsWritable"""
  IsWritable: Boolean

  """Select value for Token"""
  Token: Solana_DEXTradeByToken_Input_Instruction_Accounts_Input_FieldSelector_FieldSelector
}

"""Selector for Instruction_Accounts_Token"""
input Solana_DEXTradeByToken_Input_Instruction_Accounts_Input_FieldSelector_FieldSelector {
  """Select value for ProgramId"""
  ProgramId: OLAP_String

  """Select value for Mint"""
  Mint: OLAP_String

  """Select value for Owner"""
  Owner: OLAP_String
}

"""Array of Instruction_Accounts includes or excludes provided value"""
input Solana_DEXTradeByToken_Input_Instruction_Accounts_Input_Instruction_Accounts {
  """Includes this element"""
  includes: [Solana_DEXTradeByToken_Input_Instruction_Accounts_Input_FieldSelector]

  """Excludes this element"""
  excludes: [Solana_DEXTradeByToken_Input_Instruction_Accounts_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [Solana_DEXTradeByToken_Input_Instruction_Accounts_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [Solana_DEXTradeByToken_Input_Instruction_Accounts_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Solana_DEXTradeByToken_Input_Instruction_Accounts_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Solana_DEXTradeByToken_Input_Instruction_Accounts_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer
}

"""Array of Instruction_CallPath includes or excludes provided value"""
input Solana_DEXTradeByToken_Input_Instruction_CallPath_Input_Instruction_CallPath {
  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]
}

"""Select by Instruction"""
input Solana_DEXTradeByToken_Input_Instruction_InputType {
  Accounts: Solana_DEXTradeByToken_Input_Instruction_Accounts_Input_Instruction_Accounts
  Program: Solana_DEXTradeByToken_Input_Instruction_Program_InputType
  InternalSeqNumber: OLAP_Integer
  Index: OLAP_Integer
  CallPath: Solana_DEXTradeByToken_Input_Instruction_CallPath_Input_Instruction_CallPath
  ExternalSeqNumber: OLAP_Integer
}

"""
Array of Instruction_Program_AccountNames includes or excludes provided value
"""
input Solana_DEXTradeByToken_Input_Instruction_Program_AccountNames_Input_Instruction_Program_AccountNames {
  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]
}

"""Selector for Instruction_Program_Arguments"""
input Solana_DEXTradeByToken_Input_Instruction_Program_Arguments_Input_FieldSelector {
  """Select value for Type"""
  Type: OLAP_String

  """Select value for Value"""
  Value: EVM_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String
}

"""
Array of Instruction_Program_Arguments includes or excludes provided value
"""
input Solana_DEXTradeByToken_Input_Instruction_Program_Arguments_Input_Instruction_Program_Arguments {
  """Starts with this element"""
  startsWith: [Solana_DEXTradeByToken_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [Solana_DEXTradeByToken_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Solana_DEXTradeByToken_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Solana_DEXTradeByToken_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Solana_DEXTradeByToken_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Excludes this element"""
  excludes: [Solana_DEXTradeByToken_Input_Instruction_Program_Arguments_Input_FieldSelector]
}

"""Select by Program"""
input Solana_DEXTradeByToken_Input_Instruction_Program_InputType {
  AccountNames: Solana_DEXTradeByToken_Input_Instruction_Program_AccountNames_Input_Instruction_Program_AccountNames
  Json: OLAP_String
  Parsed: Boolean
  Method: OLAP_String
  Name: OLAP_String
  Arguments: Solana_DEXTradeByToken_Input_Instruction_Program_Arguments_Input_Instruction_Program_Arguments
  Address: OLAP_String
}

"""Select by Account"""
input Solana_DEXTradeByToken_Input_Trade_Account_InputType {
  Token: Solana_DEXTradeByToken_Input_Trade_Account_Token_InputType
  Address: OLAP_String
}

"""Select by Token"""
input Solana_DEXTradeByToken_Input_Trade_Account_Token_InputType {
  Owner: OLAP_String
}

"""Select by Currency"""
input Solana_DEXTradeByToken_Input_Trade_Currency_InputType {
  Symbol: OLAP_String
  Decimals: OLAP_Integer
  UpdateAuthority: OLAP_String
  VerifiedCollection: Boolean
  TokenCreator: Solana_DEXTradeByToken_Input_Trade_Currency_TokenCreator_InputType
  TokenStandard: OLAP_String
  ProgramAddress: OLAP_String
  CollectionAddress: OLAP_String
  EditionNonce: OLAP_Integer
  Name: OLAP_String
  Wrapped: Boolean
  Native: Boolean
  IsMutable: Boolean
  Fungible: Boolean
  Key: OLAP_String
  PrimarySaleHappened: Boolean
  MintAddress: OLAP_String
  MetadataAddress: OLAP_String
  SellerFeeBasisPoints: OLAP_Integer
  Uri: OLAP_String
}

"""
Array of Trade_Currency_TokenCreator_Address includes or excludes provided value
"""
input Solana_DEXTradeByToken_Input_Trade_Currency_TokenCreator_Address_Input_Trade_Currency_TokenCreator_Address {
  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]
}

"""Select by TokenCreator"""
input Solana_DEXTradeByToken_Input_Trade_Currency_TokenCreator_InputType {
  Share: Solana_DEXTradeByToken_Input_Trade_Currency_TokenCreator_Share_Input_Trade_Currency_TokenCreator_Share
  Address: Solana_DEXTradeByToken_Input_Trade_Currency_TokenCreator_Address_Input_Trade_Currency_TokenCreator_Address
  Verified: Solana_DEXTradeByToken_Input_Trade_Currency_TokenCreator_Verified_Input_Trade_Currency_TokenCreator_Verified
}

"""
Array of Trade_Currency_TokenCreator_Share includes or excludes provided value
"""
input Solana_DEXTradeByToken_Input_Trade_Currency_TokenCreator_Share_Input_Trade_Currency_TokenCreator_Share {
  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer
}

"""
Array of Trade_Currency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_DEXTradeByToken_Input_Trade_Currency_TokenCreator_Verified_Input_Trade_Currency_TokenCreator_Verified {
  """Starts with this element"""
  startsWith: [Boolean]

  """Ends with this element"""
  endsWith: [Boolean]

  """Does not start with this element"""
  notStartsWith: [Boolean]

  """Does not End with this element"""
  notEndsWith: [Boolean]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]
}

"""Select by Dex"""
input Solana_DEXTradeByToken_Input_Trade_Dex_InputType {
  ProgramAddress: OLAP_String
  ProtocolFamily: OLAP_String
  ProtocolName: OLAP_String
}

"""Select by Trade"""
input Solana_DEXTradeByToken_Input_Trade_InputType {
  Order: Solana_DEXTradeByToken_Input_Trade_Order_InputType
  PriceAsymmetry: OLAP_Float
  Amount: EVM_Amount_With_Decimals
  AmountInUSD: EVM_Amount_With_Decimals
  Dex: Solana_DEXTradeByToken_Input_Trade_Dex_InputType
  Price: OLAP_Float
  Market: Solana_DEXTradeByToken_Input_Trade_Market_InputType
  Account: Solana_DEXTradeByToken_Input_Trade_Account_InputType
  PriceInUSD: OLAP_Float
  Index: OLAP_Integer
  Side: Solana_DEXTradeByToken_Input_Trade_Side_InputType
  Currency: Solana_DEXTradeByToken_Input_Trade_Currency_InputType
}

"""Select by Market"""
input Solana_DEXTradeByToken_Input_Trade_Market_InputType {
  MarketAddress: OLAP_String
}

"""Select by Order"""
input Solana_DEXTradeByToken_Input_Trade_Order_InputType {
  LimitPrice: OLAP_BigInteger
  LimitAmount: OLAP_BigInteger
  Account: OLAP_String
  OrderId: OLAP_String
  Mint: OLAP_String
  Payer: OLAP_String
  Owner: OLAP_String
  BuySide: Boolean
}

"""Select by Account"""
input Solana_DEXTradeByToken_Input_Trade_Side_Account_InputType {
  Address: OLAP_String
  Token: Solana_DEXTradeByToken_Input_Trade_Side_Account_Token_InputType
}

"""Select by Token"""
input Solana_DEXTradeByToken_Input_Trade_Side_Account_Token_InputType {
  Owner: OLAP_String
}

"""Select by Currency"""
input Solana_DEXTradeByToken_Input_Trade_Side_Currency_InputType {
  Name: OLAP_String
  CollectionAddress: OLAP_String
  Uri: OLAP_String
  UpdateAuthority: OLAP_String
  Decimals: OLAP_Integer
  TokenCreator: Solana_DEXTradeByToken_Input_Trade_Side_Currency_TokenCreator_InputType
  Fungible: Boolean
  Wrapped: Boolean
  Symbol: OLAP_String
  TokenStandard: OLAP_String
  PrimarySaleHappened: Boolean
  MetadataAddress: OLAP_String
  EditionNonce: OLAP_Integer
  ProgramAddress: OLAP_String
  VerifiedCollection: Boolean
  MintAddress: OLAP_String
  Native: Boolean
  IsMutable: Boolean
  SellerFeeBasisPoints: OLAP_Integer
  Key: OLAP_String
}

"""
Array of Trade_Side_Currency_TokenCreator_Address includes or excludes provided value
"""
input Solana_DEXTradeByToken_Input_Trade_Side_Currency_TokenCreator_Address_Input_Trade_Side_Currency_TokenCreator_Address {
  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]
}

"""Select by TokenCreator"""
input Solana_DEXTradeByToken_Input_Trade_Side_Currency_TokenCreator_InputType {
  Verified: Solana_DEXTradeByToken_Input_Trade_Side_Currency_TokenCreator_Verified_Input_Trade_Side_Currency_TokenCreator_Verified
  Share: Solana_DEXTradeByToken_Input_Trade_Side_Currency_TokenCreator_Share_Input_Trade_Side_Currency_TokenCreator_Share
  Address: Solana_DEXTradeByToken_Input_Trade_Side_Currency_TokenCreator_Address_Input_Trade_Side_Currency_TokenCreator_Address
}

"""
Array of Trade_Side_Currency_TokenCreator_Share includes or excludes provided value
"""
input Solana_DEXTradeByToken_Input_Trade_Side_Currency_TokenCreator_Share_Input_Trade_Side_Currency_TokenCreator_Share {
  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]
}

"""
Array of Trade_Side_Currency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_DEXTradeByToken_Input_Trade_Side_Currency_TokenCreator_Verified_Input_Trade_Side_Currency_TokenCreator_Verified {
  """Ends with this element"""
  endsWith: [Boolean]

  """Does not start with this element"""
  notStartsWith: [Boolean]

  """Does not End with this element"""
  notEndsWith: [Boolean]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]

  """Starts with this element"""
  startsWith: [Boolean]
}

"""Select by Side"""
input Solana_DEXTradeByToken_Input_Trade_Side_InputType {
  Amount: EVM_Amount_With_Decimals
  AmountInUSD: EVM_Amount_With_Decimals
  Order: Solana_DEXTradeByToken_Input_Trade_Side_Order_InputType
  Currency: Solana_DEXTradeByToken_Input_Trade_Side_Currency_InputType
  Type: Solana_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side
  Account: Solana_DEXTradeByToken_Input_Trade_Side_Account_InputType
}

"""Select by Order"""
input Solana_DEXTradeByToken_Input_Trade_Side_Order_InputType {
  BuySide: Boolean
  LimitPrice: OLAP_BigInteger
  LimitAmount: OLAP_BigInteger
  Payer: OLAP_String
  OrderId: OLAP_String
  Owner: OLAP_String
  Mint: OLAP_String
  Account: OLAP_String
}

"""Select filters for Trade_Side"""
input Solana_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side {
  """Exact match"""
  is: Solana_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input

  """Not this"""
  not: Solana_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input

  """One of the values"""
  in: [Solana_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input!]

  """Not one of the values"""
  notIn: [Solana_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input!]
}

"""Enumeration for Trade_Side"""
enum Solana_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input {
  """Trade_Side buy"""
  buy

  """Trade_Side sell"""
  sell
}

"""Select by Transaction"""
input Solana_DEXTradeByToken_Input_Transaction_InputType {
  Fee: EVM_Amount_With_Decimals
  FeeInUSD: EVM_Amount_With_Decimals
  Signer: OLAP_String
  FeePayer: OLAP_String
  Result: Solana_DEXTradeByToken_Input_Transaction_Result_InputType
  Index: OLAP_Integer
  Signature: OLAP_String
}

"""Select by Result"""
input Solana_DEXTradeByToken_Input_Transaction_Result_InputType {
  Success: Boolean
  ErrorMessage: OLAP_String
}

"""Limit definition"""
input Solana_DEXTradeByToken_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input Solana_DEXTradeByToken_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [Solana_DEXTradeByToken_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum Solana_DEXTradeByToken_NumFields {
  Trade_PriceAsymmetry
  Trade_Side_Currency_EditionNonce
  Trade_Order_LimitAmount
  Trade_Side_Order_LimitPrice
  Block_ParentSlot
  Trade_Side_Order_LimitAmount
  Trade_Currency_SellerFeeBasisPoints
  Trade_Side_Currency_Decimals
  Trade_Side_Currency_SellerFeeBasisPoints
  Trade_Currency_Decimals
  Trade_Order_LimitPrice
  Trade_Amount
  Block_Slot
  Trade_PriceInUSD
  Block_Height
  Transaction_Fee
  Transaction_FeeInUSD
  Trade_Price
  Instruction_InternalSeqNumber
  Trade_Side_Amount
  Trade_AmountInUSD
  Instruction_ExternalSeqNumber
  Transaction_Index
  Instruction_Index
  Trade_Currency_EditionNonce
  Trade_Side_AmountInUSD
  Trade_Index
}

"""Order by"""
input Solana_DEXTradeByToken_Ordering {
  """Select a field to sort descending"""
  descending: Solana_DEXTradeByToken_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String

  """Select a field to sort ascending"""
  ascending: Solana_DEXTradeByToken_EnumFields
}

"""Listed names of string fields in a cube"""
enum Solana_DEXTradeByToken_StringFields {
  Trade_Order_Mint
  Trade_Currency_Symbol
  Trade_Account_Address
  Trade_Side_Order_Mint
  ChainId
  Trade_Currency_ProgramAddress
  Trade_Currency_CollectionAddress
  Trade_Side_Currency_CollectionAddress
  Trade_Side_Order_Owner
  Trade_Order_Account
  Instruction_Program_Name
  Trade_Side_AmountInUSD
  Transaction_Signature
  Block_Slot
  Transaction_Fee
  Transaction_FeeInUSD
  Block_Height
  Trade_Side_Account_Address
  Trade_Side_Currency_Symbol
  Transaction_FeePayer
  Trade_Account_Token_Owner
  Trade_Side_Amount
  Block_ParentHash
  Instruction_Program_Json
  Trade_Side_Account_Token_Owner
  Trade_Side_Currency_Key
  Trade_Side_Currency_TokenStandard
  Trade_Dex_ProgramAddress
  Trade_Side_Order_OrderId
  Trade_Currency_Name
  Trade_Currency_UpdateAuthority
  Trade_Order_OrderId
  Trade_Dex_ProtocolName
  Trade_Amount
  Block_Date
  Trade_AmountInUSD
  Trade_Currency_Uri
  Transaction_Signer
  Trade_Side_Currency_MetadataAddress
  Trade_Order_LimitAmount
  Trade_Side_Currency_Name
  Trade_Order_LimitPrice
  Trade_Side_Order_LimitPrice
  Trade_Side_Currency_Uri
  Instruction_Program_Method
  Trade_Currency_MetadataAddress
  Block_ParentSlot
  Trade_Side_Order_Account
  Trade_Dex_ProtocolFamily
  Trade_Currency_MintAddress
  Trade_Side_Order_Payer
  Trade_Side_Currency_ProgramAddress
  Instruction_Program_Address
  Trade_Order_Payer
  Trade_Currency_TokenStandard
  Block_Hash
  Trade_Side_Order_LimitAmount
  Transaction_Result_ErrorMessage
  Trade_Market_MarketAddress
  Trade_Side_Currency_UpdateAuthority
  Trade_Order_Owner
  Trade_Currency_Key
  Trade_Side_Currency_MintAddress
}

"""Listed names of comparable fields in a cube"""
enum Solana_Instruction_CompareFields {
  Instruction_Program_Parsed
  Instruction_TokenBalanceUpdatesCount
  Instruction_ExternalSeqNumber
  Instruction_Depth
  Transaction_Fee
  Transaction_Result_Success
  Instruction_Index
  Instruction_InternalSeqNumber
  Transaction_FeeInUSD
  Block_ParentSlot
  Block_Date
  Transaction_Index
  Block_Time
  Block_Slot
  Instruction_BalanceUpdatesCount
  Block_Height
  Instruction_CallerIndex
}

"""Instructions in Solana Blockchain"""
type Solana_Instruction_Cube {
  """Block fields"""
  Block: Solana_Instruction_Fields_Block

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Instruction fields"""
  Instruction: Solana_Instruction_Fields_Instruction

  """Transaction fields"""
  Transaction: Solana_Instruction_Fields_Transaction

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: Solana_Instruction_StringFields!

    """Side2 argument"""
    side2: Solana_Instruction_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: Solana_Instruction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """First argument for Contingency coefficient between two arguments"""
    of: Solana_Instruction_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: Solana_Instruction_NumFields
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Solana_Instruction_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Solana_Instruction_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [Solana_Instruction_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: Solana_Instruction_NumFields

    """Second argument for Covariance between two arguments"""
    with: Solana_Instruction_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Solana_Instruction_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Solana_Instruction_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Solana_Instruction_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Solana_Instruction_NumFields
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: Solana_Instruction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: Solana_Instruction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: Solana_Instruction_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """Argument for Kurtosis for a set of values"""
    of: Solana_Instruction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: Solana_Instruction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: Solana_Instruction_NumFields!
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Argument for quantile"""
    of: Solana_Instruction_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: Solana_Instruction_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: Solana_Instruction_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: Solana_Instruction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """Argument for Standard deviation of the values"""
    of: Solana_Instruction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: Solana_Instruction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: Solana_Instruction_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Solana_Instruction_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Solana_Instruction_NumFields
  ): Float

  """Count unique records"""
  uniq(
    """Uniq values of the field"""
    of: [Solana_Instruction_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum Solana_Instruction_EnumFields {
  Instruction_AncestorIndexes
  Block_Date
  Transaction_Signature
  Instruction_Program_Name
  Transaction_Fee
  Instruction_Program_Parsed
  Block_Height
  Instruction_CallPath
  Instruction_TokenBalanceUpdatesCount
  Transaction_Index
  Instruction_Accounts
  Instruction_Data
  Transaction_FeePayer
  Block_Hash
  Instruction_Program_AccountNames
  Instruction_Program_Arguments
  Block_ParentSlot
  Transaction_Signer
  Block_Slot
  Instruction_InternalSeqNumber
  Block_ParentHash
  Instruction_Depth
  Instruction_Program_Json
  Transaction_Result_Success
  Instruction_Index
  Instruction_ExternalSeqNumber
  Block_Time
  Instruction_Program_Address
  Instruction_Logs
  ChainId
  Instruction_Program_Method
  Transaction_Result_ErrorMessage
  Instruction_BalanceUpdatesCount
  Transaction_FeeInUSD
  Instruction_CallerIndex
}

"""Block fields"""
type Solana_Instruction_Fields_Block {
  """Date value"""
  Date(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields
  ): String

  """Height value"""
  Height(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentSlot value"""
  ParentSlot(
    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter
  ): String

  """Slot value"""
  Slot(
    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime
}

"""Instruction fields"""
type Solana_Instruction_Fields_Instruction {
  """Accounts value"""
  Accounts(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_Instruction_Fields_Instruction_Accounts_Select_Instruction_Accounts
  ): [Solana_Instruction_Fields_Instruction_Instruction_Accounts]

  """AncestorIndexes value"""
  AncestorIndexes(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_Instruction_Fields_Instruction_AncestorIndexes_Select_Instruction_AncestorIndexes
  ): [Int]

  """BalanceUpdatesCount value"""
  BalanceUpdatesCount(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """CallPath value"""
  CallPath(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_Instruction_Fields_Instruction_CallPath_Select_Instruction_CallPath

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields
  ): [Int]

  """CallerIndex value"""
  CallerIndex(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Data value"""
  Data(
    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter
  ): String

  """Depth value"""
  Depth(
    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter
  ): Int

  """ExternalSeqNumber value"""
  ExternalSeqNumber(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Index value"""
  Index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields
  ): Int

  """InternalSeqNumber value"""
  InternalSeqNumber(
    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter
  ): Int

  """Logs value"""
  Logs(
    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_Instruction_Fields_Instruction_Logs_Select_Instruction_Logs

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields
  ): [String]

  """Program fields"""
  Program: Solana_Instruction_Fields_Instruction_Program

  """TokenBalanceUpdatesCount value"""
  TokenBalanceUpdatesCount(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Selector for Instruction_Accounts"""
input Solana_Instruction_Fields_Instruction_Accounts_Select_FieldSelector {
  """Select value for Token"""
  Token: Solana_Instruction_Fields_Instruction_Accounts_Select_FieldSelector_FieldSelector

  """Select value for Address"""
  Address: OLAP_String

  """Select value for IsWritable"""
  IsWritable: Boolean
}

"""Selector for Instruction_Accounts_Token"""
input Solana_Instruction_Fields_Instruction_Accounts_Select_FieldSelector_FieldSelector {
  """Select value for Mint"""
  Mint: OLAP_String

  """Select value for Owner"""
  Owner: OLAP_String

  """Select value for ProgramId"""
  ProgramId: OLAP_String
}

"""Array of Instruction_Accounts includes or excludes provided value"""
input Solana_Instruction_Fields_Instruction_Accounts_Select_Instruction_Accounts {
  """Does not End with this element"""
  notEndsWith: [Solana_Instruction_Fields_Instruction_Accounts_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Solana_Instruction_Fields_Instruction_Accounts_Select_FieldSelector]

  """Excludes this element"""
  excludes: [Solana_Instruction_Fields_Instruction_Accounts_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [Solana_Instruction_Fields_Instruction_Accounts_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [Solana_Instruction_Fields_Instruction_Accounts_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Solana_Instruction_Fields_Instruction_Accounts_Select_FieldSelector]
}

"""
Array of Instruction_AncestorIndexes includes or excludes provided value
"""
input Solana_Instruction_Fields_Instruction_AncestorIndexes_Select_Instruction_AncestorIndexes {
  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]
}

"""Array of Instruction_CallPath includes or excludes provided value"""
input Solana_Instruction_Fields_Instruction_CallPath_Select_Instruction_CallPath {
  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer
}

"""Instruction_Accounts fields"""
type Solana_Instruction_Fields_Instruction_Instruction_Accounts {
  Address: String
  IsWritable: Boolean
  Token: Solana_Instruction_Fields_Instruction_Instruction_Accounts_Token
}

"""Instruction_Accounts_Token fields"""
type Solana_Instruction_Fields_Instruction_Instruction_Accounts_Token {
  Mint: String
  Owner: String
  ProgramId: String
}

"""Array of Instruction_Logs includes or excludes provided value"""
input Solana_Instruction_Fields_Instruction_Logs_Select_Instruction_Logs {
  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]
}

"""Program fields"""
type Solana_Instruction_Fields_Instruction_Program {
  """AccountNames value"""
  AccountNames(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_Instruction_Fields_Instruction_Program_AccountNames_Select_Instruction_Program_AccountNames
  ): [String]

  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Arguments value"""
  Arguments(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_Instruction_Fields_Instruction_Program_Arguments_Select_Instruction_Program_Arguments
  ): [Solana_Instruction_Fields_Instruction_Program_Instruction_Program_Arguments]

  """Json value"""
  Json(
    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter
  ): String

  """Method value"""
  Method(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields
  ): String

  """Parsed value"""
  Parsed(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields
  ): Boolean
}

"""
Array of Instruction_Program_AccountNames includes or excludes provided value
"""
input Solana_Instruction_Fields_Instruction_Program_AccountNames_Select_Instruction_Program_AccountNames {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]
}

"""Selector for Instruction_Program_Arguments"""
input Solana_Instruction_Fields_Instruction_Program_Arguments_Select_FieldSelector {
  """Select value for Value"""
  Value: Solana_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String
}

"""
Array of Instruction_Program_Arguments includes or excludes provided value
"""
input Solana_Instruction_Fields_Instruction_Program_Arguments_Select_Instruction_Program_Arguments {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Solana_Instruction_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Excludes this element"""
  excludes: [Solana_Instruction_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [Solana_Instruction_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [Solana_Instruction_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Solana_Instruction_Fields_Instruction_Program_Arguments_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Solana_Instruction_Fields_Instruction_Program_Arguments_Select_FieldSelector]
}

"""Instruction_Program_Arguments fields"""
type Solana_Instruction_Fields_Instruction_Program_Instruction_Program_Arguments {
  Name: String
  Type: String
  Value: Solana_ABI_Value_Union
}

"""Transaction fields"""
type Solana_Instruction_Fields_Transaction {
  """Fee value"""
  Fee(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields
  ): String

  """FeePayer value"""
  FeePayer(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter
  ): Int

  """Result fields"""
  Result: Solana_Instruction_Fields_Transaction_Result

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Signer value"""
  Signer(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Result fields"""
type Solana_Instruction_Fields_Transaction_Result {
  """ErrorMessage value"""
  ErrorMessage(
    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Solana_Instruction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Instruction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Instruction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

input Solana_Instruction_Filter {
  """Select by Transaction"""
  Transaction: Solana_Instruction_Input_Transaction_InputType

  """String value"""
  ChainId: OLAP_String

  """Any combination ( as OR ) of supplied conditions"""
  any: [Solana_Instruction_FilterAny!]

  """Select by Block"""
  Block: Solana_Instruction_Input_Block_InputType

  """Select by Instruction"""
  Instruction: Solana_Instruction_Input_Instruction_InputType
}

input Solana_Instruction_FilterAny {
  """Select by Transaction"""
  Transaction: Solana_Instruction_Input_Transaction_InputType

  """String value"""
  ChainId: OLAP_String

  """Select by Block"""
  Block: Solana_Instruction_Input_Block_InputType

  """Select by Instruction"""
  Instruction: Solana_Instruction_Input_Instruction_InputType
}

"""Select by Block"""
input Solana_Instruction_Input_Block_InputType {
  Time: OLAP_DateTime
  Hash: OLAP_String
  ParentHash: OLAP_String
  Height: OLAP_BigInteger
  ParentSlot: OLAP_BigInteger
  Date: OLAP_Date
  Slot: OLAP_BigInteger
}

"""Selector for Instruction_Accounts"""
input Solana_Instruction_Input_Instruction_Accounts_Input_FieldSelector {
  """Select value for IsWritable"""
  IsWritable: Boolean

  """Select value for Token"""
  Token: Solana_Instruction_Input_Instruction_Accounts_Input_FieldSelector_FieldSelector

  """Select value for Address"""
  Address: OLAP_String
}

"""Selector for Instruction_Accounts_Token"""
input Solana_Instruction_Input_Instruction_Accounts_Input_FieldSelector_FieldSelector {
  """Select value for Owner"""
  Owner: OLAP_String

  """Select value for ProgramId"""
  ProgramId: OLAP_String

  """Select value for Mint"""
  Mint: OLAP_String
}

"""Array of Instruction_Accounts includes or excludes provided value"""
input Solana_Instruction_Input_Instruction_Accounts_Input_Instruction_Accounts {
  """Excludes this element"""
  excludes: [Solana_Instruction_Input_Instruction_Accounts_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [Solana_Instruction_Input_Instruction_Accounts_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [Solana_Instruction_Input_Instruction_Accounts_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Solana_Instruction_Input_Instruction_Accounts_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Solana_Instruction_Input_Instruction_Accounts_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Solana_Instruction_Input_Instruction_Accounts_Input_FieldSelector]
}

"""
Array of Instruction_AncestorIndexes includes or excludes provided value
"""
input Solana_Instruction_Input_Instruction_AncestorIndexes_Input_Instruction_AncestorIndexes {
  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]
}

"""Array of Instruction_CallPath includes or excludes provided value"""
input Solana_Instruction_Input_Instruction_CallPath_Input_Instruction_CallPath {
  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer
}

"""Select by Instruction"""
input Solana_Instruction_Input_Instruction_InputType {
  Logs: Solana_Instruction_Input_Instruction_Logs_Input_Instruction_Logs
  Depth: OLAP_Integer
  AncestorIndexes: Solana_Instruction_Input_Instruction_AncestorIndexes_Input_Instruction_AncestorIndexes
  TokenBalanceUpdatesCount: OLAP_Integer
  Index: OLAP_Integer
  Accounts: Solana_Instruction_Input_Instruction_Accounts_Input_Instruction_Accounts
  ExternalSeqNumber: OLAP_Integer
  Program: Solana_Instruction_Input_Instruction_Program_InputType
  CallerIndex: OLAP_Integer
  BalanceUpdatesCount: OLAP_Integer
  Data: OLAP_String
  InternalSeqNumber: OLAP_Integer
  CallPath: Solana_Instruction_Input_Instruction_CallPath_Input_Instruction_CallPath
}

"""Array of Instruction_Logs includes or excludes provided value"""
input Solana_Instruction_Input_Instruction_Logs_Input_Instruction_Logs {
  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]
}

"""
Array of Instruction_Program_AccountNames includes or excludes provided value
"""
input Solana_Instruction_Input_Instruction_Program_AccountNames_Input_Instruction_Program_AccountNames {
  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]
}

"""Selector for Instruction_Program_Arguments"""
input Solana_Instruction_Input_Instruction_Program_Arguments_Input_FieldSelector {
  """Select value for Value"""
  Value: Solana_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String
}

"""
Array of Instruction_Program_Arguments includes or excludes provided value
"""
input Solana_Instruction_Input_Instruction_Program_Arguments_Input_Instruction_Program_Arguments {
  """Ends with this element"""
  endsWith: [Solana_Instruction_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Solana_Instruction_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Solana_Instruction_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Solana_Instruction_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Excludes this element"""
  excludes: [Solana_Instruction_Input_Instruction_Program_Arguments_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [Solana_Instruction_Input_Instruction_Program_Arguments_Input_FieldSelector]
}

"""Select by Program"""
input Solana_Instruction_Input_Instruction_Program_InputType {
  Json: OLAP_String
  Method: OLAP_String
  Parsed: Boolean
  Name: OLAP_String
  Address: OLAP_String
  Arguments: Solana_Instruction_Input_Instruction_Program_Arguments_Input_Instruction_Program_Arguments
  AccountNames: Solana_Instruction_Input_Instruction_Program_AccountNames_Input_Instruction_Program_AccountNames
}

"""Select by Transaction"""
input Solana_Instruction_Input_Transaction_InputType {
  FeeInUSD: EVM_Amount_With_Decimals
  FeePayer: OLAP_String
  Result: Solana_Instruction_Input_Transaction_Result_InputType
  Index: OLAP_Integer
  Signature: OLAP_String
  Signer: OLAP_String
  Fee: EVM_Amount_With_Decimals
}

"""Select by Result"""
input Solana_Instruction_Input_Transaction_Result_InputType {
  Success: Boolean
  ErrorMessage: OLAP_String
}

"""Limit definition"""
input Solana_Instruction_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input Solana_Instruction_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [Solana_Instruction_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum Solana_Instruction_NumFields {
  Transaction_Fee
  Transaction_FeeInUSD
  Block_ParentSlot
  Block_Height
  Instruction_TokenBalanceUpdatesCount
  Instruction_Index
  Instruction_Depth
  Block_Slot
  Instruction_BalanceUpdatesCount
  Transaction_Index
  Instruction_CallerIndex
  Instruction_ExternalSeqNumber
  Instruction_InternalSeqNumber
}

"""Order by"""
input Solana_Instruction_Ordering {
  """Select a field to sort ascending"""
  ascending: Solana_Instruction_EnumFields

  """Select a field to sort descending"""
  descending: Solana_Instruction_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum Solana_Instruction_StringFields {
  Block_ParentHash
  Block_ParentSlot
  Instruction_Program_Method
  Instruction_Program_Json
  Instruction_Program_Name
  Instruction_Data
  Transaction_Fee
  Block_Height
  Transaction_Signer
  Transaction_Result_ErrorMessage
  Transaction_FeeInUSD
  Block_Date
  Transaction_FeePayer
  Block_Hash
  Instruction_Program_Address
  ChainId
  Transaction_Signature
  Block_Slot
}

"""Listed names of comparable fields in a cube"""
enum Solana_InstructionBalanceUpdate_CompareFields {
  BalanceUpdate_AmountInUSD
  BalanceUpdate_Currency_EditionNonce
  Block_Time
  Instruction_ExternalSeqNumber
  Transaction_Fee
  Block_ParentSlot
  Instruction_Program_Parsed
  BalanceUpdate_Index
  Transaction_Index
  Block_Date
  Block_Slot
  Transaction_Result_Success
  BalanceUpdate_Currency_Native
  BalanceUpdate_PreBalance
  Instruction_Index
  Transaction_FeeInUSD
  BalanceUpdate_Currency_Decimals
  BalanceUpdate_Currency_VerifiedCollection
  BalanceUpdate_PostBalance
  BalanceUpdate_Currency_PrimarySaleHappened
  BalanceUpdate_Currency_Fungible
  Instruction_InternalSeqNumber
  Block_Height
  BalanceUpdate_Currency_SellerFeeBasisPoints
  BalanceUpdate_Currency_Wrapped
  BalanceUpdate_Amount
  BalanceUpdate_Currency_IsMutable
}

"""Instruction Balance Updates in Solana Blockchain"""
type Solana_InstructionBalanceUpdate_Cube {
  """BalanceUpdate fields"""
  BalanceUpdate: Solana_InstructionBalanceUpdate_Fields_BalanceUpdate

  """Block fields"""
  Block: Solana_InstructionBalanceUpdate_Fields_Block

  """ChainId value"""
  ChainId(
    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): String

  """Instruction fields"""
  Instruction: Solana_InstructionBalanceUpdate_Fields_Instruction

  """Transaction fields"""
  Transaction: Solana_InstructionBalanceUpdate_Fields_Transaction

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Intersect with array"""
    intersectWith: [String!]

    """Side1 argument"""
    side1: Solana_InstructionBalanceUpdate_StringFields!

    """Side2 argument"""
    side2: Solana_InstructionBalanceUpdate_StringFields!
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: Solana_InstructionBalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: Solana_InstructionBalanceUpdate_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: Solana_InstructionBalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Solana_InstructionBalanceUpdate_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Solana_InstructionBalanceUpdate_NumFields
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [Solana_InstructionBalanceUpdate_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: Solana_InstructionBalanceUpdate_NumFields

    """Second argument for Covariance between two arguments"""
    with: Solana_InstructionBalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Solana_InstructionBalanceUpdate_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Solana_InstructionBalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Solana_InstructionBalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Solana_InstructionBalanceUpdate_NumFields
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: Solana_InstructionBalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: Solana_InstructionBalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: Solana_InstructionBalanceUpdate_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: Solana_InstructionBalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: Solana_InstructionBalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: Solana_InstructionBalanceUpdate_NumFields!
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Argument for quantile"""
    of: Solana_InstructionBalanceUpdate_NumFields!
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """Second argument for Rank correlation coefficient between two arguments"""
    with: Solana_InstructionBalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: Solana_InstructionBalanceUpdate_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: Solana_InstructionBalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: Solana_InstructionBalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: Solana_InstructionBalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: Solana_InstructionBalanceUpdate_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Solana_InstructionBalanceUpdate_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Solana_InstructionBalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): Float

  """Count unique records"""
  uniq(
    """Uniq values of the field"""
    of: [Solana_InstructionBalanceUpdate_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String
  ): String
}

"""Listed names of fields in a cube"""
enum Solana_InstructionBalanceUpdate_EnumFields {
  ChainId
  BalanceUpdate_Account_Token_Owner
  BalanceUpdate_Account_Address
  BalanceUpdate_Currency_VerifiedCollection
  Instruction_Program_Name
  BalanceUpdate_Currency_Symbol
  Instruction_Index
  Instruction_Program_Parsed
  Block_Height
  BalanceUpdate_Currency_Name
  BalanceUpdate_Currency_Fungible
  Transaction_FeePayer
  BalanceUpdate_Currency_Key
  BalanceUpdate_Currency_TokenCreator_Address
  Block_Slot
  Transaction_FeeInUSD
  BalanceUpdate_Currency_EditionNonce
  BalanceUpdate_Currency_Decimals
  BalanceUpdate_Currency_ProgramAddress
  Transaction_Index
  BalanceUpdate_Currency_SellerFeeBasisPoints
  BalanceUpdate_Currency_MintAddress
  Block_Time
  Instruction_CallPath
  Block_Date
  BalanceUpdate_Amount
  BalanceUpdate_Currency_TokenCreator_Share
  BalanceUpdate_Currency_PrimarySaleHappened
  Block_ParentHash
  BalanceUpdate_Currency_Wrapped
  Transaction_Signer
  BalanceUpdate_Currency_TokenStandard
  BalanceUpdate_Currency_TokenCreator_Verified
  BalanceUpdate_PreBalance
  Instruction_InternalSeqNumber
  BalanceUpdate_Currency_Native
  BalanceUpdate_Currency_MetadataAddress
  Instruction_Program_Json
  BalanceUpdate_Index
  BalanceUpdate_Currency_CollectionAddress
  Transaction_Signature
  Block_ParentSlot
  Instruction_Program_Method
  Transaction_Result_Success
  Instruction_ExternalSeqNumber
  Transaction_Result_ErrorMessage
  BalanceUpdate_PostBalance
  BalanceUpdate_Currency_Uri
  Transaction_Fee
  Block_Hash
  BalanceUpdate_Currency_UpdateAuthority
  BalanceUpdate_Currency_IsMutable
  BalanceUpdate_AmountInUSD
  Instruction_Program_Address
}

"""BalanceUpdate fields"""
type Solana_InstructionBalanceUpdate_Fields_BalanceUpdate {
  """Account fields"""
  Account: Solana_InstructionBalanceUpdate_Fields_BalanceUpdate_Account

  """Amount value"""
  Amount(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): String

  """Currency fields"""
  Currency: Solana_InstructionBalanceUpdate_Fields_BalanceUpdate_Currency

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """PostBalance value"""
  PostBalance(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """PreBalance value"""
  PreBalance(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String
}

"""Account fields"""
type Solana_InstructionBalanceUpdate_Fields_BalanceUpdate_Account {
  """Address value"""
  Address(
    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): String

  """Token fields"""
  Token: Solana_InstructionBalanceUpdate_Fields_BalanceUpdate_Account_Token
}

"""Token fields"""
type Solana_InstructionBalanceUpdate_Fields_BalanceUpdate_Account_Token {
  """Owner value"""
  Owner(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Currency fields"""
type Solana_InstructionBalanceUpdate_Fields_BalanceUpdate_Currency {
  """CollectionAddress value"""
  CollectionAddress(
    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): String

  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """EditionNonce value"""
  EditionNonce(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """IsMutable value"""
  IsMutable(
    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): Boolean

  """Key value"""
  Key(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """MetadataAddress value"""
  MetadataAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """MintAddress value"""
  MintAddress(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields
  ): String

  """Name value"""
  Name(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields
  ): String

  """Native value"""
  Native(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """PrimarySaleHappened value"""
  PrimarySaleHappened(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """ProgramAddress value"""
  ProgramAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SellerFeeBasisPoints value"""
  SellerFeeBasisPoints(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """TokenCreator fields"""
  TokenCreator: Solana_InstructionBalanceUpdate_Fields_BalanceUpdate_Currency_TokenCreator

  """TokenStandard value"""
  TokenStandard(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """UpdateAuthority value"""
  UpdateAuthority(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Uri value"""
  Uri(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """VerifiedCollection value"""
  VerifiedCollection(
    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields
  ): Boolean

  """Wrapped value"""
  Wrapped(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""TokenCreator fields"""
type Solana_InstructionBalanceUpdate_Fields_BalanceUpdate_Currency_TokenCreator {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_InstructionBalanceUpdate_Fields_BalanceUpdate_Currency_TokenCreator_Address_Select_BalanceUpdate_Currency_TokenCreator_Address
  ): [String]

  """Share value"""
  Share(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_InstructionBalanceUpdate_Fields_BalanceUpdate_Currency_TokenCreator_Share_Select_BalanceUpdate_Currency_TokenCreator_Share
  ): [Int]

  """Verified value"""
  Verified(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_InstructionBalanceUpdate_Fields_BalanceUpdate_Currency_TokenCreator_Verified_Select_BalanceUpdate_Currency_TokenCreator_Verified
  ): [Boolean]
}

"""
Array of BalanceUpdate_Currency_TokenCreator_Address includes or excludes provided value
"""
input Solana_InstructionBalanceUpdate_Fields_BalanceUpdate_Currency_TokenCreator_Address_Select_BalanceUpdate_Currency_TokenCreator_Address {
  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer
}

"""
Array of BalanceUpdate_Currency_TokenCreator_Share includes or excludes provided value
"""
input Solana_InstructionBalanceUpdate_Fields_BalanceUpdate_Currency_TokenCreator_Share_Select_BalanceUpdate_Currency_TokenCreator_Share {
  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]
}

"""
Array of BalanceUpdate_Currency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_InstructionBalanceUpdate_Fields_BalanceUpdate_Currency_TokenCreator_Verified_Select_BalanceUpdate_Currency_TokenCreator_Verified {
  """Does not start with this element"""
  notStartsWith: [Boolean]

  """Does not End with this element"""
  notEndsWith: [Boolean]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]

  """Starts with this element"""
  startsWith: [Boolean]

  """Ends with this element"""
  endsWith: [Boolean]
}

"""Block fields"""
type Solana_InstructionBalanceUpdate_Fields_Block {
  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Height value"""
  Height(
    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): String

  """ParentHash value"""
  ParentHash(
    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): String

  """ParentSlot value"""
  ParentSlot(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Slot value"""
  Slot(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime
}

"""Instruction fields"""
type Solana_InstructionBalanceUpdate_Fields_Instruction {
  """CallPath value"""
  CallPath(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_InstructionBalanceUpdate_Fields_Instruction_CallPath_Select_Instruction_CallPath
  ): [Int]

  """ExternalSeqNumber value"""
  ExternalSeqNumber(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Index value"""
  Index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields
  ): Int

  """InternalSeqNumber value"""
  InternalSeqNumber(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Program fields"""
  Program: Solana_InstructionBalanceUpdate_Fields_Instruction_Program
}

"""Array of Instruction_CallPath includes or excludes provided value"""
input Solana_InstructionBalanceUpdate_Fields_Instruction_CallPath_Select_Instruction_CallPath {
  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]
}

"""Program fields"""
type Solana_InstructionBalanceUpdate_Fields_Instruction_Program {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Json value"""
  Json(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields
  ): String

  """Method value"""
  Method(
    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Transaction fields"""
type Solana_InstructionBalanceUpdate_Fields_Transaction {
  """Fee value"""
  Fee(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeePayer value"""
  FeePayer(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields
  ): String

  """Index value"""
  Index(
    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter
  ): Int

  """Result fields"""
  Result: Solana_InstructionBalanceUpdate_Fields_Transaction_Result

  """Signature value"""
  Signature(
    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields
  ): String

  """Signer value"""
  Signer(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Result fields"""
type Solana_InstructionBalanceUpdate_Fields_Transaction_Result {
  """ErrorMessage value"""
  ErrorMessage(
    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Return value when the argument is minimum"""
    minimum: Solana_InstructionBalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_InstructionBalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_InstructionBalanceUpdate_CompareFields
  ): Boolean
}

input Solana_InstructionBalanceUpdate_Filter {
  """Select by Transaction"""
  Transaction: Solana_InstructionBalanceUpdate_Input_Transaction_InputType

  """Select by BalanceUpdate"""
  BalanceUpdate: Solana_InstructionBalanceUpdate_Input_BalanceUpdate_InputType

  """Select by Instruction"""
  Instruction: Solana_InstructionBalanceUpdate_Input_Instruction_InputType

  """Select by Block"""
  Block: Solana_InstructionBalanceUpdate_Input_Block_InputType

  """String value"""
  ChainId: OLAP_String

  """Any combination ( as OR ) of supplied conditions"""
  any: [Solana_InstructionBalanceUpdate_FilterAny!]
}

input Solana_InstructionBalanceUpdate_FilterAny {
  """String value"""
  ChainId: OLAP_String

  """Select by Transaction"""
  Transaction: Solana_InstructionBalanceUpdate_Input_Transaction_InputType

  """Select by BalanceUpdate"""
  BalanceUpdate: Solana_InstructionBalanceUpdate_Input_BalanceUpdate_InputType

  """Select by Instruction"""
  Instruction: Solana_InstructionBalanceUpdate_Input_Instruction_InputType

  """Select by Block"""
  Block: Solana_InstructionBalanceUpdate_Input_Block_InputType
}

"""Select by Account"""
input Solana_InstructionBalanceUpdate_Input_BalanceUpdate_Account_InputType {
  Token: Solana_InstructionBalanceUpdate_Input_BalanceUpdate_Account_Token_InputType
  Address: OLAP_String
}

"""Select by Token"""
input Solana_InstructionBalanceUpdate_Input_BalanceUpdate_Account_Token_InputType {
  Owner: OLAP_String
}

"""Select by Currency"""
input Solana_InstructionBalanceUpdate_Input_BalanceUpdate_Currency_InputType {
  Name: OLAP_String
  ProgramAddress: OLAP_String
  IsMutable: Boolean
  MetadataAddress: OLAP_String
  CollectionAddress: OLAP_String
  Key: OLAP_String
  Fungible: Boolean
  Decimals: OLAP_Integer
  TokenCreator: Solana_InstructionBalanceUpdate_Input_BalanceUpdate_Currency_TokenCreator_InputType
  MintAddress: OLAP_String
  Symbol: OLAP_String
  TokenStandard: OLAP_String
  Uri: OLAP_String
  VerifiedCollection: Boolean
  Wrapped: Boolean
  PrimarySaleHappened: Boolean
  SellerFeeBasisPoints: OLAP_Integer
  EditionNonce: OLAP_Integer
  UpdateAuthority: OLAP_String
  Native: Boolean
}

"""
Array of BalanceUpdate_Currency_TokenCreator_Address includes or excludes provided value
"""
input Solana_InstructionBalanceUpdate_Input_BalanceUpdate_Currency_TokenCreator_Address_Input_BalanceUpdate_Currency_TokenCreator_Address {
  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]
}

"""Select by TokenCreator"""
input Solana_InstructionBalanceUpdate_Input_BalanceUpdate_Currency_TokenCreator_InputType {
  Address: Solana_InstructionBalanceUpdate_Input_BalanceUpdate_Currency_TokenCreator_Address_Input_BalanceUpdate_Currency_TokenCreator_Address
  Share: Solana_InstructionBalanceUpdate_Input_BalanceUpdate_Currency_TokenCreator_Share_Input_BalanceUpdate_Currency_TokenCreator_Share
  Verified: Solana_InstructionBalanceUpdate_Input_BalanceUpdate_Currency_TokenCreator_Verified_Input_BalanceUpdate_Currency_TokenCreator_Verified
}

"""
Array of BalanceUpdate_Currency_TokenCreator_Share includes or excludes provided value
"""
input Solana_InstructionBalanceUpdate_Input_BalanceUpdate_Currency_TokenCreator_Share_Input_BalanceUpdate_Currency_TokenCreator_Share {
  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]
}

"""
Array of BalanceUpdate_Currency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_InstructionBalanceUpdate_Input_BalanceUpdate_Currency_TokenCreator_Verified_Input_BalanceUpdate_Currency_TokenCreator_Verified {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]

  """Starts with this element"""
  startsWith: [Boolean]

  """Ends with this element"""
  endsWith: [Boolean]

  """Does not start with this element"""
  notStartsWith: [Boolean]

  """Does not End with this element"""
  notEndsWith: [Boolean]
}

"""Select by BalanceUpdate"""
input Solana_InstructionBalanceUpdate_Input_BalanceUpdate_InputType {
  PostBalance: OLAP_BigInteger
  PreBalance: OLAP_BigInteger
  Currency: Solana_InstructionBalanceUpdate_Input_BalanceUpdate_Currency_InputType
  Account: Solana_InstructionBalanceUpdate_Input_BalanceUpdate_Account_InputType
  Amount: EVM_Amount_With_Decimals
  AmountInUSD: EVM_Amount_With_Decimals
  Index: OLAP_Integer
}

"""Select by Block"""
input Solana_InstructionBalanceUpdate_Input_Block_InputType {
  Height: OLAP_BigInteger
  ParentSlot: OLAP_BigInteger
  Date: OLAP_Date
  ParentHash: OLAP_String
  Hash: OLAP_String
  Time: OLAP_DateTime
  Slot: OLAP_BigInteger
}

"""Array of Instruction_CallPath includes or excludes provided value"""
input Solana_InstructionBalanceUpdate_Input_Instruction_CallPath_Input_Instruction_CallPath {
  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer
}

"""Select by Instruction"""
input Solana_InstructionBalanceUpdate_Input_Instruction_InputType {
  ExternalSeqNumber: OLAP_Integer
  CallPath: Solana_InstructionBalanceUpdate_Input_Instruction_CallPath_Input_Instruction_CallPath
  Program: Solana_InstructionBalanceUpdate_Input_Instruction_Program_InputType
  InternalSeqNumber: OLAP_Integer
  Index: OLAP_Integer
}

"""Select by Program"""
input Solana_InstructionBalanceUpdate_Input_Instruction_Program_InputType {
  Json: OLAP_String
  Parsed: Boolean
  Address: OLAP_String
  Method: OLAP_String
  Name: OLAP_String
}

"""Select by Transaction"""
input Solana_InstructionBalanceUpdate_Input_Transaction_InputType {
  Signer: OLAP_String
  Fee: EVM_Amount_With_Decimals
  FeeInUSD: EVM_Amount_With_Decimals
  FeePayer: OLAP_String
  Result: Solana_InstructionBalanceUpdate_Input_Transaction_Result_InputType
  Index: OLAP_Integer
  Signature: OLAP_String
}

"""Select by Result"""
input Solana_InstructionBalanceUpdate_Input_Transaction_Result_InputType {
  Success: Boolean
  ErrorMessage: OLAP_String
}

"""Limit definition"""
input Solana_InstructionBalanceUpdate_Limit {
  """Offset of results"""
  offset: Int = 0

  """Max count in results"""
  count: Int = 0
}

"""LimitBy definition"""
input Solana_InstructionBalanceUpdate_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [Solana_InstructionBalanceUpdate_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum Solana_InstructionBalanceUpdate_NumFields {
  BalanceUpdate_Currency_SellerFeeBasisPoints
  BalanceUpdate_PreBalance
  BalanceUpdate_Index
  Transaction_FeeInUSD
  BalanceUpdate_PostBalance
  Block_Height
  BalanceUpdate_Currency_Decimals
  Instruction_InternalSeqNumber
  BalanceUpdate_AmountInUSD
  Instruction_ExternalSeqNumber
  Block_Slot
  Transaction_Index
  BalanceUpdate_Amount
  Transaction_Fee
  Block_ParentSlot
  Instruction_Index
  BalanceUpdate_Currency_EditionNonce
}

"""Order by"""
input Solana_InstructionBalanceUpdate_Ordering {
  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String

  """Select a field to sort ascending"""
  ascending: Solana_InstructionBalanceUpdate_EnumFields

  """Select a field to sort descending"""
  descending: Solana_InstructionBalanceUpdate_EnumFields
}

"""Listed names of string fields in a cube"""
enum Solana_InstructionBalanceUpdate_StringFields {
  Transaction_Result_ErrorMessage
  BalanceUpdate_Currency_Name
  BalanceUpdate_Amount
  BalanceUpdate_Currency_MetadataAddress
  BalanceUpdate_Currency_Key
  Instruction_Program_Method
  Block_Slot
  BalanceUpdate_Currency_MintAddress
  BalanceUpdate_Account_Address
  Instruction_Program_Json
  Block_ParentHash
  Block_Date
  Transaction_Signature
  ChainId
  BalanceUpdate_AmountInUSD
  BalanceUpdate_Currency_CollectionAddress
  BalanceUpdate_Currency_UpdateAuthority
  Transaction_FeeInUSD
  Block_Hash
  BalanceUpdate_Currency_ProgramAddress
  BalanceUpdate_Currency_Uri
  Block_Height
  Instruction_Program_Address
  Block_ParentSlot
  BalanceUpdate_PreBalance
  Instruction_Program_Name
  Transaction_FeePayer
  BalanceUpdate_PostBalance
  BalanceUpdate_Currency_Symbol
  BalanceUpdate_Account_Token_Owner
  Transaction_Signer
  BalanceUpdate_Currency_TokenStandard
  Transaction_Fee
}

"""Blockchain network selection"""
enum solana_network {
  """Solana Mainnet"""
  solana
}

"""Listed names of comparable fields in a cube"""
enum Solana_Reward_CompareFields {
  Block_Time
  Reward_Index
  Reward_Amount
  Block_Height
  Reward_PostBalance
  Reward_PostBalanceInUSD
  Block_TxCount
  Block_ParentSlot
  Block_Slot
  Reward_AmountInUSD
  Reward_CommissionInUSD
  Block_RewardsCount
  Block_Date
  Reward_Commission
}

"""Block Rewards in Solana Blockchain"""
type Solana_Reward_Cube {
  """Block fields"""
  Block: Solana_Reward_Fields_Block

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Reward fields"""
  Reward: Solana_Reward_Fields_Reward

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: Solana_Reward_StringFields!

    """Side2 argument"""
    side2: Solana_Reward_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: Solana_Reward_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Second argument for Contingency coefficient between two arguments"""
    with: Solana_Reward_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """First argument for Contingency coefficient between two arguments"""
    of: Solana_Reward_NumFields
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Solana_Reward_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Solana_Reward_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [Solana_Reward_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: Solana_Reward_NumFields

    """Second argument for Covariance between two arguments"""
    with: Solana_Reward_NumFields
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Solana_Reward_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Solana_Reward_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Solana_Reward_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Solana_Reward_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: Solana_Reward_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: Solana_Reward_NumFields!
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: Solana_Reward_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Argument for Kurtosis for a set of values"""
    of: Solana_Reward_NumFields!
  ): Float

  """Median for a set of values"""
  median(
    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: Solana_Reward_NumFields!
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """Argument for nakamoto index"""
    of: Solana_Reward_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Argument for quantile"""
    of: Solana_Reward_NumFields!
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Second argument for Rank correlation coefficient between two arguments"""
    with: Solana_Reward_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """First argument for Rank correlation coefficient between two arguments"""
    of: Solana_Reward_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: Solana_Reward_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: Solana_Reward_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Argument for sum"""
    of: Solana_Reward_NumFields!
  ): String

  """Theil index of argument"""
  theil_index(
    """Argument for Theil index"""
    of: Solana_Reward_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Solana_Reward_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Solana_Reward_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [Solana_Reward_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum Solana_Reward_EnumFields {
  Block_Hash
  Block_Time
  Reward_Index
  Reward_Amount
  Reward_Commission
  Reward_Address
  Block_RewardsCount
  Block_Slot
  Block_ParentSlot
  Reward_PostBalance
  Reward_CommissionInUSD
  Block_Date
  Reward_RewardType
  Reward_PostBalanceInUSD
  Block_ParentHash
  Block_TxCount
  Reward_AmountInUSD
  ChainId
  Block_Height
}

"""Block fields"""
type Solana_Reward_Fields_Block {
  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter
  ): String

  """Height value"""
  Height(
    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentSlot value"""
  ParentSlot(
    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """RewardsCount value"""
  RewardsCount(
    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Slot value"""
  Slot(
    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Time value"""
  Time(
    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter
  ): DateTime

  """TxCount value"""
  TxCount(
    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields
  ): Int
}

"""Reward fields"""
type Solana_Reward_Fields_Reward {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Amount value"""
  Amount(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter
  ): String

  """Commission value"""
  Commission(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields
  ): String

  """CommissionInUSD value"""
  CommissionInUSD(
    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields
  ): String

  """Index value"""
  Index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields
  ): Int

  """PostBalance value"""
  PostBalance(
    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """PostBalanceInUSD value"""
  PostBalanceInUSD(
    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields
  ): String

  """RewardType value"""
  RewardType(
    """Apply a condition to a metric calculation"""
    if: Solana_Reward_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Reward_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Reward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_Reward_Fields_Reward_RewardType_Select_Reward_RewardType
  ): Solana_Reward_Fields_Reward_Reward_RewardType_Output
}

"""Enumeration for Reward_RewardType"""
enum Solana_Reward_Fields_Reward_Reward_RewardType_Output {
  """Reward_RewardType Voting"""
  Voting

  """Reward_RewardType Unspecified"""
  Unspecified

  """Reward_RewardType Fee"""
  Fee

  """Reward_RewardType Rent"""
  Rent

  """Reward_RewardType Staking"""
  Staking
}

"""Select filters for Reward_RewardType"""
input Solana_Reward_Fields_Reward_RewardType_Select_Reward_RewardType {
  """Exact match"""
  is: Solana_Reward_Fields_Reward_RewardType_Select_Reward_RewardType_Input

  """Not this"""
  not: Solana_Reward_Fields_Reward_RewardType_Select_Reward_RewardType_Input

  """One of the values"""
  in: [Solana_Reward_Fields_Reward_RewardType_Select_Reward_RewardType_Input!]

  """Not one of the values"""
  notIn: [Solana_Reward_Fields_Reward_RewardType_Select_Reward_RewardType_Input!]
}

"""Enumeration for Reward_RewardType"""
enum Solana_Reward_Fields_Reward_RewardType_Select_Reward_RewardType_Input {
  """Reward_RewardType Unspecified"""
  Unspecified

  """Reward_RewardType Fee"""
  Fee

  """Reward_RewardType Rent"""
  Rent

  """Reward_RewardType Staking"""
  Staking

  """Reward_RewardType Voting"""
  Voting
}

input Solana_Reward_Filter {
  """String value"""
  ChainId: OLAP_String

  """Any combination ( as OR ) of supplied conditions"""
  any: [Solana_Reward_FilterAny!]

  """Select by Reward"""
  Reward: Solana_Reward_Input_Reward_InputType

  """Select by Block"""
  Block: Solana_Reward_Input_Block_InputType
}

input Solana_Reward_FilterAny {
  """Select by Block"""
  Block: Solana_Reward_Input_Block_InputType

  """String value"""
  ChainId: OLAP_String

  """Select by Reward"""
  Reward: Solana_Reward_Input_Reward_InputType
}

"""Select by Block"""
input Solana_Reward_Input_Block_InputType {
  Hash: OLAP_String
  ParentSlot: OLAP_BigInteger
  Time: OLAP_DateTime
  RewardsCount: OLAP_Integer
  ParentHash: OLAP_String
  Slot: OLAP_BigInteger
  Date: OLAP_Date
  Height: OLAP_BigInteger
  TxCount: OLAP_Integer
}

"""Select by Reward"""
input Solana_Reward_Input_Reward_InputType {
  RewardType: Solana_Reward_Input_Reward_RewardType_Input_Reward_RewardType
  PostBalance: EVM_Amount_With_Decimals
  PostBalanceInUSD: EVM_Amount_With_Decimals
  Index: OLAP_Integer
  CommissionInUSD: EVM_Amount_With_Decimals
  Address: OLAP_String
  Commission: EVM_Amount_With_Decimals
  Amount: EVM_Amount_With_Decimals
  AmountInUSD: EVM_Amount_With_Decimals
}

"""Select filters for Reward_RewardType"""
input Solana_Reward_Input_Reward_RewardType_Input_Reward_RewardType {
  """One of the values"""
  in: [Solana_Reward_Input_Reward_RewardType_Input_Reward_RewardType_Input!]

  """Not one of the values"""
  notIn: [Solana_Reward_Input_Reward_RewardType_Input_Reward_RewardType_Input!]

  """Exact match"""
  is: Solana_Reward_Input_Reward_RewardType_Input_Reward_RewardType_Input

  """Not this"""
  not: Solana_Reward_Input_Reward_RewardType_Input_Reward_RewardType_Input
}

"""Enumeration for Reward_RewardType"""
enum Solana_Reward_Input_Reward_RewardType_Input_Reward_RewardType_Input {
  """Reward_RewardType Rent"""
  Rent

  """Reward_RewardType Staking"""
  Staking

  """Reward_RewardType Voting"""
  Voting

  """Reward_RewardType Unspecified"""
  Unspecified

  """Reward_RewardType Fee"""
  Fee
}

"""Limit definition"""
input Solana_Reward_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input Solana_Reward_LimitBy {
  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [Solana_Reward_EnumFields!]

  """Max count in results"""
  count: Int = 0
}

"""Listed names of numeric fields in a cube"""
enum Solana_Reward_NumFields {
  Reward_CommissionInUSD
  Block_Slot
  Block_TxCount
  Reward_Commission
  Reward_PostBalance
  Reward_Index
  Reward_PostBalanceInUSD
  Reward_Amount
  Reward_AmountInUSD
  Block_ParentSlot
  Block_Height
  Block_RewardsCount
}

"""Order by"""
input Solana_Reward_Ordering {
  """Select a field to sort ascending"""
  ascending: Solana_Reward_EnumFields

  """Select a field to sort descending"""
  descending: Solana_Reward_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum Solana_Reward_StringFields {
  Block_ParentHash
  Block_Height
  Reward_PostBalance
  Reward_CommissionInUSD
  Block_Slot
  Reward_AmountInUSD
  Reward_Address
  Block_ParentSlot
  Block_Hash
  Reward_PostBalanceInUSD
  Reward_Amount
  ChainId
  Block_Date
  Reward_Commission
}

"""Solana type blockchain schema"""
type Solana_Subscription {
  BalanceUpdates(
    """Conditions on query to filter results"""
    where: Solana_BalanceUpdate_Filter

    """Field ordering"""
    orderBy: [Solana_BalanceUpdate_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_BalanceUpdate_LimitBy

    """Response limits"""
    limit: Solana_BalanceUpdate_Limit
  ): [Solana_BalanceUpdate_Cube!]
  Blocks(
    """Conditions on query to filter results"""
    where: Solana_Block_Filter

    """Field ordering"""
    orderBy: [Solana_Block_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_Block_LimitBy

    """Response limits"""
    limit: Solana_Block_Limit
  ): [Solana_Block_Cube!]
  DEXOrders(
    """Conditions on query to filter results"""
    where: Solana_DEXOrder_Filter

    """Field ordering"""
    orderBy: [Solana_DEXOrder_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_DEXOrder_LimitBy

    """Response limits"""
    limit: Solana_DEXOrder_Limit
  ): [Solana_DEXOrder_Cube!]
  DEXTradeByTokens(
    """Field ordering"""
    orderBy: [Solana_DEXTradeByToken_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_DEXTradeByToken_LimitBy

    """Response limits"""
    limit: Solana_DEXTradeByToken_Limit

    """Conditions on query to filter results"""
    where: Solana_DEXTradeByToken_Filter
  ): [Solana_DEXTradeByToken_Cube!]
  DEXTrades(
    """Response limits"""
    limit: Solana_DEXTrade_Limit

    """Conditions on query to filter results"""
    where: Solana_DEXTrade_Filter

    """Field ordering"""
    orderBy: [Solana_DEXTrade_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_DEXTrade_LimitBy
  ): [Solana_DEXTrade_Cube!]
  InstructionBalanceUpdates(
    """Conditions on query to filter results"""
    where: Solana_InstructionBalanceUpdate_Filter

    """Field ordering"""
    orderBy: [Solana_InstructionBalanceUpdate_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_InstructionBalanceUpdate_LimitBy

    """Response limits"""
    limit: Solana_InstructionBalanceUpdate_Limit
  ): [Solana_InstructionBalanceUpdate_Cube!]
  Instructions(
    """Response limits by specified field"""
    limitBy: Solana_Instruction_LimitBy

    """Response limits"""
    limit: Solana_Instruction_Limit

    """Conditions on query to filter results"""
    where: Solana_Instruction_Filter

    """Field ordering"""
    orderBy: [Solana_Instruction_Ordering!]
  ): [Solana_Instruction_Cube!]
  Rewards(
    """Field ordering"""
    orderBy: [Solana_Reward_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_Reward_LimitBy

    """Response limits"""
    limit: Solana_Reward_Limit

    """Conditions on query to filter results"""
    where: Solana_Reward_Filter
  ): [Solana_Reward_Cube!]
  Transactions(
    """Conditions on query to filter results"""
    where: Solana_Transaction_Filter

    """Field ordering"""
    orderBy: [Solana_Transaction_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_Transaction_LimitBy

    """Response limits"""
    limit: Solana_Transaction_Limit
  ): [Solana_Transaction_Cube!]
  Transfers(
    """Conditions on query to filter results"""
    where: Solana_Transfer_Filter

    """Field ordering"""
    orderBy: [Solana_Transfer_Ordering!]

    """Response limits by specified field"""
    limitBy: Solana_Transfer_LimitBy

    """Response limits"""
    limit: Solana_Transfer_Limit
  ): [Solana_Transfer_Cube!]
}

"""Listed names of comparable fields in a cube"""
enum Solana_Transaction_CompareFields {
  Block_Height
  Transaction_Fee
  Transaction_TokenBalanceUpdatesCount
  Transaction_Index
  Block_Time
  Transaction_FeeInUSD
  Transaction_BalanceUpdatesCount
  Block_Slot
  Block_Date
  Block_ParentSlot
  Transaction_InstructionsCount
  Transaction_Result_Success
}

"""Transactions in Solana Blockchain"""
type Solana_Transaction_Cube {
  """Block fields"""
  Block: Solana_Transaction_Fields_Block

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Transaction fields"""
  Transaction: Solana_Transaction_Fields_Transaction

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """Side1 argument"""
    side1: Solana_Transaction_StringFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side2 argument"""
    side2: Solana_Transaction_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: Solana_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: Solana_Transaction_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: Solana_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Solana_Transaction_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Solana_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """Count distinct values of the field"""
    distinct: [Solana_Transaction_EnumFields!]

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: Solana_Transaction_NumFields

    """Second argument for Covariance between two arguments"""
    with: Solana_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Solana_Transaction_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Solana_Transaction_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Solana_Transaction_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Solana_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: Solana_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: Solana_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """Argument for gini"""
    of: Solana_Transaction_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: Solana_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: Solana_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: Solana_Transaction_NumFields!
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Argument for quantile"""
    of: Solana_Transaction_NumFields!
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: Solana_Transaction_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: Solana_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: Solana_Transaction_NumFields!
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: Solana_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: Solana_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: Solana_Transaction_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Solana_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Solana_Transaction_NumFields
  ): Float

  """Count unique records"""
  uniq(
    """Uniq values of the field"""
    of: [Solana_Transaction_EnumFields!]!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum Solana_Transaction_EnumFields {
  Block_Height
  Block_Date
  Transaction_TokenBalanceUpdatesCount
  Transaction_Index
  Transaction_BalanceUpdatesCount
  Transaction_Result_ErrorMessage
  Block_Slot
  Transaction_Signer
  Transaction_Result_Success
  Transaction_Signature
  Block_Hash
  Transaction_InstructionsCount
  Transaction_FeePayer
  ChainId
  Transaction_RecentBlockhash
  Block_ParentHash
  Transaction_Accounts
  Block_ParentSlot
  Transaction_Fee
  Transaction_FeeInUSD
  Block_Time
}

"""Block fields"""
type Solana_Transaction_Fields_Block {
  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter
  ): String

  """Height value"""
  Height(
    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields
  ): String

  """ParentHash value"""
  ParentHash(
    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields
  ): String

  """ParentSlot value"""
  ParentSlot(
    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Slot value"""
  Slot(
    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime
}

"""Transaction fields"""
type Solana_Transaction_Fields_Transaction {
  """Accounts value"""
  Accounts(
    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_Transaction_Fields_Transaction_Accounts_Select_Transaction_Accounts
  ): [Solana_Transaction_Fields_Transaction_Transaction_Accounts]

  """BalanceUpdatesCount value"""
  BalanceUpdatesCount(
    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Fee value"""
  Fee(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields
  ): String

  """FeePayer value"""
  FeePayer(
    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields
  ): String

  """Index value"""
  Index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields
  ): Int

  """InstructionsCount value"""
  InstructionsCount(
    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """RecentBlockhash value"""
  RecentBlockhash(
    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter
  ): String

  """Result fields"""
  Result: Solana_Transaction_Fields_Transaction_Result

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Signer value"""
  Signer(
    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """TokenBalanceUpdatesCount value"""
  TokenBalanceUpdatesCount(
    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter
  ): Int
}

"""Selector for Transaction_Accounts"""
input Solana_Transaction_Fields_Transaction_Accounts_Select_FieldSelector {
  """Select value for Address"""
  Address: OLAP_String

  """Select value for IsWritable"""
  IsWritable: Boolean

  """Select value for Token"""
  Token: Solana_Transaction_Fields_Transaction_Accounts_Select_FieldSelector_FieldSelector
}

"""Selector for Transaction_Accounts_Token"""
input Solana_Transaction_Fields_Transaction_Accounts_Select_FieldSelector_FieldSelector {
  """Select value for Mint"""
  Mint: OLAP_String

  """Select value for Owner"""
  Owner: OLAP_String

  """Select value for ProgramId"""
  ProgramId: OLAP_String
}

"""Array of Transaction_Accounts includes or excludes provided value"""
input Solana_Transaction_Fields_Transaction_Accounts_Select_Transaction_Accounts {
  """Excludes this element"""
  excludes: [Solana_Transaction_Fields_Transaction_Accounts_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [Solana_Transaction_Fields_Transaction_Accounts_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [Solana_Transaction_Fields_Transaction_Accounts_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Solana_Transaction_Fields_Transaction_Accounts_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Solana_Transaction_Fields_Transaction_Accounts_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Solana_Transaction_Fields_Transaction_Accounts_Select_FieldSelector]
}

"""Result fields"""
type Solana_Transaction_Fields_Transaction_Result {
  """ErrorMessage value"""
  ErrorMessage(
    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Return value when the argument is minimum"""
    minimum: Solana_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transaction_CompareFields
  ): Boolean
}

"""Transaction_Accounts fields"""
type Solana_Transaction_Fields_Transaction_Transaction_Accounts {
  Address: String
  IsWritable: Boolean
  Token: Solana_Transaction_Fields_Transaction_Transaction_Accounts_Token
}

"""Transaction_Accounts_Token fields"""
type Solana_Transaction_Fields_Transaction_Transaction_Accounts_Token {
  Mint: String
  Owner: String
  ProgramId: String
}

input Solana_Transaction_Filter {
  """Any combination ( as OR ) of supplied conditions"""
  any: [Solana_Transaction_FilterAny!]

  """Select by Block"""
  Block: Solana_Transaction_Input_Block_InputType

  """Select by Transaction"""
  Transaction: Solana_Transaction_Input_Transaction_InputType

  """String value"""
  ChainId: OLAP_String
}

input Solana_Transaction_FilterAny {
  """Select by Block"""
  Block: Solana_Transaction_Input_Block_InputType

  """Select by Transaction"""
  Transaction: Solana_Transaction_Input_Transaction_InputType

  """String value"""
  ChainId: OLAP_String
}

"""Select by Block"""
input Solana_Transaction_Input_Block_InputType {
  Date: OLAP_Date
  Height: OLAP_BigInteger
  Time: OLAP_DateTime
  ParentSlot: OLAP_BigInteger
  ParentHash: OLAP_String
  Hash: OLAP_String
  Slot: OLAP_BigInteger
}

"""Selector for Transaction_Accounts"""
input Solana_Transaction_Input_Transaction_Accounts_Input_FieldSelector {
  """Select value for Address"""
  Address: OLAP_String

  """Select value for IsWritable"""
  IsWritable: Boolean

  """Select value for Token"""
  Token: Solana_Transaction_Input_Transaction_Accounts_Input_FieldSelector_FieldSelector
}

"""Selector for Transaction_Accounts_Token"""
input Solana_Transaction_Input_Transaction_Accounts_Input_FieldSelector_FieldSelector {
  """Select value for ProgramId"""
  ProgramId: OLAP_String

  """Select value for Mint"""
  Mint: OLAP_String

  """Select value for Owner"""
  Owner: OLAP_String
}

"""Array of Transaction_Accounts includes or excludes provided value"""
input Solana_Transaction_Input_Transaction_Accounts_Input_Transaction_Accounts {
  """Excludes this element"""
  excludes: [Solana_Transaction_Input_Transaction_Accounts_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [Solana_Transaction_Input_Transaction_Accounts_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [Solana_Transaction_Input_Transaction_Accounts_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Solana_Transaction_Input_Transaction_Accounts_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Solana_Transaction_Input_Transaction_Accounts_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Solana_Transaction_Input_Transaction_Accounts_Input_FieldSelector]
}

"""Select by Transaction"""
input Solana_Transaction_Input_Transaction_InputType {
  RecentBlockhash: OLAP_String
  Index: OLAP_Integer
  Signer: OLAP_String
  BalanceUpdatesCount: OLAP_Integer
  Accounts: Solana_Transaction_Input_Transaction_Accounts_Input_Transaction_Accounts
  FeeInUSD: EVM_Amount_With_Decimals
  FeePayer: OLAP_String
  Result: Solana_Transaction_Input_Transaction_Result_InputType
  InstructionsCount: OLAP_Integer
  Signature: OLAP_String
  Fee: EVM_Amount_With_Decimals
  TokenBalanceUpdatesCount: OLAP_Integer
}

"""Select by Result"""
input Solana_Transaction_Input_Transaction_Result_InputType {
  ErrorMessage: OLAP_String
  Success: Boolean
}

"""Limit definition"""
input Solana_Transaction_Limit {
  """Offset of results"""
  offset: Int = 0

  """Max count in results"""
  count: Int = 0
}

"""LimitBy definition"""
input Solana_Transaction_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [Solana_Transaction_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum Solana_Transaction_NumFields {
  Transaction_BalanceUpdatesCount
  Block_Slot
  Block_ParentSlot
  Transaction_TokenBalanceUpdatesCount
  Transaction_Index
  Transaction_FeeInUSD
  Transaction_Fee
  Transaction_InstructionsCount
  Block_Height
}

"""Order by"""
input Solana_Transaction_Ordering {
  """Select a field to sort ascending"""
  ascending: Solana_Transaction_EnumFields

  """Select a field to sort descending"""
  descending: Solana_Transaction_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum Solana_Transaction_StringFields {
  Block_Date
  Transaction_Result_ErrorMessage
  Transaction_RecentBlockhash
  Block_ParentHash
  Transaction_Signature
  Transaction_FeeInUSD
  Transaction_FeePayer
  Block_Slot
  Block_ParentSlot
  Transaction_Fee
  Transaction_Signer
  ChainId
  Block_Hash
  Block_Height
}

"""Listed names of comparable fields in a cube"""
enum Solana_Transfer_CompareFields {
  Instruction_ExternalSeqNumber
  Transfer_Currency_VerifiedCollection
  Transfer_Currency_PrimarySaleHappened
  Transfer_AmountInUSD
  Transfer_Currency_Fungible
  Transaction_Index
  Transfer_Index
  Instruction_Index
  Block_Height
  Transfer_Currency_EditionNonce
  Transaction_Result_Success
  Transfer_Currency_Wrapped
  Block_Time
  Block_ParentSlot
  Instruction_Program_Parsed
  Block_Date
  Transaction_Fee
  Transfer_Currency_Decimals
  Instruction_InternalSeqNumber
  Transfer_Currency_SellerFeeBasisPoints
  Transfer_Amount
  Transaction_FeeInUSD
  Transfer_Currency_IsMutable
  Transfer_Currency_Native
  Block_Slot
}

"""Transfers in Solana Blockchain"""
type Solana_Transfer_Cube {
  """Block fields"""
  Block: Solana_Transfer_Fields_Block

  """ChainId value"""
  ChainId(
    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields
  ): String

  """Instruction fields"""
  Instruction: Solana_Transfer_Fields_Instruction

  """Transaction fields"""
  Transaction: Solana_Transfer_Fields_Transaction

  """Transfer fields"""
  Transfer: Solana_Transfer_Fields_Transfer

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """Intersect with array"""
    intersectWith: [String!]

    """Side1 argument"""
    side1: Solana_Transfer_StringFields!

    """Side2 argument"""
    side2: Solana_Transfer_StringFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: Solana_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: Solana_Transfer_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: Solana_Transfer_NumFields
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Solana_Transfer_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Solana_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Count distinct values of the field"""
    distinct: [Solana_Transfer_EnumFields!]
  ): String

  """Covariance between two arguments"""
  covariance(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: Solana_Transfer_NumFields

    """Second argument for Covariance between two arguments"""
    with: Solana_Transfer_NumFields
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Solana_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Solana_Transfer_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Solana_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Solana_Transfer_NumFields
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: Solana_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: Solana_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: Solana_Transfer_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: Solana_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: Solana_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: Solana_Transfer_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: Solana_Transfer_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """Second argument for Rank correlation coefficient between two arguments"""
    with: Solana_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """First argument for Rank correlation coefficient between two arguments"""
    of: Solana_Transfer_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: Solana_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: Solana_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: Solana_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: Solana_Transfer_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Solana_Transfer_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Solana_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [Solana_Transfer_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum Solana_Transfer_EnumFields {
  Transfer_Currency_MintAddress
  Instruction_Program_Name
  Transfer_Currency_ProgramAddress
  Transfer_Currency_IsMutable
  Transfer_Currency_Symbol
  Transaction_Result_ErrorMessage
  Transaction_Fee
  Transfer_Sender_Address
  Instruction_CallPath
  Transaction_FeeInUSD
  Transfer_Currency_TokenStandard
  Transfer_Currency_Key
  Transfer_Currency_PrimarySaleHappened
  Transfer_Currency_Fungible
  Transfer_Currency_TokenCreator_Share
  Transfer_Currency_Native
  Block_ParentSlot
  Transaction_FeePayer
  ChainId
  Block_Time
  Transfer_Currency_Decimals
  Transfer_Currency_EditionNonce
  Transfer_Currency_UpdateAuthority
  Block_Height
  Transfer_Currency_SellerFeeBasisPoints
  Block_Slot
  Transaction_Signature
  Instruction_Program_Json
  Transfer_Authority_Address
  Transfer_Currency_Uri
  Block_Hash
  Transaction_Signer
  Instruction_InternalSeqNumber
  Transaction_Result_Success
  Instruction_Index
  Transfer_Currency_CollectionAddress
  Transfer_Currency_TokenCreator_Verified
  Instruction_Program_Address
  Instruction_Program_Parsed
  Transfer_Currency_Name
  Transaction_Index
  Transfer_AmountInUSD
  Instruction_ExternalSeqNumber
  Transfer_Index
  Block_ParentHash
  Transfer_Amount
  Transfer_Sender_Token_Owner
  Transfer_Currency_MetadataAddress
  Transfer_Receiver_Address
  Instruction_Program_Method
  Transfer_Receiver_Token_Owner
  Transfer_Currency_TokenCreator_Address
  Block_Date
  Transfer_Currency_Wrapped
  Transfer_Currency_VerifiedCollection
}

"""Block fields"""
type Solana_Transfer_Fields_Block {
  """Date value"""
  Date(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields
  ): String

  """Height value"""
  Height(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields
  ): String

  """ParentHash value"""
  ParentHash(
    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter
  ): String

  """ParentSlot value"""
  ParentSlot(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Slot value"""
  Slot(
    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter
  ): String

  """Time value"""
  Time(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields
  ): DateTime
}

"""Instruction fields"""
type Solana_Transfer_Fields_Instruction {
  """CallPath value"""
  CallPath(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_Transfer_Fields_Instruction_CallPath_Select_Instruction_CallPath
  ): [Int]

  """ExternalSeqNumber value"""
  ExternalSeqNumber(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields
  ): Int

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """InternalSeqNumber value"""
  InternalSeqNumber(
    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields
  ): Int

  """Program fields"""
  Program: Solana_Transfer_Fields_Instruction_Program
}

"""Array of Instruction_CallPath includes or excludes provided value"""
input Solana_Transfer_Fields_Instruction_CallPath_Select_Instruction_CallPath {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]
}

"""Program fields"""
type Solana_Transfer_Fields_Instruction_Program {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Json value"""
  Json(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Method value"""
  Method(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Transaction fields"""
type Solana_Transfer_Fields_Transaction {
  """Fee value"""
  Fee(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeePayer value"""
  FeePayer(
    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Result fields"""
  Result: Solana_Transfer_Fields_Transaction_Result

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Signer value"""
  Signer(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Result fields"""
type Solana_Transfer_Fields_Transaction_Result {
  """ErrorMessage value"""
  ErrorMessage(
    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Transfer fields"""
type Solana_Transfer_Fields_Transfer {
  """Amount value"""
  Amount(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Authority fields"""
  Authority: Solana_Transfer_Fields_Transfer_Authority

  """Currency fields"""
  Currency: Solana_Transfer_Fields_Transfer_Currency

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Receiver fields"""
  Receiver: Solana_Transfer_Fields_Transfer_Receiver

  """Sender fields"""
  Sender: Solana_Transfer_Fields_Transfer_Sender
}

"""Authority fields"""
type Solana_Transfer_Fields_Transfer_Authority {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Currency fields"""
type Solana_Transfer_Fields_Transfer_Currency {
  """CollectionAddress value"""
  CollectionAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """EditionNonce value"""
  EditionNonce(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Fungible value"""
  Fungible(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields
  ): Boolean

  """IsMutable value"""
  IsMutable(
    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields
  ): Boolean

  """Key value"""
  Key(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """MetadataAddress value"""
  MetadataAddress(
    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter
  ): String

  """MintAddress value"""
  MintAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Native value"""
  Native(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """PrimarySaleHappened value"""
  PrimarySaleHappened(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """ProgramAddress value"""
  ProgramAddress(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SellerFeeBasisPoints value"""
  SellerFeeBasisPoints(
    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields
  ): Int

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """TokenCreator fields"""
  TokenCreator: Solana_Transfer_Fields_Transfer_Currency_TokenCreator

  """TokenStandard value"""
  TokenStandard(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """UpdateAuthority value"""
  UpdateAuthority(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields
  ): String

  """Uri value"""
  Uri(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """VerifiedCollection value"""
  VerifiedCollection(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Wrapped value"""
  Wrapped(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields
  ): Boolean
}

"""TokenCreator fields"""
type Solana_Transfer_Fields_Transfer_Currency_TokenCreator {
  """Address value"""
  Address(
    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_Transfer_Fields_Transfer_Currency_TokenCreator_Address_Select_Transfer_Currency_TokenCreator_Address

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields
  ): [String]

  """Share value"""
  Share(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_Transfer_Fields_Transfer_Currency_TokenCreator_Share_Select_Transfer_Currency_TokenCreator_Share

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields
  ): [Int]

  """Verified value"""
  Verified(
    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Solana_Transfer_Fields_Transfer_Currency_TokenCreator_Verified_Select_Transfer_Currency_TokenCreator_Verified

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields
  ): [Boolean]
}

"""
Array of Transfer_Currency_TokenCreator_Address includes or excludes provided value
"""
input Solana_Transfer_Fields_Transfer_Currency_TokenCreator_Address_Select_Transfer_Currency_TokenCreator_Address {
  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]
}

"""
Array of Transfer_Currency_TokenCreator_Share includes or excludes provided value
"""
input Solana_Transfer_Fields_Transfer_Currency_TokenCreator_Share_Select_Transfer_Currency_TokenCreator_Share {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]
}

"""
Array of Transfer_Currency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_Transfer_Fields_Transfer_Currency_TokenCreator_Verified_Select_Transfer_Currency_TokenCreator_Verified {
  """Does not End with this element"""
  notEndsWith: [Boolean]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]

  """Starts with this element"""
  startsWith: [Boolean]

  """Ends with this element"""
  endsWith: [Boolean]

  """Does not start with this element"""
  notStartsWith: [Boolean]
}

"""Receiver fields"""
type Solana_Transfer_Fields_Transfer_Receiver {
  """Address value"""
  Address(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields
  ): String

  """Token fields"""
  Token: Solana_Transfer_Fields_Transfer_Receiver_Token
}

"""Token fields"""
type Solana_Transfer_Fields_Transfer_Receiver_Token {
  """Owner value"""
  Owner(
    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields
  ): String
}

"""Sender fields"""
type Solana_Transfer_Fields_Transfer_Sender {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Token fields"""
  Token: Solana_Transfer_Fields_Transfer_Sender_Token
}

"""Token fields"""
type Solana_Transfer_Fields_Transfer_Sender_Token {
  """Owner value"""
  Owner(
    """Apply a condition to a metric calculation"""
    if: Solana_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Solana_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Solana_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

input Solana_Transfer_Filter {
  """Select by Block"""
  Block: Solana_Transfer_Input_Block_InputType

  """String value"""
  ChainId: OLAP_String

  """Select by Transfer"""
  Transfer: Solana_Transfer_Input_Transfer_InputType

  """Select by Transaction"""
  Transaction: Solana_Transfer_Input_Transaction_InputType

  """Any combination ( as OR ) of supplied conditions"""
  any: [Solana_Transfer_FilterAny!]

  """Select by Instruction"""
  Instruction: Solana_Transfer_Input_Instruction_InputType
}

input Solana_Transfer_FilterAny {
  """Select by Transaction"""
  Transaction: Solana_Transfer_Input_Transaction_InputType

  """Select by Instruction"""
  Instruction: Solana_Transfer_Input_Instruction_InputType

  """Select by Block"""
  Block: Solana_Transfer_Input_Block_InputType

  """String value"""
  ChainId: OLAP_String

  """Select by Transfer"""
  Transfer: Solana_Transfer_Input_Transfer_InputType
}

"""Select by Block"""
input Solana_Transfer_Input_Block_InputType {
  Date: OLAP_Date
  ParentSlot: OLAP_BigInteger
  Height: OLAP_BigInteger
  Time: OLAP_DateTime
  Hash: OLAP_String
  ParentHash: OLAP_String
  Slot: OLAP_BigInteger
}

"""Array of Instruction_CallPath includes or excludes provided value"""
input Solana_Transfer_Input_Instruction_CallPath_Input_Instruction_CallPath {
  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer
}

"""Select by Instruction"""
input Solana_Transfer_Input_Instruction_InputType {
  CallPath: Solana_Transfer_Input_Instruction_CallPath_Input_Instruction_CallPath
  ExternalSeqNumber: OLAP_Integer
  Program: Solana_Transfer_Input_Instruction_Program_InputType
  Index: OLAP_Integer
  InternalSeqNumber: OLAP_Integer
}

"""Select by Program"""
input Solana_Transfer_Input_Instruction_Program_InputType {
  Address: OLAP_String
  Json: OLAP_String
  Name: OLAP_String
  Method: OLAP_String
  Parsed: Boolean
}

"""Select by Transaction"""
input Solana_Transfer_Input_Transaction_InputType {
  Signer: OLAP_String
  FeePayer: OLAP_String
  Signature: OLAP_String
  Fee: EVM_Amount_With_Decimals
  FeeInUSD: EVM_Amount_With_Decimals
  Index: OLAP_Integer
  Result: Solana_Transfer_Input_Transaction_Result_InputType
}

"""Select by Result"""
input Solana_Transfer_Input_Transaction_Result_InputType {
  ErrorMessage: OLAP_String
  Success: Boolean
}

"""Select by Authority"""
input Solana_Transfer_Input_Transfer_Authority_InputType {
  Address: OLAP_String
}

"""Select by Currency"""
input Solana_Transfer_Input_Transfer_Currency_InputType {
  VerifiedCollection: Boolean
  ProgramAddress: OLAP_String
  CollectionAddress: OLAP_String
  Decimals: OLAP_Integer
  Fungible: Boolean
  Key: OLAP_String
  TokenStandard: OLAP_String
  MintAddress: OLAP_String
  Symbol: OLAP_String
  Native: Boolean
  MetadataAddress: OLAP_String
  Name: OLAP_String
  Wrapped: Boolean
  IsMutable: Boolean
  Uri: OLAP_String
  PrimarySaleHappened: Boolean
  UpdateAuthority: OLAP_String
  EditionNonce: OLAP_Integer
  SellerFeeBasisPoints: OLAP_Integer
  TokenCreator: Solana_Transfer_Input_Transfer_Currency_TokenCreator_InputType
}

"""
Array of Transfer_Currency_TokenCreator_Address includes or excludes provided value
"""
input Solana_Transfer_Input_Transfer_Currency_TokenCreator_Address_Input_Transfer_Currency_TokenCreator_Address {
  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]
}

"""Select by TokenCreator"""
input Solana_Transfer_Input_Transfer_Currency_TokenCreator_InputType {
  Verified: Solana_Transfer_Input_Transfer_Currency_TokenCreator_Verified_Input_Transfer_Currency_TokenCreator_Verified
  Address: Solana_Transfer_Input_Transfer_Currency_TokenCreator_Address_Input_Transfer_Currency_TokenCreator_Address
  Share: Solana_Transfer_Input_Transfer_Currency_TokenCreator_Share_Input_Transfer_Currency_TokenCreator_Share
}

"""
Array of Transfer_Currency_TokenCreator_Share includes or excludes provided value
"""
input Solana_Transfer_Input_Transfer_Currency_TokenCreator_Share_Input_Transfer_Currency_TokenCreator_Share {
  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]
}

"""
Array of Transfer_Currency_TokenCreator_Verified includes or excludes provided value
"""
input Solana_Transfer_Input_Transfer_Currency_TokenCreator_Verified_Input_Transfer_Currency_TokenCreator_Verified {
  """Includes this element"""
  includes: [Boolean]

  """Excludes this element"""
  excludes: [Boolean]

  """Starts with this element"""
  startsWith: [Boolean]

  """Ends with this element"""
  endsWith: [Boolean]

  """Does not start with this element"""
  notStartsWith: [Boolean]

  """Does not End with this element"""
  notEndsWith: [Boolean]

  """Length of the array"""
  length: OLAP_Integer
}

"""Select by Transfer"""
input Solana_Transfer_Input_Transfer_InputType {
  Amount: EVM_Amount_With_Decimals
  AmountInUSD: EVM_Amount_With_Decimals
  Sender: Solana_Transfer_Input_Transfer_Sender_InputType
  Receiver: Solana_Transfer_Input_Transfer_Receiver_InputType
  Authority: Solana_Transfer_Input_Transfer_Authority_InputType
  Currency: Solana_Transfer_Input_Transfer_Currency_InputType
  Index: OLAP_Integer
}

"""Select by Receiver"""
input Solana_Transfer_Input_Transfer_Receiver_InputType {
  Address: OLAP_String
  Token: Solana_Transfer_Input_Transfer_Receiver_Token_InputType
}

"""Select by Token"""
input Solana_Transfer_Input_Transfer_Receiver_Token_InputType {
  Owner: OLAP_String
}

"""Select by Sender"""
input Solana_Transfer_Input_Transfer_Sender_InputType {
  Address: OLAP_String
  Token: Solana_Transfer_Input_Transfer_Sender_Token_InputType
}

"""Select by Token"""
input Solana_Transfer_Input_Transfer_Sender_Token_InputType {
  Owner: OLAP_String
}

"""Limit definition"""
input Solana_Transfer_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input Solana_Transfer_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [Solana_Transfer_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum Solana_Transfer_NumFields {
  Block_Slot
  Instruction_ExternalSeqNumber
  Transfer_Amount
  Transfer_Index
  Transfer_Currency_SellerFeeBasisPoints
  Block_ParentSlot
  Transaction_FeeInUSD
  Instruction_InternalSeqNumber
  Transaction_Fee
  Transfer_AmountInUSD
  Instruction_Index
  Block_Height
  Transfer_Currency_Decimals
  Transfer_Currency_EditionNonce
  Transaction_Index
}

"""Order by"""
input Solana_Transfer_Ordering {
  """Select a field to sort ascending"""
  ascending: Solana_Transfer_EnumFields

  """Select a field to sort descending"""
  descending: Solana_Transfer_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum Solana_Transfer_StringFields {
  Block_Slot
  Transaction_Result_ErrorMessage
  Transfer_Currency_Uri
  Block_Date
  Transaction_FeePayer
  Instruction_Program_Method
  Transaction_Signature
  Transfer_Currency_MetadataAddress
  Transfer_Authority_Address
  Transfer_Currency_ProgramAddress
  Transfer_Amount
  Transfer_Sender_Token_Owner
  Transfer_Currency_TokenStandard
  Transaction_Fee
  Transfer_Currency_MintAddress
  Block_Hash
  Transfer_Sender_Address
  ChainId
  Transfer_Currency_Symbol
  Instruction_Program_Name
  Block_Height
  Transfer_Currency_Name
  Transfer_AmountInUSD
  Block_ParentHash
  Transfer_Receiver_Address
  Transfer_Currency_Key
  Block_ParentSlot
  Instruction_Program_Address
  Transaction_Signer
  Transfer_Receiver_Token_Owner
  Instruction_Program_Json
  Transfer_Currency_UpdateAuthority
  Transaction_FeeInUSD
  Transfer_Currency_CollectionAddress
}

"""Select value of attributes"""
input Solana_ValueUnionSelector {
  """Selector of BigInteger values"""
  BigInteger: OLAP_BigInteger

  """Selector of Address values"""
  Address: OLAP_String

  """Selector of String values"""
  String: OLAP_String

  """Selector of Boolean values"""
  Boolean: Boolean

  """Selector of Unsigned Integer values"""
  UnsignedInteger: OLAP_Integer

  """Selector of Signed Integer values"""
  SignedInteger: OLAP_Integer

  """Selector of Float values"""
  Float: OLAP_Float
}

"""Tron type blockchain schema"""
type Tron {
  BalanceUpdates(
    """Conditions on query to filter results"""
    where: Tron_BalanceUpdate_Filter

    """Field ordering"""
    orderBy: [Tron_BalanceUpdate_Ordering!]

    """Response limits by specified field"""
    limitBy: Tron_BalanceUpdate_LimitBy

    """Response limits"""
    limit: Tron_BalanceUpdate_Limit
  ): [Tron_BalanceUpdate_Cube!]
  Blocks(
    """Conditions on query to filter results"""
    where: Tron_Block_Filter

    """Field ordering"""
    orderBy: [Tron_Block_Ordering!]

    """Response limits by specified field"""
    limitBy: Tron_Block_LimitBy

    """Response limits"""
    limit: Tron_Block_Limit
  ): [Tron_Block_Cube!]
  Calls(
    """Field ordering"""
    orderBy: [Tron_Call_Ordering!]

    """Response limits by specified field"""
    limitBy: Tron_Call_LimitBy

    """Response limits"""
    limit: Tron_Call_Limit

    """Conditions on query to filter results"""
    where: Tron_Call_Filter
  ): [Tron_Call_Cube!]
  DEXTradeByTokens(
    """Response limits"""
    limit: Tron_DEXTradeByToken_Limit

    """Conditions on query to filter results"""
    where: Tron_DEXTradeByToken_Filter

    """Field ordering"""
    orderBy: [Tron_DEXTradeByToken_Ordering!]

    """Response limits by specified field"""
    limitBy: Tron_DEXTradeByToken_LimitBy
  ): [Tron_DEXTradeByToken_Cube!]
  DEXTrades(
    """Conditions on query to filter results"""
    where: Tron_DEXTrade_Filter

    """Field ordering"""
    orderBy: [Tron_DEXTrade_Ordering!]

    """Response limits by specified field"""
    limitBy: Tron_DEXTrade_LimitBy

    """Response limits"""
    limit: Tron_DEXTrade_Limit
  ): [Tron_DEXTrade_Cube!]
  Events(
    """Conditions on query to filter results"""
    where: Tron_Event_Filter

    """Field ordering"""
    orderBy: [Tron_Event_Ordering!]

    """Response limits by specified field"""
    limitBy: Tron_Event_LimitBy

    """Response limits"""
    limit: Tron_Event_Limit
  ): [Tron_Event_Cube!]
  Transactions(
    """Conditions on query to filter results"""
    where: Tron_Transaction_Filter

    """Field ordering"""
    orderBy: [Tron_Transaction_Ordering!]

    """Response limits by specified field"""
    limitBy: Tron_Transaction_LimitBy

    """Response limits"""
    limit: Tron_Transaction_Limit
  ): [Tron_Transaction_Cube!]
  Transfers(
    """Field ordering"""
    orderBy: [Tron_Transfer_Ordering!]

    """Response limits by specified field"""
    limitBy: Tron_Transfer_LimitBy

    """Response limits"""
    limit: Tron_Transfer_Limit

    """Conditions on query to filter results"""
    where: Tron_Transfer_Filter
  ): [Tron_Transfer_Cube!]
}

"""Listed names of comparable fields in a cube"""
enum Tron_BalanceUpdate_CompareFields {
  Transaction_Time
  Call_Index
  BalanceUpdate_Id
  Block_Time
  Block_Number
  Block_ParentNumber
  Currency_Decimals
  Currency_Delegated
  Currency_HasURI
  Block_Version
  BalanceUpdate_AmountInUSD
  Log_LogAfterCallIndex
  Block_Date
  Currency_Native
  BalanceUpdate_Amount
  Currency_Fungible
  Transfer_Index
  Transaction_Index
  Block_TransactionsCount
  Log_Index
}

"""Update of balances for tokens and native currency in Tron Blockchain"""
type Tron_BalanceUpdate_Cube {
  """BalanceUpdate fields"""
  BalanceUpdate: Tron_BalanceUpdate_Fields_BalanceUpdate

  """Block fields"""
  Block: Tron_BalanceUpdate_Fields_Block

  """Call fields"""
  Call: Tron_BalanceUpdate_Fields_Call

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Contract fields"""
  Contract: Tron_BalanceUpdate_Fields_Contract

  """Currency fields"""
  Currency: Tron_BalanceUpdate_Fields_Currency

  """Log fields"""
  Log: Tron_BalanceUpdate_Fields_Log

  """Transaction fields"""
  Transaction: Tron_BalanceUpdate_Fields_Transaction

  """Transfer fields"""
  Transfer: Tron_BalanceUpdate_Fields_Transfer

  """Witness fields"""
  Witness: Tron_BalanceUpdate_Fields_Witness

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """Side1 argument"""
    side1: Tron_BalanceUpdate_StringFields!

    """Side2 argument"""
    side2: Tron_BalanceUpdate_StringFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: Tron_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """Second argument for Contingency coefficient between two arguments"""
    with: Tron_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: Tron_BalanceUpdate_NumFields
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Tron_BalanceUpdate_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Tron_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [Tron_BalanceUpdate_EnumFields!]
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: Tron_BalanceUpdate_NumFields

    """Second argument for Covariance between two arguments"""
    with: Tron_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Tron_BalanceUpdate_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Tron_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Tron_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Tron_BalanceUpdate_NumFields
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: Tron_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: Tron_BalanceUpdate_NumFields!
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: Tron_BalanceUpdate_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: Tron_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: Tron_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: Tron_BalanceUpdate_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: Tron_BalanceUpdate_NumFields!
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: Tron_BalanceUpdate_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: Tron_BalanceUpdate_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: Tron_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: Tron_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: Tron_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: Tron_BalanceUpdate_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Tron_BalanceUpdate_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Tron_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [Tron_BalanceUpdate_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum Tron_BalanceUpdate_EnumFields {
  Currency_Symbol
  Currency_Fungible
  Block_Date
  Currency_AssetId
  Block_TxTrieRoot
  Log_LogAfterCallIndex
  Block_ParentHash
  Currency_Native
  Block_ParentNumber
  Block_Hash
  Currency_Delegated
  BalanceUpdate_Type
  BalanceUpdate_Id
  Currency_Name
  BalanceUpdate_Address
  Transfer_Index
  Block_AccountStateRoot
  Transaction_Index
  Log_Index
  Witness_Signature
  Block_Version
  Block_TransactionsCount
  Currency_ProtocolName
  Contract_Address
  Contract_Type
  BalanceUpdate_Amount
  Currency_Decimals
  Currency_DelegatedTo
  Currency_HasURI
  Call_CallPath
  Currency_SmartContract
  Call_Index
  ChainId
  Witness_Address
  BalanceUpdate_AmountInUSD
  Transaction_Hash
  Transaction_Time
  Block_Time
  Block_Number
  BalanceUpdate_URI
}

"""BalanceUpdate fields"""
type Tron_BalanceUpdate_Fields_BalanceUpdate {
  """Address value"""
  Address(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields
  ): String

  """Amount value"""
  Amount(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Id value"""
  Id(
    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """URI value"""
  URI(
    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields
  ): String
}

"""Block fields"""
type Tron_BalanceUpdate_Fields_Block {
  """AccountStateRoot value"""
  AccountStateRoot(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields
  ): String

  """ParentNumber value"""
  ParentNumber(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Time value"""
  Time(
    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields
  ): DateTime

  """TransactionsCount value"""
  TransactionsCount(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """TxTrieRoot value"""
  TxTrieRoot(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields
  ): String

  """Version value"""
  Version(
    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields
  ): Int
}

"""Call fields"""
type Tron_BalanceUpdate_Fields_Call {
  """CallPath value"""
  CallPath(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_BalanceUpdate_Fields_Call_CallPath_Select_Call_CallPath
  ): [Int]

  """Index value"""
  Index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields
  ): Int
}

"""Array of Call_CallPath includes or excludes provided value"""
input Tron_BalanceUpdate_Fields_Call_CallPath_Select_Call_CallPath {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]
}

"""Contract fields"""
type Tron_BalanceUpdate_Fields_Contract {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Currency fields"""
type Tron_BalanceUpdate_Fields_Currency {
  """AssetId value"""
  AssetId(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Decimals value"""
  Decimals(
    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter
  ): Int

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Fungible value"""
  Fungible(
    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields
  ): Boolean

  """HasURI value"""
  HasURI(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Native value"""
  Native(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields
  ): Boolean

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Log fields"""
type Tron_BalanceUpdate_Fields_Log {
  """Index value"""
  Index(
    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields
  ): Int

  """LogAfterCallIndex value"""
  LogAfterCallIndex(
    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields
  ): Int
}

"""Transaction fields"""
type Tron_BalanceUpdate_Fields_Transaction {
  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime
}

"""Transfer fields"""
type Tron_BalanceUpdate_Fields_Transfer {
  """Index value"""
  Index(
    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter
  ): Int
}

"""Witness fields"""
type Tron_BalanceUpdate_Fields_Witness {
  """Address value"""
  Address(
    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields
  ): String

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Tron_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

input Tron_BalanceUpdate_Filter {
  """Select by Witness"""
  Witness: Tron_BalanceUpdate_Input_Witness_InputType

  """Select by Block"""
  Block: Tron_BalanceUpdate_Input_Block_InputType

  """Select by Transaction"""
  Transaction: Tron_BalanceUpdate_Input_Transaction_InputType

  """Select by Contract"""
  Contract: Tron_BalanceUpdate_Input_Contract_InputType

  """String value"""
  ChainId: OLAP_String

  """Any combination ( as OR ) of supplied conditions"""
  any: [Tron_BalanceUpdate_FilterAny!]

  """Select by Transfer"""
  Transfer: Tron_BalanceUpdate_Input_Transfer_InputType

  """Select by Currency"""
  Currency: Tron_BalanceUpdate_Input_Currency_InputType

  """Select by BalanceUpdate"""
  BalanceUpdate: Tron_BalanceUpdate_Input_BalanceUpdate_InputType

  """Select by Call"""
  Call: Tron_BalanceUpdate_Input_Call_InputType

  """Select by Log"""
  Log: Tron_BalanceUpdate_Input_Log_InputType
}

input Tron_BalanceUpdate_FilterAny {
  """Select by Transfer"""
  Transfer: Tron_BalanceUpdate_Input_Transfer_InputType

  """Select by Log"""
  Log: Tron_BalanceUpdate_Input_Log_InputType

  """Select by Contract"""
  Contract: Tron_BalanceUpdate_Input_Contract_InputType

  """Select by Transaction"""
  Transaction: Tron_BalanceUpdate_Input_Transaction_InputType

  """Select by Currency"""
  Currency: Tron_BalanceUpdate_Input_Currency_InputType

  """String value"""
  ChainId: OLAP_String

  """Select by Block"""
  Block: Tron_BalanceUpdate_Input_Block_InputType

  """Select by Call"""
  Call: Tron_BalanceUpdate_Input_Call_InputType

  """Select by Witness"""
  Witness: Tron_BalanceUpdate_Input_Witness_InputType

  """Select by BalanceUpdate"""
  BalanceUpdate: Tron_BalanceUpdate_Input_BalanceUpdate_InputType
}

"""Select by BalanceUpdate"""
input Tron_BalanceUpdate_Input_BalanceUpdate_InputType {
  Amount: EVM_Amount_With_Decimals
  AmountInUSD: EVM_Amount_With_Decimals
  Address: OLAP_String
  Type: OLAP_String
  Id: OLAP_BigInteger
  URI: OLAP_String
}

"""Select by Block"""
input Tron_BalanceUpdate_Input_Block_InputType {
  TransactionsCount: OLAP_Integer
  ParentNumber: OLAP_BigInteger
  Version: OLAP_Integer
  TxTrieRoot: OLAP_String
  Hash: OLAP_String
  Date: OLAP_Date
  Number: OLAP_BigInteger
  Time: OLAP_DateTime
  ParentHash: OLAP_String
  AccountStateRoot: OLAP_String
}

"""Array of Call_CallPath includes or excludes provided value"""
input Tron_BalanceUpdate_Input_Call_CallPath_Input_Call_CallPath {
  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer
}

"""Select by Call"""
input Tron_BalanceUpdate_Input_Call_InputType {
  CallPath: Tron_BalanceUpdate_Input_Call_CallPath_Input_Call_CallPath
  Index: OLAP_Integer
}

"""Select by Contract"""
input Tron_BalanceUpdate_Input_Contract_InputType {
  Address: OLAP_String
  Type: OLAP_String
}

"""Select by Currency"""
input Tron_BalanceUpdate_Input_Currency_InputType {
  HasURI: Boolean
  Decimals: OLAP_Integer
  DelegatedTo: OLAP_String
  AssetId: OLAP_String
  Delegated: Boolean
  Symbol: OLAP_String
  Fungible: Boolean
  SmartContract: OLAP_String
  Native: Boolean
  Name: OLAP_String
  ProtocolName: OLAP_String
}

"""Select by Log"""
input Tron_BalanceUpdate_Input_Log_InputType {
  Index: OLAP_Integer
  LogAfterCallIndex: OLAP_Integer
}

"""Select by Transaction"""
input Tron_BalanceUpdate_Input_Transaction_InputType {
  Hash: OLAP_String
  Time: OLAP_DateTime
  Index: OLAP_Integer
}

"""Select by Transfer"""
input Tron_BalanceUpdate_Input_Transfer_InputType {
  Index: OLAP_Integer
}

"""Select by Witness"""
input Tron_BalanceUpdate_Input_Witness_InputType {
  Address: OLAP_String
  Signature: OLAP_String
}

"""Limit definition"""
input Tron_BalanceUpdate_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input Tron_BalanceUpdate_LimitBy {
  """Limit by specific field"""
  by: [Tron_BalanceUpdate_EnumFields!]

  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Listed names of numeric fields in a cube"""
enum Tron_BalanceUpdate_NumFields {
  Transfer_Index
  Currency_Decimals
  Call_Index
  BalanceUpdate_Id
  Log_Index
  Block_ParentNumber
  BalanceUpdate_Amount
  Block_TransactionsCount
  Transaction_Index
  Block_Version
  BalanceUpdate_AmountInUSD
  Log_LogAfterCallIndex
  Block_Number
}

"""Order by"""
input Tron_BalanceUpdate_Ordering {
  """Select a field to sort descending"""
  descending: Tron_BalanceUpdate_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String

  """Select a field to sort ascending"""
  ascending: Tron_BalanceUpdate_EnumFields
}

"""Listed names of string fields in a cube"""
enum Tron_BalanceUpdate_StringFields {
  Block_Date
  Contract_Type
  Block_ParentNumber
  BalanceUpdate_AmountInUSD
  Witness_Signature
  BalanceUpdate_Type
  Block_AccountStateRoot
  Block_ParentHash
  BalanceUpdate_Address
  Witness_Address
  Currency_Name
  BalanceUpdate_Amount
  Currency_AssetId
  Transaction_Hash
  Currency_SmartContract
  Block_Number
  BalanceUpdate_URI
  Currency_Symbol
  Currency_DelegatedTo
  BalanceUpdate_Id
  ChainId
  Block_TxTrieRoot
  Block_Hash
  Currency_ProtocolName
  Contract_Address
}

"""Listed names of comparable fields in a cube"""
enum Tron_Block_CompareFields {
  Block_Number
  Block_TransactionsCount
  Block_Time
  Witness_Id
  Block_Version
  Block_ParentNumber
  Block_Date
}

"""Block of transactions in Tron Blockchain"""
type Tron_Block_Cube {
  """Block fields"""
  Block: Tron_Block_Fields_Block

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Witness fields"""
  Witness: Tron_Block_Fields_Witness

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: Tron_Block_StringFields!

    """Side2 argument"""
    side2: Tron_Block_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """Argument for Average of the values"""
    of: Tron_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """First argument for Contingency coefficient between two arguments"""
    of: Tron_Block_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: Tron_Block_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Tron_Block_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Tron_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [Tron_Block_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: Tron_Block_NumFields

    """Second argument for Covariance between two arguments"""
    with: Tron_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Tron_Block_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Tron_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Tron_Block_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Tron_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: Tron_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: Tron_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """Argument for gini"""
    of: Tron_Block_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: Tron_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: Tron_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: Tron_Block_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Argument for quantile"""
    of: Tron_Block_NumFields!
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: Tron_Block_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: Tron_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: Tron_Block_NumFields!
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: Tron_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """Argument for sum"""
    of: Tron_Block_NumFields!
  ): String

  """Theil index of argument"""
  theil_index(
    """Argument for Theil index"""
    of: Tron_Block_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Tron_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Tron_Block_NumFields
  ): Float

  """Count unique records"""
  uniq(
    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [Tron_Block_EnumFields!]!
  ): String
}

"""Listed names of fields in a cube"""
enum Tron_Block_EnumFields {
  Block_AccountStateRoot
  Block_ParentNumber
  Block_Date
  Block_Hash
  Block_TransactionsCount
  Block_TxTrieRoot
  Witness_Signature
  Block_Version
  Block_Number
  ChainId
  Block_ParentHash
  Block_Time
  Witness_Id
  Witness_Address
}

"""Block fields"""
type Tron_Block_Fields_Block {
  """AccountStateRoot value"""
  AccountStateRoot(
    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentNumber value"""
  ParentNumber(
    """Return value when the argument is maximum"""
    maximum: Tron_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """TransactionsCount value"""
  TransactionsCount(
    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """TxTrieRoot value"""
  TxTrieRoot(
    """Return value when the argument is minimum"""
    minimum: Tron_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Block_CompareFields
  ): String

  """Version value"""
  Version(
    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Witness fields"""
type Tron_Block_Fields_Witness {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Id value"""
  Id(
    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Tron_Block_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

input Tron_Block_Filter {
  """Select by Witness"""
  Witness: Tron_Block_Input_Witness_InputType

  """String value"""
  ChainId: OLAP_String

  """Select by Block"""
  Block: Tron_Block_Input_Block_InputType

  """Any combination ( as OR ) of supplied conditions"""
  any: [Tron_Block_FilterAny!]
}

input Tron_Block_FilterAny {
  """Select by Block"""
  Block: Tron_Block_Input_Block_InputType

  """Select by Witness"""
  Witness: Tron_Block_Input_Witness_InputType

  """String value"""
  ChainId: OLAP_String
}

"""Select by Block"""
input Tron_Block_Input_Block_InputType {
  AccountStateRoot: OLAP_String
  Version: OLAP_Integer
  Number: OLAP_BigInteger
  TxTrieRoot: OLAP_String
  Hash: OLAP_String
  Date: OLAP_Date
  ParentHash: OLAP_String
  TransactionsCount: OLAP_Integer
  ParentNumber: OLAP_BigInteger
  Time: OLAP_DateTime
}

"""Select by Witness"""
input Tron_Block_Input_Witness_InputType {
  Id: OLAP_BigInteger
  Address: OLAP_String
  Signature: OLAP_String
}

"""Limit definition"""
input Tron_Block_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input Tron_Block_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [Tron_Block_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum Tron_Block_NumFields {
  Block_TransactionsCount
  Witness_Id
  Block_Version
  Block_ParentNumber
  Block_Number
}

"""Order by"""
input Tron_Block_Ordering {
  """Select a field to sort ascending"""
  ascending: Tron_Block_EnumFields

  """Select a field to sort descending"""
  descending: Tron_Block_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum Tron_Block_StringFields {
  Block_AccountStateRoot
  Block_Date
  Block_Number
  Block_TxTrieRoot
  Witness_Id
  Witness_Signature
  Witness_Address
  Block_ParentNumber
  ChainId
  Block_ParentHash
  Block_Hash
}

"""Listed names of comparable fields in a cube"""
enum Tron_Call_CompareFields {
  Call_CallerIndex
  Transaction_Receipt_OriginEnergyUsage
  Transaction_Receipt_EnergyPenaltyTotal
  Call_ValueInUSD
  Transaction_FeeLimit
  Call_Delegated
  Block_ParentNumber
  Transaction_FeeLimitInUSD
  Call_Gas
  Transaction_Receipt_NetFeeInUSD
  Transaction_Receipt_EnergyFee
  Call_Opcode_Code
  Transaction_Result_Success
  Call_Reverted
  Call_LogCount
  Transaction_Fee
  Block_Time
  TransactionStatus_Success
  Call_Signature_Type
  Transaction_Receipt_NetFee
  Transaction_Expiration
  Call_InternalCalls
  Call_Signature_Parsed
  Witness_Id
  Call_EnterIndex
  Block_Date
  Block_Version
  Call_Depth
  Transaction_Receipt_NetUsage
  Call_Index
  Block_TransactionsCount
  Call_Create
  Block_Number
  Call_ExitIndex
  Call_Value
  Transaction_Receipt_EnergyUsageTotal
  Transaction_FeeInUSD
  Transaction_Index
  Transaction_Time
  Call_SelfDestruct
  Call_Success
  Transaction_Timestamp
  Call_GasUsed
}

"""Smart contract calls in Tron Blockchain"""
type Tron_Call_Cube {
  """Arguments value"""
  Arguments(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_Call_Fields_Arguments_Select_Arguments
  ): [Tron_Call_Fields_Arguments]

  """Block fields"""
  Block: Tron_Call_Fields_Block

  """Call fields"""
  Call: Tron_Call_Fields_Call

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Contract fields"""
  Contract: Tron_Call_Fields_Contract

  """Returns value"""
  Returns(
    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_Call_Fields_Returns_Select_Returns

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields
  ): [Tron_Call_Fields_Returns]

  """StateChanges value"""
  StateChanges(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_Call_Fields_StateChanges_Select_StateChanges

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields
  ): [Tron_Call_Fields_StateChanges]

  """Transaction fields"""
  Transaction: Tron_Call_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: Tron_Call_Fields_TransactionStatus

  """Witness fields"""
  Witness: Tron_Call_Fields_Witness

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: Tron_Call_StringFields!

    """Side2 argument"""
    side2: Tron_Call_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """Argument for Average of the values"""
    of: Tron_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: Tron_Call_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: Tron_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Tron_Call_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Tron_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [Tron_Call_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: Tron_Call_NumFields

    """Second argument for Covariance between two arguments"""
    with: Tron_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Tron_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Tron_Call_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Tron_Call_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Tron_Call_NumFields
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: Tron_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """Argument for Entropy for a set of values"""
    of: Tron_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Gini factor of argument"""
  gini(
    """Argument for gini"""
    of: Tron_Call_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: Tron_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: Tron_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: Tron_Call_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: Tron_Call_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """First argument for Rank correlation coefficient between two arguments"""
    of: Tron_Call_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: Tron_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Skew for a set of values"""
  skew(
    """Argument for Skew for a set of values"""
    of: Tron_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """Argument for Standard deviation of the values"""
    of: Tron_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: Tron_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: Tron_Call_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Tron_Call_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Tron_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [Tron_Call_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum Tron_Call_EnumFields {
  Call_ExitIndex
  Call_Signature_SignatureHash
  Transaction_Result_Message
  Contract_TypeUrl
  Call_CallPath
  Witness_Signature
  Call_Error
  Block_Version
  Transaction_Result_Success
  TransactionStatus_FaultError
  Transaction_Receipt_NetFeeInUSD
  Call_Signature_Abi
  Transaction_Fee
  Call_Opcode_Name
  Transaction_FeePayer
  Transaction_Timestamp
  Call_Output
  Returns
  Call_Signature_Signature
  ChainId
  Call_LogCount
  Call_ValueInUSD
  Transaction_Receipt_Result
  Block_TxTrieRoot
  Call_Signature_Name
  Call_EnterIndex
  StateChanges
  Transaction_Result_Status
  Block_Hash
  Transaction_Signatures
  Transaction_FeeLimitInUSD
  Transaction_Data
  Transaction_Receipt_EnergyUsageTotal
  Call_Delegated
  Call_Signature_Parsed
  Block_Time
  Transaction_Time
  Call_Signature_Type
  Transaction_Receipt_NetFee
  Transaction_Expiration
  Call_InternalCalls
  Witness_Id
  Transaction_Index
  Block_ParentHash
  TransactionStatus_EndError
  Transaction_Receipt_OriginEnergyUsage
  Transaction_Receipt_NetUsage
  Call_Gas
  Transaction_Receipt_EnergyFee
  Call_From
  Block_TransactionsCount
  Transaction_FeeInUSD
  Call_GasUsed
  TransactionStatus_Success
  Contract_Type
  Block_ParentNumber
  Call_SelfDestruct
  Transaction_FeeLimit
  Call_Reverted
  Block_AccountStateRoot
  Witness_Address
  Call_To
  Call_CallerIndex
  Contract_Address
  Call_Input
  Transaction_Hash
  Call_Value
  Block_Date
  Transaction_Receipt_EnergyPenaltyTotal
  Call_Index
  Arguments
  Call_Depth
  Call_Success
  Call_Create
  Block_Number
  Call_Opcode_Code
}

"""Arguments fields"""
type Tron_Call_Fields_Arguments {
  Index: Int
  Name: String
  Path: [Tron_Call_Fields_Arguments_Path]
  Type: String
  Value: EVM_ABI_Value_Union
}

"""Arguments_Path fields"""
type Tron_Call_Fields_Arguments_Path {
  Index: Int
  Name: String
  Type: String
}

"""Array of Arguments includes or excludes provided value"""
input Tron_Call_Fields_Arguments_Select_Arguments {
  """Ends with this element"""
  endsWith: [Tron_Call_Fields_Arguments_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_Call_Fields_Arguments_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Tron_Call_Fields_Arguments_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_Call_Fields_Arguments_Select_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_Call_Fields_Arguments_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_Call_Fields_Arguments_Select_FieldSelector]
}

"""Selector for Arguments"""
input Tron_Call_Fields_Arguments_Select_FieldSelector {
  """Select value for Value"""
  Value: EVM_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Path"""
  Path: Tron_Call_Fields_Arguments_Select_FieldSelector_Arguments_Path
}

"""Array of Arguments_Path includes or excludes provided value"""
input Tron_Call_Fields_Arguments_Select_FieldSelector_Arguments_Path {
  """Ends with this element"""
  endsWith: [Tron_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Tron_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]
}

"""Selector for Arguments_Path"""
input Tron_Call_Fields_Arguments_Select_FieldSelector_FieldSelector {
  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer
}

"""Block fields"""
type Tron_Call_Fields_Block {
  """AccountStateRoot value"""
  AccountStateRoot(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentNumber value"""
  ParentNumber(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """TransactionsCount value"""
  TransactionsCount(
    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): Int

  """TxTrieRoot value"""
  TxTrieRoot(
    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): String

  """Version value"""
  Version(
    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields
  ): Int
}

"""Call fields"""
type Tron_Call_Fields_Call {
  """CallPath value"""
  CallPath(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_Call_Fields_Call_CallPath_Select_Call_CallPath
  ): [Int]

  """CallerIndex value"""
  CallerIndex(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Create value"""
  Create(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields
  ): Boolean

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Depth value"""
  Depth(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """EnterIndex value"""
  EnterIndex(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Error value"""
  Error(
    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields
  ): String

  """ExitIndex value"""
  ExitIndex(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields
  ): Int

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Index value"""
  Index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields
  ): Int

  """Input value"""
  Input(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """InternalCalls value"""
  InternalCalls(
    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): Int

  """LogCount value"""
  LogCount(
    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): Int

  """Opcode fields"""
  Opcode: Tron_Call_Fields_Call_Opcode

  """Output value"""
  Output(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields
  ): String

  """Reverted value"""
  Reverted(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """SelfDestruct value"""
  SelfDestruct(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature fields"""
  Signature: Tron_Call_Fields_Call_Signature

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """To value"""
  To(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """ValueInUSD value"""
  ValueInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields
  ): String
}

"""Array of Call_CallPath includes or excludes provided value"""
input Tron_Call_Fields_Call_CallPath_Select_Call_CallPath {
  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]
}

"""Opcode fields"""
type Tron_Call_Fields_Call_Opcode {
  """Code value"""
  Code(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Signature fields"""
type Tron_Call_Fields_Call_Signature {
  """Abi value"""
  Abi(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields
  ): Boolean
}

"""Contract fields"""
type Tron_Call_Fields_Contract {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields
  ): String

  """TypeUrl value"""
  TypeUrl(
    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields
  ): String
}

"""Returns fields"""
type Tron_Call_Fields_Returns {
  Index: Int
  Name: String
  Path: [Tron_Call_Fields_Returns_Path]
  Type: String
  Value: EVM_ABI_Value_Union
}

"""Returns_Path fields"""
type Tron_Call_Fields_Returns_Path {
  Index: Int
  Name: String
  Type: String
}

"""Selector for Returns"""
input Tron_Call_Fields_Returns_Select_FieldSelector {
  """Select value for Path"""
  Path: Tron_Call_Fields_Returns_Select_FieldSelector_Returns_Path

  """Select value for Value"""
  Value: EVM_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer
}

"""Selector for Returns_Path"""
input Tron_Call_Fields_Returns_Select_FieldSelector_FieldSelector {
  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer
}

"""Array of Returns_Path includes or excludes provided value"""
input Tron_Call_Fields_Returns_Select_FieldSelector_Returns_Path {
  """Does not End with this element"""
  notEndsWith: [Tron_Call_Fields_Returns_Select_FieldSelector_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_Call_Fields_Returns_Select_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_Call_Fields_Returns_Select_FieldSelector_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_Call_Fields_Returns_Select_FieldSelector_FieldSelector]

  """Ends with this element"""
  endsWith: [Tron_Call_Fields_Returns_Select_FieldSelector_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_Call_Fields_Returns_Select_FieldSelector_FieldSelector]
}

"""Array of Returns includes or excludes provided value"""
input Tron_Call_Fields_Returns_Select_Returns {
  """Starts with this element"""
  startsWith: [Tron_Call_Fields_Returns_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [Tron_Call_Fields_Returns_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_Call_Fields_Returns_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Tron_Call_Fields_Returns_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_Call_Fields_Returns_Select_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_Call_Fields_Returns_Select_FieldSelector]
}

"""StateChanges fields"""
type Tron_Call_Fields_StateChanges {
  Address: String
  ChangeAfterCallIndex: Int
  Location: String
  Value: String
}

"""Selector for StateChanges"""
input Tron_Call_Fields_StateChanges_Select_FieldSelector {
  """Select value for Address"""
  Address: OLAP_String

  """Select value for Location"""
  Location: OLAP_String

  """Select value for Value"""
  Value: OLAP_String

  """Select value for ChangeAfterCallIndex"""
  ChangeAfterCallIndex: OLAP_Integer
}

"""Array of StateChanges includes or excludes provided value"""
input Tron_Call_Fields_StateChanges_Select_StateChanges {
  """Excludes this element"""
  excludes: [Tron_Call_Fields_StateChanges_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_Call_Fields_StateChanges_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [Tron_Call_Fields_StateChanges_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_Call_Fields_StateChanges_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Tron_Call_Fields_StateChanges_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_Call_Fields_StateChanges_Select_FieldSelector]
}

"""Transaction fields"""
type Tron_Call_Fields_Transaction {
  """Data value"""
  Data(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Expiration value"""
  Expiration(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """Fee value"""
  Fee(
    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields
  ): String

  """FeeLimit value"""
  FeeLimit(
    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): String

  """FeeLimitInUSD value"""
  FeeLimitInUSD(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeePayer value"""
  FeePayer(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Receipt fields"""
  Receipt: Tron_Call_Fields_Transaction_Receipt

  """Result fields"""
  Result: Tron_Call_Fields_Transaction_Result

  """Signatures value"""
  Signatures(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_Call_Fields_Transaction_Signatures_Select_Transaction_Signatures
  ): [String]

  """Time value"""
  Time(
    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime
  ): DateTime

  """Timestamp value"""
  Timestamp(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime
}

"""Receipt fields"""
type Tron_Call_Fields_Transaction_Receipt {
  """EnergyFee value"""
  EnergyFee(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """EnergyPenaltyTotal value"""
  EnergyPenaltyTotal(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """EnergyUsageTotal value"""
  EnergyUsageTotal(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """NetFee value"""
  NetFee(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """NetFeeInUSD value"""
  NetFeeInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields
  ): String

  """NetUsage value"""
  NetUsage(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """OriginEnergyUsage value"""
  OriginEnergyUsage(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Result value"""
  Result(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields
  ): String
}

"""Result fields"""
type Tron_Call_Fields_Transaction_Result {
  """Message value"""
  Message(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Status value"""
  Status(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields
  ): Boolean
}

"""Array of Transaction_Signatures includes or excludes provided value"""
input Tron_Call_Fields_Transaction_Signatures_Select_Transaction_Signatures {
  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]
}

"""TransactionStatus fields"""
type Tron_Call_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter
  ): String

  """FaultError value"""
  FaultError(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Witness fields"""
type Tron_Call_Fields_Witness {
  """Address value"""
  Address(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields
  ): String

  """Id value"""
  Id(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Tron_Call_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

input Tron_Call_Filter {
  """Array of StateChanges includes or excludes provided value"""
  StateChanges: Tron_Call_Input_StateChanges_Input_StateChanges

  """Array of Arguments includes or excludes provided value"""
  Arguments: Tron_Call_Input_Arguments_Input_Arguments

  """Select by Block"""
  Block: Tron_Call_Input_Block_InputType

  """Select by Call"""
  Call: Tron_Call_Input_Call_InputType

  """Select by TransactionStatus"""
  TransactionStatus: Tron_Call_Input_TransactionStatus_InputType

  """Array of Returns includes or excludes provided value"""
  Returns: Tron_Call_Input_Returns_Input_Returns

  """Select by Witness"""
  Witness: Tron_Call_Input_Witness_InputType

  """Select by Transaction"""
  Transaction: Tron_Call_Input_Transaction_InputType

  """Select by Contract"""
  Contract: Tron_Call_Input_Contract_InputType

  """String value"""
  ChainId: OLAP_String

  """Any combination ( as OR ) of supplied conditions"""
  any: [Tron_Call_FilterAny!]
}

input Tron_Call_FilterAny {
  """Select by Call"""
  Call: Tron_Call_Input_Call_InputType

  """Select by Witness"""
  Witness: Tron_Call_Input_Witness_InputType

  """Select by TransactionStatus"""
  TransactionStatus: Tron_Call_Input_TransactionStatus_InputType

  """Select by Contract"""
  Contract: Tron_Call_Input_Contract_InputType

  """String value"""
  ChainId: OLAP_String

  """Select by Block"""
  Block: Tron_Call_Input_Block_InputType

  """Array of Returns includes or excludes provided value"""
  Returns: Tron_Call_Input_Returns_Input_Returns

  """Array of StateChanges includes or excludes provided value"""
  StateChanges: Tron_Call_Input_StateChanges_Input_StateChanges

  """Array of Arguments includes or excludes provided value"""
  Arguments: Tron_Call_Input_Arguments_Input_Arguments

  """Select by Transaction"""
  Transaction: Tron_Call_Input_Transaction_InputType
}

"""Array of Arguments includes or excludes provided value"""
input Tron_Call_Input_Arguments_Input_Arguments {
  """Does not End with this element"""
  notEndsWith: [Tron_Call_Input_Arguments_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_Call_Input_Arguments_Input_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_Call_Input_Arguments_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_Call_Input_Arguments_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [Tron_Call_Input_Arguments_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_Call_Input_Arguments_Input_FieldSelector]
}

"""Selector for Arguments"""
input Tron_Call_Input_Arguments_Input_FieldSelector {
  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Path"""
  Path: Tron_Call_Input_Arguments_Input_FieldSelector_Arguments_Path

  """Select value for Value"""
  Value: EVM_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String
}

"""Array of Arguments_Path includes or excludes provided value"""
input Tron_Call_Input_Arguments_Input_FieldSelector_Arguments_Path {
  """Does not start with this element"""
  notStartsWith: [Tron_Call_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Tron_Call_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_Call_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_Call_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_Call_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Ends with this element"""
  endsWith: [Tron_Call_Input_Arguments_Input_FieldSelector_FieldSelector]
}

"""Selector for Arguments_Path"""
input Tron_Call_Input_Arguments_Input_FieldSelector_FieldSelector {
  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer
}

"""Select by Block"""
input Tron_Call_Input_Block_InputType {
  AccountStateRoot: OLAP_String
  Hash: OLAP_String
  ParentNumber: OLAP_BigInteger
  ParentHash: OLAP_String
  TxTrieRoot: OLAP_String
  Version: OLAP_Integer
  Time: OLAP_DateTime
  TransactionsCount: OLAP_Integer
  Date: OLAP_Date
  Number: OLAP_BigInteger
}

"""Array of Call_CallPath includes or excludes provided value"""
input Tron_Call_Input_Call_CallPath_Input_Call_CallPath {
  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]
}

"""Select by Call"""
input Tron_Call_Input_Call_InputType {
  InternalCalls: OLAP_Integer
  From: OLAP_String
  Opcode: Tron_Call_Input_Call_Opcode_InputType
  Delegated: Boolean
  Gas: OLAP_BigInteger
  CallPath: Tron_Call_Input_Call_CallPath_Input_Call_CallPath
  ExitIndex: OLAP_Integer
  Value: EVM_Amount_With_Decimals
  To: OLAP_String
  Reverted: Boolean
  Index: OLAP_Integer
  Input: OLAP_String
  ValueInUSD: EVM_Amount_With_Decimals
  Signature: Tron_Call_Input_Call_Signature_InputType
  Depth: OLAP_Integer
  Error: OLAP_String
  Create: Boolean
  GasUsed: OLAP_BigInteger
  SelfDestruct: Boolean
  CallerIndex: OLAP_Integer
  Success: Boolean
  LogCount: OLAP_Integer
  EnterIndex: OLAP_Integer
  Output: OLAP_String
}

"""Select by Opcode"""
input Tron_Call_Input_Call_Opcode_InputType {
  Code: OLAP_Integer
  Name: OLAP_String
}

"""Select by Signature"""
input Tron_Call_Input_Call_Signature_InputType {
  Abi: OLAP_String
  SignatureHash: OLAP_String
  Signature: OLAP_String
  Parsed: Boolean
  Name: OLAP_String
  Type: Boolean
}

"""Select by Contract"""
input Tron_Call_Input_Contract_InputType {
  TypeUrl: OLAP_String
  Address: OLAP_String
  Type: OLAP_String
}

"""Selector for Returns"""
input Tron_Call_Input_Returns_Input_FieldSelector {
  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Path"""
  Path: Tron_Call_Input_Returns_Input_FieldSelector_Returns_Path

  """Select value for Value"""
  Value: EVM_ValueUnionSelector
}

"""Selector for Returns_Path"""
input Tron_Call_Input_Returns_Input_FieldSelector_FieldSelector {
  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Name"""
  Name: OLAP_String
}

"""Array of Returns_Path includes or excludes provided value"""
input Tron_Call_Input_Returns_Input_FieldSelector_Returns_Path {
  """Does not End with this element"""
  notEndsWith: [Tron_Call_Input_Returns_Input_FieldSelector_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_Call_Input_Returns_Input_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_Call_Input_Returns_Input_FieldSelector_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_Call_Input_Returns_Input_FieldSelector_FieldSelector]

  """Ends with this element"""
  endsWith: [Tron_Call_Input_Returns_Input_FieldSelector_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_Call_Input_Returns_Input_FieldSelector_FieldSelector]
}

"""Array of Returns includes or excludes provided value"""
input Tron_Call_Input_Returns_Input_Returns {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_Call_Input_Returns_Input_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_Call_Input_Returns_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_Call_Input_Returns_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [Tron_Call_Input_Returns_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_Call_Input_Returns_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Tron_Call_Input_Returns_Input_FieldSelector]
}

"""Selector for StateChanges"""
input Tron_Call_Input_StateChanges_Input_FieldSelector {
  """Select value for ChangeAfterCallIndex"""
  ChangeAfterCallIndex: OLAP_Integer

  """Select value for Address"""
  Address: OLAP_String

  """Select value for Location"""
  Location: OLAP_String

  """Select value for Value"""
  Value: OLAP_String
}

"""Array of StateChanges includes or excludes provided value"""
input Tron_Call_Input_StateChanges_Input_StateChanges {
  """Includes this element"""
  includes: [Tron_Call_Input_StateChanges_Input_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_Call_Input_StateChanges_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_Call_Input_StateChanges_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [Tron_Call_Input_StateChanges_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_Call_Input_StateChanges_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Tron_Call_Input_StateChanges_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer
}

"""Select by Transaction"""
input Tron_Call_Input_Transaction_InputType {
  Hash: OLAP_String
  FeePayer: OLAP_String
  Signatures: Tron_Call_Input_Transaction_Signatures_Input_Transaction_Signatures
  FeeLimit: EVM_Amount_With_Decimals
  FeeLimitInUSD: EVM_Amount_With_Decimals
  Time: OLAP_DateTime
  Receipt: Tron_Call_Input_Transaction_Receipt_InputType
  Data: OLAP_String
  Index: OLAP_Integer
  FeeInUSD: EVM_Amount_With_Decimals
  Result: Tron_Call_Input_Transaction_Result_InputType
  Timestamp: OLAP_DateTime
  Expiration: OLAP_DateTime
  Fee: EVM_Amount_With_Decimals
}

"""Select by Receipt"""
input Tron_Call_Input_Transaction_Receipt_InputType {
  NetUsage: OLAP_BigInteger
  EnergyFee: OLAP_BigInteger
  Result: OLAP_String
  EnergyUsageTotal: OLAP_BigInteger
  NetFee: EVM_Amount_With_Decimals
  NetFeeInUSD: EVM_Amount_With_Decimals
  OriginEnergyUsage: OLAP_BigInteger
  EnergyPenaltyTotal: OLAP_BigInteger
}

"""Select by Result"""
input Tron_Call_Input_Transaction_Result_InputType {
  Status: OLAP_String
  Success: Boolean
  Message: OLAP_String
}

"""Array of Transaction_Signatures includes or excludes provided value"""
input Tron_Call_Input_Transaction_Signatures_Input_Transaction_Signatures {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]
}

"""Select by TransactionStatus"""
input Tron_Call_Input_TransactionStatus_InputType {
  EndError: OLAP_String
  Success: Boolean
  FaultError: OLAP_String
}

"""Select by Witness"""
input Tron_Call_Input_Witness_InputType {
  Signature: OLAP_String
  Address: OLAP_String
  Id: OLAP_BigInteger
}

"""Limit definition"""
input Tron_Call_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input Tron_Call_LimitBy {
  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [Tron_Call_EnumFields!]

  """Max count in results"""
  count: Int = 0
}

"""Listed names of numeric fields in a cube"""
enum Tron_Call_NumFields {
  Transaction_Receipt_NetFee
  Call_Gas
  Block_TransactionsCount
  Transaction_Receipt_EnergyUsageTotal
  Transaction_FeeInUSD
  Transaction_Fee
  Transaction_Receipt_NetFeeInUSD
  Transaction_Receipt_EnergyFee
  Call_Opcode_Code
  Transaction_FeeLimit
  Call_EnterIndex
  Block_Version
  Transaction_Receipt_NetUsage
  Witness_Id
  Block_ParentNumber
  Call_LogCount
  Call_InternalCalls
  Transaction_Receipt_EnergyPenaltyTotal
  Transaction_FeeLimitInUSD
  Block_Number
  Call_GasUsed
  Call_Value
  Call_CallerIndex
  Transaction_Receipt_OriginEnergyUsage
  Call_Index
  Call_ValueInUSD
  Call_Depth
  Call_ExitIndex
  Transaction_Index
}

"""Order by"""
input Tron_Call_Ordering {
  """Select a field to sort ascending"""
  ascending: Tron_Call_EnumFields

  """Select a field to sort descending"""
  descending: Tron_Call_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum Tron_Call_StringFields {
  Block_Date
  Call_Input
  Transaction_Receipt_EnergyFee
  Witness_Id
  Transaction_Result_Status
  Transaction_Receipt_NetFee
  Block_AccountStateRoot
  Transaction_Receipt_EnergyPenaltyTotal
  Call_Gas
  Call_From
  Call_Value
  Block_ParentHash
  Contract_Type
  TransactionStatus_EndError
  Call_Signature_Signature
  ChainId
  Call_Signature_Abi
  Transaction_Receipt_EnergyUsageTotal
  Transaction_Receipt_Result
  Transaction_FeeLimit
  Transaction_FeeInUSD
  Call_Opcode_Name
  Call_GasUsed
  Call_Error
  Block_ParentNumber
  Call_ValueInUSD
  Call_Signature_SignatureHash
  Transaction_Result_Message
  Block_Hash
  Transaction_FeeLimitInUSD
  Transaction_Data
  Block_Number
  Transaction_Receipt_OriginEnergyUsage
  Transaction_FeePayer
  TransactionStatus_FaultError
  Contract_TypeUrl
  Block_TxTrieRoot
  Transaction_Hash
  Call_Output
  Witness_Signature
  Contract_Address
  Transaction_Receipt_NetUsage
  Transaction_Receipt_NetFeeInUSD
  Witness_Address
  Call_To
  Transaction_Fee
  Call_Signature_Name
}

"""Listed names of comparable fields in a cube"""
enum Tron_DEXTrade_CompareFields {
  Block_Number
  Block_Time
  Call_Reverted
  Trade_Buy_Currency_Decimals
  Call_SelfDestruct
  Trade_Buy_AmountInUSD
  Call_InternalCalls
  Trade_Buy_Price
  Trade_Sell_AmountInUSD
  Transaction_Receipt_NetUsage
  Trade_Sell_Currency_Native
  Call_Value
  Block_TransactionsCount
  Call_Delegated
  Transaction_Time
  Call_ValueInUSD
  Trade_Dex_Delegated
  Trade_Sell_PriceInUSD
  Block_Date
  Trade_Success
  Trade_Buy_Currency_HasURI
  Transaction_Receipt_NetFee
  Transaction_Receipt_EnergyPenaltyTotal
  Trade_Dex_Pair_Fungible
  Transaction_Receipt_OriginEnergyUsage
  Trade_Dex_Pair_Decimals
  Call_GasUsed
  Call_CallerIndex
  Transaction_Expiration
  TransactionStatus_Success
  Call_Signature_Parsed
  Trade_Buy_PriceInUSD
  Transaction_FeeInUSD
  Call_Index
  Log_Signature_Parsed
  Trade_Buy_Currency_Delegated
  Transaction_Result_Success
  Trade_Buy_Currency_Native
  Block_ParentNumber
  Witness_Id
  Trade_Dex_Pair_HasURI
  Call_Success
  Transaction_Receipt_NetFeeInUSD
  Trade_Dex_Pair_Delegated
  Trade_Sell_Currency_Delegated
  Log_LogAfterCallIndex
  Log_Index
  Call_Gas
  Trade_Sell_Currency_HasURI
  Transaction_Receipt_EnergyFee
  Transaction_FeeLimitInUSD
  Trade_Sell_Price
  Trade_PriceAsymmetry
  Transaction_Timestamp
  Transaction_Index
  Trade_Buy_Amount
  Block_Version
  Call_Signature_Type
  Trade_Sell_Currency_Decimals
  Call_Create
  Trade_Index
  Trade_Buy_Currency_Fungible
  Trade_Sell_Currency_Fungible
  Log_Signature_Type
  Transaction_Fee
  Transaction_FeeLimit
  Trade_Sell_Amount
  Transaction_Receipt_EnergyUsageTotal
}

"""DEX Trades in Tron Blockchain"""
type Tron_DEXTrade_Cube {
  """Block fields"""
  Block: Tron_DEXTrade_Fields_Block

  """Call fields"""
  Call: Tron_DEXTrade_Fields_Call

  """ChainId value"""
  ChainId(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): String

  """Contract fields"""
  Contract: Tron_DEXTrade_Fields_Contract

  """Log fields"""
  Log: Tron_DEXTrade_Fields_Log

  """Trade fields"""
  Trade: Tron_DEXTrade_Fields_Trade

  """Transaction fields"""
  Transaction: Tron_DEXTrade_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: Tron_DEXTrade_Fields_TransactionStatus

  """Witness fields"""
  Witness: Tron_DEXTrade_Fields_Witness

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: Tron_DEXTrade_StringFields!

    """Side2 argument"""
    side2: Tron_DEXTrade_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: Tron_DEXTrade_NumFields!
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """Second argument for Contingency coefficient between two arguments"""
    with: Tron_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: Tron_DEXTrade_NumFields
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Tron_DEXTrade_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Tron_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [Tron_DEXTrade_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """First argument for Covariance between two arguments"""
    of: Tron_DEXTrade_NumFields

    """Second argument for Covariance between two arguments"""
    with: Tron_DEXTrade_NumFields
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Tron_DEXTrade_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Tron_DEXTrade_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Tron_DEXTrade_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Tron_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: Tron_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: Tron_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: Tron_DEXTrade_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: Tron_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: Tron_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: Tron_DEXTrade_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: Tron_DEXTrade_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: Tron_DEXTrade_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: Tron_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: Tron_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """Argument for Standard deviation of the values"""
    of: Tron_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: Tron_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: Tron_DEXTrade_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Tron_DEXTrade_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Tron_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [Tron_DEXTrade_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum Tron_DEXTrade_EnumFields {
  Transaction_Receipt_NetFeeInUSD
  Call_Index
  Block_Number
  Log_Index
  Transaction_Timestamp
  Transaction_Fee
  Block_TransactionsCount
  Trade_Buy_Currency_ProtocolName
  Block_Date
  Trade_Dex_DelegatedTo
  Trade_Buy_Currency_Native
  Contract_Address
  Trade_Dex_SmartContract
  Call_GasUsed
  Block_AccountStateRoot
  Trade_Dex_Pair_AssetId
  Trade_Sell_AmountInUSD
  Trade_Buy_Currency_Name
  Call_Signature_Signature
  Transaction_FeeLimit
  Trade_Buy_Amount
  Transaction_Data
  Trade_Sell_Currency_Native
  Call_Signature_Abi
  Call_SelfDestruct
  Call_Gas
  Trade_Sell_Currency_SmartContract
  Trade_Buy_Currency_HasURI
  Transaction_Result_Status
  Call_Signature_Name
  Trade_Sell_Currency_HasURI
  Transaction_Receipt_EnergyPenaltyTotal
  Transaction_Result_Message
  Trade_Buy_Currency_AssetId
  Trade_Sell_URIs
  Trade_Buy_Currency_DelegatedTo
  Trade_Dex_Pair_Delegated
  Trade_Dex_ProtocolFamily
  Log_Signature_Abi
  Trade_Sell_Ids
  Trade_Dex_Delegated
  Transaction_FeePayer
  Trade_Sell_Currency_Decimals
  Block_Time
  Call_To
  Trade_Dex_FeeRecipient
  TransactionStatus_EndError
  Block_Hash
  Trade_Dex_Pair_Fungible
  Trade_Sell_OrderId
  Trade_Dex_Pair_Name
  Contract_TypeUrl
  Call_ValueInUSD
  Transaction_FeeInUSD
  Trade_Index
  Transaction_FeeLimitInUSD
  Block_ParentHash
  Call_CallPath
  Trade_Sell_Price
  Transaction_Signatures
  Trade_Sender
  Call_Success
  Log_SmartContract
  Trade_Buy_Currency_Symbol
  Transaction_Receipt_NetFee
  Transaction_Receipt_Result
  Transaction_Receipt_EnergyFee
  Trade_Buy_AmountInUSD
  Trade_Dex_Pair_Decimals
  Log_Signature_Signature
  Witness_Signature
  Trade_Dex_Pair_DelegatedTo
  Trade_Sell_Amount
  Call_Error
  Transaction_Expiration
  Trade_Buy_Currency_Decimals
  Transaction_Result_Success
  Call_Signature_Type
  Trade_Sell_Buyer
  Contract_Type
  ChainId
  Call_Delegated
  Log_Signature_Parsed
  Block_TxTrieRoot
  Trade_PriceAsymmetry
  Trade_Buy_Currency_Delegated
  Transaction_Receipt_NetUsage
  Trade_Dex_ProtocolVersion
  Witness_Id
  Call_CallerIndex
  Transaction_Receipt_OriginEnergyUsage
  Trade_Success
  Transaction_Index
  Trade_Buy_OrderId
  TransactionStatus_FaultError
  Trade_Dex_Pair_SmartContract
  Trade_Dex_ProtocolName
  Call_Create
  Trade_Buy_Currency_Fungible
  Call_Reverted
  Block_ParentNumber
  Trade_Buy_Buyer
  Trade_Dex_Pair_HasURI
  Trade_Sell_Currency_Name
  Transaction_Receipt_EnergyUsageTotal
  Call_Signature_SignatureHash
  Trade_Sell_Currency_AssetId
  TransactionStatus_Success
  Trade_Buy_Price
  Trade_Sell_Currency_DelegatedTo
  Log_Signature_Name
  Trade_Sell_Currency_ProtocolName
  Trade_Dex_Pair_ProtocolName
  Trade_Dex_OwnerAddress
  Trade_Sell_Currency_Symbol
  Trade_Buy_PriceInUSD
  Call_From
  Transaction_Time
  Trade_Sell_Seller
  Block_Version
  Trade_Sell_PriceInUSD
  Call_Signature_Parsed
  Trade_Buy_URIs
  Transaction_Hash
  Trade_Buy_Seller
  Trade_Buy_Ids
  Trade_Buy_Currency_SmartContract
  Log_Signature_SignatureHash
  Trade_Dex_Pair_Symbol
  Log_LogAfterCallIndex
  Trade_Fees
  Call_InternalCalls
  Log_Signature_Type
  Call_Value
  Trade_Sell_Currency_Fungible
  Trade_Sell_Currency_Delegated
  Witness_Address
}

"""Block fields"""
type Tron_DEXTrade_Fields_Block {
  """AccountStateRoot value"""
  AccountStateRoot(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): String

  """ParentNumber value"""
  ParentNumber(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): String

  """Time value"""
  Time(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): DateTime

  """TransactionsCount value"""
  TransactionsCount(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """TxTrieRoot value"""
  TxTrieRoot(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Version value"""
  Version(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Call fields"""
type Tron_DEXTrade_Fields_Call {
  """CallPath value"""
  CallPath(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_DEXTrade_Fields_Call_CallPath_Select_Call_CallPath

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): [Int]

  """CallerIndex value"""
  CallerIndex(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): Int

  """Create value"""
  Create(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Error value"""
  Error(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Index value"""
  Index(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): Int

  """InternalCalls value"""
  InternalCalls(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): Int

  """Reverted value"""
  Reverted(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """SelfDestruct value"""
  SelfDestruct(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature fields"""
  Signature: Tron_DEXTrade_Fields_Call_Signature

  """Success value"""
  Success(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): Boolean

  """To value"""
  To(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): String

  """Value value"""
  Value(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): String

  """ValueInUSD value"""
  ValueInUSD(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Array of Call_CallPath includes or excludes provided value"""
input Tron_DEXTrade_Fields_Call_CallPath_Select_Call_CallPath {
  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]
}

"""Signature fields"""
type Tron_DEXTrade_Fields_Call_Signature {
  """Abi value"""
  Abi(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): Boolean
}

"""Contract fields"""
type Tron_DEXTrade_Fields_Contract {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): String

  """TypeUrl value"""
  TypeUrl(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Log fields"""
type Tron_DEXTrade_Fields_Log {
  """Index value"""
  Index(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): Int

  """LogAfterCallIndex value"""
  LogAfterCallIndex(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): Int

  """Signature fields"""
  Signature: Tron_DEXTrade_Fields_Log_Signature

  """SmartContract value"""
  SmartContract(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): String
}

"""Signature fields"""
type Tron_DEXTrade_Fields_Log_Signature {
  """Abi value"""
  Abi(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): String

  """Name value"""
  Name(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): String

  """Parsed value"""
  Parsed(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): Boolean

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Trade fields"""
type Tron_DEXTrade_Fields_Trade {
  """Buy fields"""
  Buy: Tron_DEXTrade_Fields_Trade_Buy

  """Dex fields"""
  Dex: Tron_DEXTrade_Fields_Trade_Dex

  """Fees value"""
  Fees(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_DEXTrade_Fields_Trade_Fees_Select_Trade_Fees

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): [Tron_DEXTrade_Fields_Trade_Trade_Fees]

  """Index value"""
  Index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): Int

  """PriceAsymmetry value"""
  PriceAsymmetry(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """Sell fields"""
  Sell: Tron_DEXTrade_Fields_Trade_Sell

  """Sender value"""
  Sender(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Buy fields"""
type Tron_DEXTrade_Fields_Trade_Buy {
  """Amount value"""
  Amount(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Buyer value"""
  Buyer(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): String

  """Currency fields"""
  Currency: Tron_DEXTrade_Fields_Trade_Buy_Currency

  """Ids value"""
  Ids(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_DEXTrade_Fields_Trade_Buy_Ids_Select_Trade_Buy_Ids

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): [String]

  """OrderId value"""
  OrderId(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): String

  """Price value"""
  Price(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """PriceInUSD value"""
  PriceInUSD(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """Seller value"""
  Seller(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """URIs value"""
  URIs(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_DEXTrade_Fields_Trade_Buy_URIs_Select_Trade_Buy_URIs
  ): [String]
}

"""Currency fields"""
type Tron_DEXTrade_Fields_Trade_Buy_Currency {
  """AssetId value"""
  AssetId(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Delegated value"""
  Delegated(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Native value"""
  Native(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Array of Trade_Buy_Ids includes or excludes provided value"""
input Tron_DEXTrade_Fields_Trade_Buy_Ids_Select_Trade_Buy_Ids {
  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer
}

"""Array of Trade_Buy_URIs includes or excludes provided value"""
input Tron_DEXTrade_Fields_Trade_Buy_URIs_Select_Trade_Buy_URIs {
  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]
}

"""Dex fields"""
type Tron_DEXTrade_Fields_Trade_Dex {
  """Delegated value"""
  Delegated(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): String

  """FeeRecipient value"""
  FeeRecipient(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): String

  """OwnerAddress value"""
  OwnerAddress(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Pair fields"""
  Pair: Tron_DEXTrade_Fields_Trade_Dex_Pair

  """ProtocolFamily value"""
  ProtocolFamily(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolVersion value"""
  ProtocolVersion(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Pair fields"""
type Tron_DEXTrade_Fields_Trade_Dex_Pair {
  """AssetId value"""
  AssetId(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): String

  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Delegated value"""
  Delegated(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Fungible value"""
  Fungible(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): Boolean

  """HasURI value"""
  HasURI(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Selector for Trade_Fees"""
input Tron_DEXTrade_Fields_Trade_Fees_Select_FieldSelector {
  """Select value for AmountInUSD"""
  AmountInUSD: EVM_Amount_With_Decimals

  """Select value for Payer"""
  Payer: OLAP_String

  """Select value for Recipient"""
  Recipient: OLAP_String

  """Select value for Currency"""
  Currency: Tron_DEXTrade_Fields_Trade_Fees_Select_FieldSelector_FieldSelector

  """Select value for Amount"""
  Amount: EVM_Amount_With_Decimals
}

"""Selector for Trade_Fees_Currency"""
input Tron_DEXTrade_Fields_Trade_Fees_Select_FieldSelector_FieldSelector {
  """Select value for ProtocolName"""
  ProtocolName: OLAP_String

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Symbol"""
  Symbol: OLAP_String

  """Select value for Decimals"""
  Decimals: OLAP_Integer

  """Select value for SmartContract"""
  SmartContract: OLAP_String
}

"""Array of Trade_Fees includes or excludes provided value"""
input Tron_DEXTrade_Fields_Trade_Fees_Select_Trade_Fees {
  """Excludes this element"""
  excludes: [Tron_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [Tron_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Tron_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]
}

"""Sell fields"""
type Tron_DEXTrade_Fields_Trade_Sell {
  """Amount value"""
  Amount(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Buyer value"""
  Buyer(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Currency fields"""
  Currency: Tron_DEXTrade_Fields_Trade_Sell_Currency

  """Ids value"""
  Ids(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_DEXTrade_Fields_Trade_Sell_Ids_Select_Trade_Sell_Ids
  ): [String]

  """OrderId value"""
  OrderId(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): String

  """Price value"""
  Price(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): Float

  """PriceInUSD value"""
  PriceInUSD(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): Float

  """Seller value"""
  Seller(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): String

  """URIs value"""
  URIs(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_DEXTrade_Fields_Trade_Sell_URIs_Select_Trade_Sell_URIs
  ): [String]
}

"""Currency fields"""
type Tron_DEXTrade_Fields_Trade_Sell_Currency {
  """AssetId value"""
  AssetId(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Name value"""
  Name(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): String

  """Native value"""
  Native(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): String

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Array of Trade_Sell_Ids includes or excludes provided value"""
input Tron_DEXTrade_Fields_Trade_Sell_Ids_Select_Trade_Sell_Ids {
  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]
}

"""Array of Trade_Sell_URIs includes or excludes provided value"""
input Tron_DEXTrade_Fields_Trade_Sell_URIs_Select_Trade_Sell_URIs {
  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]
}

"""Trade_Fees fields"""
type Tron_DEXTrade_Fields_Trade_Trade_Fees {
  Amount: String
  AmountInUSD: String
  Currency: Tron_DEXTrade_Fields_Trade_Trade_Fees_Currency
  Payer: String
  Recipient: String
}

"""Trade_Fees_Currency fields"""
type Tron_DEXTrade_Fields_Trade_Trade_Fees_Currency {
  Decimals: Int
  Name: String
  ProtocolName: String
  SmartContract: String
  Symbol: String
}

"""Transaction fields"""
type Tron_DEXTrade_Fields_Transaction {
  """Data value"""
  Data(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Expiration value"""
  Expiration(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """Fee value"""
  Fee(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeLimit value"""
  FeeLimit(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): String

  """FeeLimitInUSD value"""
  FeeLimitInUSD(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): String

  """FeePayer value"""
  FeePayer(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Receipt fields"""
  Receipt: Tron_DEXTrade_Fields_Transaction_Receipt

  """Result fields"""
  Result: Tron_DEXTrade_Fields_Transaction_Result

  """Signatures value"""
  Signatures(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_DEXTrade_Fields_Transaction_Signatures_Select_Transaction_Signatures
  ): [String]

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """Timestamp value"""
  Timestamp(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): DateTime
}

"""Receipt fields"""
type Tron_DEXTrade_Fields_Transaction_Receipt {
  """EnergyFee value"""
  EnergyFee(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """EnergyPenaltyTotal value"""
  EnergyPenaltyTotal(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): String

  """EnergyUsageTotal value"""
  EnergyUsageTotal(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): String

  """NetFee value"""
  NetFee(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """NetFeeInUSD value"""
  NetFeeInUSD(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """NetUsage value"""
  NetUsage(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """OriginEnergyUsage value"""
  OriginEnergyUsage(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Result value"""
  Result(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Result fields"""
type Tron_DEXTrade_Fields_Transaction_Result {
  """Message value"""
  Message(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields
  ): String

  """Status value"""
  Status(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Array of Transaction_Signatures includes or excludes provided value"""
input Tron_DEXTrade_Fields_Transaction_Signatures_Select_Transaction_Signatures {
  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]
}

"""TransactionStatus fields"""
type Tron_DEXTrade_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """FaultError value"""
  FaultError(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Witness fields"""
type Tron_DEXTrade_Fields_Witness {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Id value"""
  Id(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter
  ): String

  """Signature value"""
  Signature(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTrade_CompareFields
  ): String
}

input Tron_DEXTrade_Filter {
  """Select by Block"""
  Block: Tron_DEXTrade_Input_Block_InputType

  """Select by Contract"""
  Contract: Tron_DEXTrade_Input_Contract_InputType

  """Select by Trade"""
  Trade: Tron_DEXTrade_Input_Trade_InputType

  """Select by Witness"""
  Witness: Tron_DEXTrade_Input_Witness_InputType

  """Select by Call"""
  Call: Tron_DEXTrade_Input_Call_InputType

  """Select by Log"""
  Log: Tron_DEXTrade_Input_Log_InputType

  """Select by TransactionStatus"""
  TransactionStatus: Tron_DEXTrade_Input_TransactionStatus_InputType

  """Any combination ( as OR ) of supplied conditions"""
  any: [Tron_DEXTrade_FilterAny!]

  """Select by Transaction"""
  Transaction: Tron_DEXTrade_Input_Transaction_InputType

  """String value"""
  ChainId: OLAP_String
}

input Tron_DEXTrade_FilterAny {
  """Select by Block"""
  Block: Tron_DEXTrade_Input_Block_InputType

  """Select by Call"""
  Call: Tron_DEXTrade_Input_Call_InputType

  """Select by Transaction"""
  Transaction: Tron_DEXTrade_Input_Transaction_InputType

  """Select by Trade"""
  Trade: Tron_DEXTrade_Input_Trade_InputType

  """Select by Contract"""
  Contract: Tron_DEXTrade_Input_Contract_InputType

  """Select by Witness"""
  Witness: Tron_DEXTrade_Input_Witness_InputType

  """Select by Log"""
  Log: Tron_DEXTrade_Input_Log_InputType

  """Select by TransactionStatus"""
  TransactionStatus: Tron_DEXTrade_Input_TransactionStatus_InputType

  """String value"""
  ChainId: OLAP_String
}

"""Select by Block"""
input Tron_DEXTrade_Input_Block_InputType {
  Version: OLAP_Integer
  TxTrieRoot: OLAP_String
  ParentNumber: OLAP_BigInteger
  Hash: OLAP_String
  ParentHash: OLAP_String
  Number: OLAP_BigInteger
  TransactionsCount: OLAP_Integer
  Time: OLAP_DateTime
  AccountStateRoot: OLAP_String
  Date: OLAP_Date
}

"""Array of Call_CallPath includes or excludes provided value"""
input Tron_DEXTrade_Input_Call_CallPath_Input_Call_CallPath {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]
}

"""Select by Call"""
input Tron_DEXTrade_Input_Call_InputType {
  Success: Boolean
  Index: OLAP_Integer
  CallPath: Tron_DEXTrade_Input_Call_CallPath_Input_Call_CallPath
  Reverted: Boolean
  Delegated: Boolean
  InternalCalls: OLAP_Integer
  Value: EVM_Amount_With_Decimals
  Gas: OLAP_BigInteger
  CallerIndex: OLAP_Integer
  ValueInUSD: EVM_Amount_With_Decimals
  From: OLAP_String
  Signature: Tron_DEXTrade_Input_Call_Signature_InputType
  Create: Boolean
  GasUsed: OLAP_BigInteger
  To: OLAP_String
  SelfDestruct: Boolean
  Error: OLAP_String
}

"""Select by Signature"""
input Tron_DEXTrade_Input_Call_Signature_InputType {
  Signature: OLAP_String
  Abi: OLAP_String
  Parsed: Boolean
  SignatureHash: OLAP_String
  Name: OLAP_String
  Type: Boolean
}

"""Select by Contract"""
input Tron_DEXTrade_Input_Contract_InputType {
  Address: OLAP_String
  TypeUrl: OLAP_String
  Type: OLAP_String
}

"""Select by Log"""
input Tron_DEXTrade_Input_Log_InputType {
  Signature: Tron_DEXTrade_Input_Log_Signature_InputType
  SmartContract: OLAP_String
  Index: OLAP_Integer
  LogAfterCallIndex: OLAP_Integer
}

"""Select by Signature"""
input Tron_DEXTrade_Input_Log_Signature_InputType {
  Type: Boolean
  SignatureHash: OLAP_String
  Name: OLAP_String
  Signature: OLAP_String
  Parsed: Boolean
  Abi: OLAP_String
}

"""Select by Currency"""
input Tron_DEXTrade_Input_Trade_Buy_Currency_InputType {
  Native: Boolean
  Delegated: Boolean
  SmartContract: OLAP_String
  HasURI: Boolean
  Symbol: OLAP_String
  Name: OLAP_String
  AssetId: OLAP_String
  Fungible: Boolean
  ProtocolName: OLAP_String
  Decimals: OLAP_Integer
  DelegatedTo: OLAP_String
}

"""Array of Trade_Buy_Ids includes or excludes provided value"""
input Tron_DEXTrade_Input_Trade_Buy_Ids_Input_Trade_Buy_Ids {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]
}

"""Select by Buy"""
input Tron_DEXTrade_Input_Trade_Buy_InputType {
  Buyer: OLAP_String
  Price: OLAP_Float
  Amount: EVM_Amount_With_Decimals
  Seller: OLAP_String
  Currency: Tron_DEXTrade_Input_Trade_Buy_Currency_InputType
  AmountInUSD: EVM_Amount_With_Decimals
  PriceInUSD: OLAP_Float
  Ids: Tron_DEXTrade_Input_Trade_Buy_Ids_Input_Trade_Buy_Ids
  URIs: Tron_DEXTrade_Input_Trade_Buy_URIs_Input_Trade_Buy_URIs
  OrderId: OLAP_String
}

"""Array of Trade_Buy_URIs includes or excludes provided value"""
input Tron_DEXTrade_Input_Trade_Buy_URIs_Input_Trade_Buy_URIs {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]
}

"""Select by Dex"""
input Tron_DEXTrade_Input_Trade_Dex_InputType {
  SmartContract: OLAP_String
  Delegated: Boolean
  FeeRecipient: OLAP_String
  Pair: Tron_DEXTrade_Input_Trade_Dex_Pair_InputType
  ProtocolName: OLAP_String
  OwnerAddress: OLAP_String
  DelegatedTo: OLAP_String
  ProtocolFamily: OLAP_String
  ProtocolVersion: OLAP_String
}

"""Select by Pair"""
input Tron_DEXTrade_Input_Trade_Dex_Pair_InputType {
  Delegated: Boolean
  Fungible: Boolean
  DelegatedTo: OLAP_String
  HasURI: Boolean
  Decimals: OLAP_Integer
  ProtocolName: OLAP_String
  SmartContract: OLAP_String
  Symbol: OLAP_String
  Name: OLAP_String
  AssetId: OLAP_String
}

"""Selector for Trade_Fees"""
input Tron_DEXTrade_Input_Trade_Fees_Input_FieldSelector {
  """Select value for AmountInUSD"""
  AmountInUSD: EVM_Amount_With_Decimals

  """Select value for Payer"""
  Payer: OLAP_String

  """Select value for Recipient"""
  Recipient: OLAP_String

  """Select value for Currency"""
  Currency: Tron_DEXTrade_Input_Trade_Fees_Input_FieldSelector_FieldSelector

  """Select value for Amount"""
  Amount: EVM_Amount_With_Decimals
}

"""Selector for Trade_Fees_Currency"""
input Tron_DEXTrade_Input_Trade_Fees_Input_FieldSelector_FieldSelector {
  """Select value for Symbol"""
  Symbol: OLAP_String

  """Select value for Decimals"""
  Decimals: OLAP_Integer

  """Select value for SmartContract"""
  SmartContract: OLAP_String

  """Select value for ProtocolName"""
  ProtocolName: OLAP_String

  """Select value for Name"""
  Name: OLAP_String
}

"""Array of Trade_Fees includes or excludes provided value"""
input Tron_DEXTrade_Input_Trade_Fees_Input_Trade_Fees {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [Tron_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Tron_DEXTrade_Input_Trade_Fees_Input_FieldSelector]
}

"""Select by Trade"""
input Tron_DEXTrade_Input_Trade_InputType {
  Fees: Tron_DEXTrade_Input_Trade_Fees_Input_Trade_Fees
  Index: OLAP_Integer
  Success: Boolean
  Dex: Tron_DEXTrade_Input_Trade_Dex_InputType
  Buy: Tron_DEXTrade_Input_Trade_Buy_InputType
  Sell: Tron_DEXTrade_Input_Trade_Sell_InputType
  PriceAsymmetry: OLAP_Float
  Sender: OLAP_String
}

"""Select by Currency"""
input Tron_DEXTrade_Input_Trade_Sell_Currency_InputType {
  ProtocolName: OLAP_String
  AssetId: OLAP_String
  Decimals: OLAP_Integer
  DelegatedTo: OLAP_String
  HasURI: Boolean
  Name: OLAP_String
  Fungible: Boolean
  Symbol: OLAP_String
  Native: Boolean
  SmartContract: OLAP_String
  Delegated: Boolean
}

"""Array of Trade_Sell_Ids includes or excludes provided value"""
input Tron_DEXTrade_Input_Trade_Sell_Ids_Input_Trade_Sell_Ids {
  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]
}

"""Select by Sell"""
input Tron_DEXTrade_Input_Trade_Sell_InputType {
  Ids: Tron_DEXTrade_Input_Trade_Sell_Ids_Input_Trade_Sell_Ids
  PriceInUSD: OLAP_Float
  AmountInUSD: EVM_Amount_With_Decimals
  OrderId: OLAP_String
  Buyer: OLAP_String
  Amount: EVM_Amount_With_Decimals
  Price: OLAP_Float
  URIs: Tron_DEXTrade_Input_Trade_Sell_URIs_Input_Trade_Sell_URIs
  Seller: OLAP_String
  Currency: Tron_DEXTrade_Input_Trade_Sell_Currency_InputType
}

"""Array of Trade_Sell_URIs includes or excludes provided value"""
input Tron_DEXTrade_Input_Trade_Sell_URIs_Input_Trade_Sell_URIs {
  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]
}

"""Select by Transaction"""
input Tron_DEXTrade_Input_Transaction_InputType {
  Signatures: Tron_DEXTrade_Input_Transaction_Signatures_Input_Transaction_Signatures
  Index: OLAP_Integer
  FeeLimitInUSD: EVM_Amount_With_Decimals
  Data: OLAP_String
  Hash: OLAP_String
  Fee: EVM_Amount_With_Decimals
  FeeLimit: EVM_Amount_With_Decimals
  FeeInUSD: EVM_Amount_With_Decimals
  Result: Tron_DEXTrade_Input_Transaction_Result_InputType
  Time: OLAP_DateTime
  FeePayer: OLAP_String
  Timestamp: OLAP_DateTime
  Receipt: Tron_DEXTrade_Input_Transaction_Receipt_InputType
  Expiration: OLAP_DateTime
}

"""Select by Receipt"""
input Tron_DEXTrade_Input_Transaction_Receipt_InputType {
  NetFee: EVM_Amount_With_Decimals
  NetFeeInUSD: EVM_Amount_With_Decimals
  EnergyUsageTotal: OLAP_BigInteger
  NetUsage: OLAP_BigInteger
  OriginEnergyUsage: OLAP_BigInteger
  Result: OLAP_String
  EnergyFee: OLAP_BigInteger
  EnergyPenaltyTotal: OLAP_BigInteger
}

"""Select by Result"""
input Tron_DEXTrade_Input_Transaction_Result_InputType {
  Success: Boolean
  Message: OLAP_String
  Status: OLAP_String
}

"""Array of Transaction_Signatures includes or excludes provided value"""
input Tron_DEXTrade_Input_Transaction_Signatures_Input_Transaction_Signatures {
  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]
}

"""Select by TransactionStatus"""
input Tron_DEXTrade_Input_TransactionStatus_InputType {
  EndError: OLAP_String
  FaultError: OLAP_String
  Success: Boolean
}

"""Select by Witness"""
input Tron_DEXTrade_Input_Witness_InputType {
  Id: OLAP_BigInteger
  Address: OLAP_String
  Signature: OLAP_String
}

"""Limit definition"""
input Tron_DEXTrade_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input Tron_DEXTrade_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [Tron_DEXTrade_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum Tron_DEXTrade_NumFields {
  Trade_Sell_AmountInUSD
  Transaction_Receipt_NetFeeInUSD
  Trade_Index
  Log_Index
  Trade_Buy_Price
  Log_LogAfterCallIndex
  Transaction_Receipt_NetFee
  Transaction_Index
  Transaction_Receipt_EnergyFee
  Transaction_Receipt_OriginEnergyUsage
  Witness_Id
  Block_Number
  Trade_Buy_PriceInUSD
  Trade_PriceAsymmetry
  Transaction_Fee
  Trade_Sell_Currency_Decimals
  Transaction_FeeInUSD
  Call_Index
  Call_CallerIndex
  Call_Gas
  Transaction_Receipt_NetUsage
  Trade_Buy_AmountInUSD
  Transaction_FeeLimitInUSD
  Trade_Buy_Currency_Decimals
  Trade_Sell_PriceInUSD
  Transaction_Receipt_EnergyUsageTotal
  Call_InternalCalls
  Block_TransactionsCount
  Transaction_Receipt_EnergyPenaltyTotal
  Transaction_FeeLimit
  Call_GasUsed
  Trade_Dex_Pair_Decimals
  Trade_Sell_Price
  Trade_Sell_Amount
  Block_Version
  Call_Value
  Block_ParentNumber
  Call_ValueInUSD
  Trade_Buy_Amount
}

"""Order by"""
input Tron_DEXTrade_Ordering {
  """Select a field to sort ascending"""
  ascending: Tron_DEXTrade_EnumFields

  """Select a field to sort descending"""
  descending: Tron_DEXTrade_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum Tron_DEXTrade_StringFields {
  Witness_Id
  Log_Signature_Name
  Block_TxTrieRoot
  Trade_Buy_Buyer
  Transaction_Receipt_Result
  Transaction_FeeInUSD
  Call_From
  Block_Date
  Log_Signature_Abi
  Block_ParentHash
  Transaction_Receipt_NetFeeInUSD
  Trade_Dex_Pair_DelegatedTo
  Call_Signature_Signature
  Transaction_FeeLimitInUSD
  Trade_Sell_Currency_DelegatedTo
  Trade_Sender
  Trade_Dex_FeeRecipient
  Call_Signature_SignatureHash
  Block_AccountStateRoot
  Contract_Address
  Log_Signature_Signature
  TransactionStatus_EndError
  Transaction_Fee
  Block_Hash
  Transaction_Result_Message
  Trade_Buy_OrderId
  Witness_Signature
  Transaction_Receipt_OriginEnergyUsage
  Contract_TypeUrl
  Trade_Buy_Currency_Symbol
  Trade_Sell_Amount
  Trade_Sell_Currency_Name
  Trade_Dex_Pair_SmartContract
  Transaction_Receipt_NetFee
  Trade_Sell_Buyer
  Trade_Sell_Currency_AssetId
  Block_ParentNumber
  Trade_Buy_Currency_DelegatedTo
  Trade_Dex_OwnerAddress
  Transaction_Hash
  Transaction_Receipt_NetUsage
  Call_Signature_Abi
  Call_ValueInUSD
  Trade_Dex_DelegatedTo
  Trade_Dex_ProtocolVersion
  Transaction_FeeLimit
  Trade_Buy_Currency_Name
  Trade_Dex_Pair_Name
  Trade_Sell_Currency_ProtocolName
  Log_SmartContract
  Transaction_Data
  ChainId
  Call_GasUsed
  Call_Error
  Trade_Dex_Pair_ProtocolName
  Transaction_Receipt_EnergyPenaltyTotal
  Block_Number
  Trade_Buy_Currency_SmartContract
  Trade_Sell_Currency_SmartContract
  Trade_Dex_Pair_AssetId
  Log_Signature_SignatureHash
  Trade_Buy_Currency_ProtocolName
  Trade_Dex_SmartContract
  Trade_Sell_OrderId
  Trade_Sell_Seller
  Contract_Type
  Trade_Sell_AmountInUSD
  Trade_Dex_ProtocolName
  Trade_Dex_Pair_Symbol
  TransactionStatus_FaultError
  Call_Signature_Name
  Call_Value
  Trade_Dex_ProtocolFamily
  Witness_Address
  Call_Gas
  Trade_Buy_Amount
  Transaction_FeePayer
  Trade_Buy_Seller
  Call_To
  Trade_Buy_Currency_AssetId
  Trade_Buy_AmountInUSD
  Transaction_Receipt_EnergyUsageTotal
  Trade_Sell_Currency_Symbol
  Transaction_Result_Status
  Transaction_Receipt_EnergyFee
}

"""Listed names of comparable fields in a cube"""
enum Tron_DEXTradeByToken_CompareFields {
  Block_Number
  Trade_Dex_Pair_Delegated
  Trade_PriceInUSD
  Trade_Dex_Pair_HasURI
  Call_ValueInUSD
  Call_Success
  Trade_Side_AmountInUSD
  Transaction_Receipt_NetUsage
  Transaction_FeeLimitInUSD
  Log_Index
  Call_Value
  Call_Signature_Type
  Transaction_Result_Success
  Transaction_Expiration
  Trade_Side_Amount
  Trade_Currency_Native
  Transaction_Receipt_EnergyPenaltyTotal
  TransactionStatus_Success
  Call_Delegated
  Trade_Dex_Pair_Fungible
  Transaction_Index
  Trade_Index
  Transaction_FeeInUSD
  Block_TransactionsCount
  Transaction_Receipt_NetFeeInUSD
  Trade_PriceAsymmetry
  Trade_Currency_Decimals
  Transaction_Receipt_NetFee
  Block_Date
  Log_Signature_Parsed
  Log_Signature_Type
  Call_InternalCalls
  Call_Index
  Trade_Side_Currency_HasURI
  Trade_Currency_HasURI
  Trade_Amount
  Call_Gas
  Call_Reverted
  Call_CallerIndex
  Transaction_Receipt_OriginEnergyUsage
  Trade_Currency_Delegated
  Transaction_Time
  Trade_Dex_Delegated
  Trade_Success
  Transaction_Fee
  Block_ParentNumber
  Call_GasUsed
  Trade_Side_Currency_Native
  Log_LogAfterCallIndex
  Trade_Dex_Pair_Decimals
  Block_Time
  Witness_Id
  Call_Signature_Parsed
  Call_Create
  Trade_Side_Currency_Fungible
  Trade_Currency_Fungible
  Transaction_Timestamp
  Trade_AmountInUSD
  Trade_Side_Currency_Decimals
  Transaction_Receipt_EnergyUsageTotal
  Trade_Side_Currency_Delegated
  Transaction_FeeLimit
  Transaction_Receipt_EnergyFee
  Call_SelfDestruct
  Trade_Price
  Block_Version
}

"""DEX Trades by a token in Tron Blockchain"""
type Tron_DEXTradeByToken_Cube {
  """Block fields"""
  Block: Tron_DEXTradeByToken_Fields_Block

  """Call fields"""
  Call: Tron_DEXTradeByToken_Fields_Call

  """ChainId value"""
  ChainId(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields
  ): String

  """Contract fields"""
  Contract: Tron_DEXTradeByToken_Fields_Contract

  """Log fields"""
  Log: Tron_DEXTradeByToken_Fields_Log

  """Trade fields"""
  Trade: Tron_DEXTradeByToken_Fields_Trade

  """Transaction fields"""
  Transaction: Tron_DEXTradeByToken_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: Tron_DEXTradeByToken_Fields_TransactionStatus

  """Witness fields"""
  Witness: Tron_DEXTradeByToken_Fields_Witness

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: Tron_DEXTradeByToken_StringFields!

    """Side2 argument"""
    side2: Tron_DEXTradeByToken_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: Tron_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: Tron_DEXTradeByToken_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: Tron_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Tron_DEXTradeByToken_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Tron_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [Tron_DEXTradeByToken_EnumFields!]
  ): String

  """Covariance between two arguments"""
  covariance(
    """First argument for Covariance between two arguments"""
    of: Tron_DEXTradeByToken_NumFields

    """Second argument for Covariance between two arguments"""
    with: Tron_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Tron_DEXTradeByToken_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Tron_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Tron_DEXTradeByToken_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Tron_DEXTradeByToken_NumFields
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: Tron_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: Tron_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: Tron_DEXTradeByToken_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: Tron_DEXTradeByToken_NumFields!
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: Tron_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: Tron_DEXTradeByToken_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: Tron_DEXTradeByToken_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """Second argument for Rank correlation coefficient between two arguments"""
    with: Tron_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: Tron_DEXTradeByToken_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: Tron_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: Tron_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: Tron_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """Argument for Theil index"""
    of: Tron_DEXTradeByToken_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Tron_DEXTradeByToken_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Tron_DEXTradeByToken_NumFields
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [Tron_DEXTradeByToken_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum Tron_DEXTradeByToken_EnumFields {
  Call_Delegated
  Trade_Dex_Pair_DelegatedTo
  Trade_PriceInUSD
  Block_ParentHash
  Trade_OrderId
  Block_Hash
  Trade_Side_Currency_DelegatedTo
  Call_Value
  Trade_Dex_ProtocolVersion
  Call_Signature_Abi
  Trade_Side_Currency_AssetId
  Transaction_Data
  Contract_TypeUrl
  Transaction_Index
  Call_Gas
  Call_InternalCalls
  Call_Signature_Parsed
  Transaction_Receipt_Result
  Trade_Side_URIs
  Transaction_Receipt_EnergyUsageTotal
  Trade_Buyer
  Block_ParentNumber
  Block_TransactionsCount
  Call_Signature_Type
  Transaction_FeeInUSD
  Trade_Currency_HasURI
  TransactionStatus_Success
  Transaction_Hash
  Trade_Dex_Pair_Decimals
  Trade_Dex_FeeRecipient
  Call_Create
  Trade_Currency_AssetId
  Trade_Ids
  Trade_Side_Currency_Decimals
  Transaction_Time
  Transaction_Result_Success
  Transaction_FeePayer
  Trade_Dex_Pair_SmartContract
  Witness_Address
  Trade_Dex_Pair_AssetId
  Trade_Side_Currency_Delegated
  Trade_Dex_Pair_Name
  Block_TxTrieRoot
  Trade_Currency_Name
  TransactionStatus_FaultError
  Call_To
  Call_Signature_SignatureHash
  Trade_Currency_SmartContract
  Call_CallerIndex
  Trade_Dex_Pair_Delegated
  Trade_Sender
  Contract_Address
  Trade_Side_Type
  Call_Index
  Call_ValueInUSD
  Trade_Success
  Trade_Dex_Pair_ProtocolName
  Block_AccountStateRoot
  Trade_Currency_Fungible
  Trade_Side_Seller
  Call_Signature_Name
  Transaction_FeeLimitInUSD
  Trade_Currency_Delegated
  Transaction_Receipt_EnergyFee
  Witness_Signature
  Trade_Dex_OwnerAddress
  Trade_Side_Currency_ProtocolName
  Trade_Side_Currency_SmartContract
  Transaction_Signatures
  Trade_Side_AmountInUSD
  Transaction_FeeLimit
  Trade_PriceAsymmetry
  Trade_Side_Currency_HasURI
  Trade_Price
  TransactionStatus_EndError
  Call_Reverted
  Block_Date
  Trade_Currency_Decimals
  Trade_AmountInUSD
  Transaction_Receipt_NetFee
  Trade_Index
  Trade_Amount
  Log_SmartContract
  Trade_Dex_Pair_HasURI
  Trade_Dex_DelegatedTo
  ChainId
  Trade_Side_Currency_Fungible
  Trade_Side_Ids
  Call_Signature_Signature
  Transaction_Timestamp
  Log_Index
  Log_Signature_Abi
  Transaction_Receipt_EnergyPenaltyTotal
  Trade_Dex_ProtocolName
  Trade_URIs
  Trade_Currency_DelegatedTo
  Contract_Type
  Trade_Dex_ProtocolFamily
  Log_LogAfterCallIndex
  Block_Number
  Witness_Id
  Transaction_Expiration
  Transaction_Receipt_OriginEnergyUsage
  Trade_Currency_Symbol
  Trade_Currency_Native
  Block_Time
  Trade_Side_Currency_Symbol
  Log_Signature_SignatureHash
  Log_Signature_Parsed
  Block_Version
  Trade_Dex_Pair_Symbol
  Trade_Side_Amount
  Log_Signature_Type
  Call_GasUsed
  Trade_Side_Currency_Name
  Call_Success
  Transaction_Fee
  Call_CallPath
  Trade_Dex_SmartContract
  Trade_Dex_Delegated
  Transaction_Receipt_NetUsage
  Trade_Side_Currency_Native
  Transaction_Receipt_NetFeeInUSD
  Log_Signature_Signature
  Trade_Currency_ProtocolName
  Call_SelfDestruct
  Call_From
  Log_Signature_Name
  Call_Error
  Trade_Seller
  Trade_Side_OrderId
  Trade_Dex_Pair_Fungible
  Transaction_Result_Message
  Trade_Side_Buyer
  Trade_Fees
  Transaction_Result_Status
}

"""Block fields"""
type Tron_DEXTradeByToken_Fields_Block {
  """AccountStateRoot value"""
  AccountStateRoot(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields
  ): String

  """Date value"""
  Date(
    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Number value"""
  Number(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentNumber value"""
  ParentNumber(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """TransactionsCount value"""
  TransactionsCount(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): Int

  """TxTrieRoot value"""
  TxTrieRoot(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Version value"""
  Version(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Call fields"""
type Tron_DEXTradeByToken_Fields_Call {
  """CallPath value"""
  CallPath(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_DEXTradeByToken_Fields_Call_CallPath_Select_Call_CallPath

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields
  ): [Int]

  """CallerIndex value"""
  CallerIndex(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Create value"""
  Create(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Error value"""
  Error(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """InternalCalls value"""
  InternalCalls(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields
  ): Int

  """Reverted value"""
  Reverted(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """SelfDestruct value"""
  SelfDestruct(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): Boolean

  """Signature fields"""
  Signature: Tron_DEXTradeByToken_Fields_Call_Signature

  """Success value"""
  Success(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields
  ): Boolean

  """To value"""
  To(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Value value"""
  Value(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): String

  """ValueInUSD value"""
  ValueInUSD(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Array of Call_CallPath includes or excludes provided value"""
input Tron_DEXTradeByToken_Fields_Call_CallPath_Select_Call_CallPath {
  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]
}

"""Signature fields"""
type Tron_DEXTradeByToken_Fields_Call_Signature {
  """Abi value"""
  Abi(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Contract fields"""
type Tron_DEXTradeByToken_Fields_Contract {
  """Address value"""
  Address(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """TypeUrl value"""
  TypeUrl(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Log fields"""
type Tron_DEXTradeByToken_Fields_Log {
  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """LogAfterCallIndex value"""
  LogAfterCallIndex(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Signature fields"""
  Signature: Tron_DEXTradeByToken_Fields_Log_Signature

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Signature fields"""
type Tron_DEXTradeByToken_Fields_Log_Signature {
  """Abi value"""
  Abi(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Trade fields"""
type Tron_DEXTradeByToken_Fields_Trade {
  """Amount value"""
  Amount(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): String

  """Buyer value"""
  Buyer(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Currency fields"""
  Currency: Tron_DEXTradeByToken_Fields_Trade_Currency

  """Dex fields"""
  Dex: Tron_DEXTradeByToken_Fields_Trade_Dex

  """Fees value"""
  Fees(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_DEXTradeByToken_Fields_Trade_Fees_Select_Trade_Fees

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields
  ): [Tron_DEXTradeByToken_Fields_Trade_Trade_Fees]

  """Ids value"""
  Ids(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_DEXTradeByToken_Fields_Trade_Ids_Select_Trade_Ids
  ): [String]

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """OrderId value"""
  OrderId(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Price value"""
  Price(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): Float

  """PriceAsymmetry value"""
  PriceAsymmetry(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """PriceInUSD value"""
  PriceInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): Float

  """Seller value"""
  Seller(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Sender value"""
  Sender(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Side fields"""
  Side: Tron_DEXTradeByToken_Fields_Trade_Side

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """URIs value"""
  URIs(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_DEXTradeByToken_Fields_Trade_URIs_Select_Trade_URIs
  ): [String]
}

"""Currency fields"""
type Tron_DEXTradeByToken_Fields_Trade_Currency {
  """AssetId value"""
  AssetId(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): String

  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): String

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): Boolean

  """Name value"""
  Name(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): String

  """Native value"""
  Native(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Dex fields"""
type Tron_DEXTradeByToken_Fields_Trade_Dex {
  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """FeeRecipient value"""
  FeeRecipient(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): String

  """OwnerAddress value"""
  OwnerAddress(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Pair fields"""
  Pair: Tron_DEXTradeByToken_Fields_Trade_Dex_Pair

  """ProtocolFamily value"""
  ProtocolFamily(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): String

  """ProtocolVersion value"""
  ProtocolVersion(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Pair fields"""
type Tron_DEXTradeByToken_Fields_Trade_Dex_Pair {
  """AssetId value"""
  AssetId(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): String
}

"""Selector for Trade_Fees"""
input Tron_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector {
  """Select value for Payer"""
  Payer: OLAP_String

  """Select value for Recipient"""
  Recipient: OLAP_String

  """Select value for Currency"""
  Currency: Tron_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector_FieldSelector

  """Select value for Amount"""
  Amount: EVM_Amount_With_Decimals

  """Select value for AmountInUSD"""
  AmountInUSD: EVM_Amount_With_Decimals
}

"""Selector for Trade_Fees_Currency"""
input Tron_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector_FieldSelector {
  """Select value for SmartContract"""
  SmartContract: OLAP_String

  """Select value for ProtocolName"""
  ProtocolName: OLAP_String

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Symbol"""
  Symbol: OLAP_String

  """Select value for Decimals"""
  Decimals: OLAP_Integer
}

"""Array of Trade_Fees includes or excludes provided value"""
input Tron_DEXTradeByToken_Fields_Trade_Fees_Select_Trade_Fees {
  """Excludes this element"""
  excludes: [Tron_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [Tron_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Tron_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]
}

"""Array of Trade_Ids includes or excludes provided value"""
input Tron_DEXTradeByToken_Fields_Trade_Ids_Select_Trade_Ids {
  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]
}

"""Side fields"""
type Tron_DEXTradeByToken_Fields_Trade_Side {
  """Amount value"""
  Amount(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Buyer value"""
  Buyer(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): String

  """Currency fields"""
  Currency: Tron_DEXTradeByToken_Fields_Trade_Side_Currency

  """Ids value"""
  Ids(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_DEXTradeByToken_Fields_Trade_Side_Ids_Select_Trade_Side_Ids
  ): [String]

  """OrderId value"""
  OrderId(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Seller value"""
  Seller(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): Tron_DEXTradeByToken_Fields_Trade_Side_Trade_Side_Output

  """URIs value"""
  URIs(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_DEXTradeByToken_Fields_Trade_Side_URIs_Select_Trade_Side_URIs

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): [String]
}

"""Currency fields"""
type Tron_DEXTradeByToken_Fields_Trade_Side_Currency {
  """AssetId value"""
  AssetId(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields
  ): String

  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): String

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Native value"""
  Native(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields
  ): String
}

"""Array of Trade_Side_Ids includes or excludes provided value"""
input Tron_DEXTradeByToken_Fields_Trade_Side_Ids_Select_Trade_Side_Ids {
  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]
}

"""Enumeration for Trade_Side"""
enum Tron_DEXTradeByToken_Fields_Trade_Side_Trade_Side_Output {
  """Trade_Side buy"""
  buy

  """Trade_Side sell"""
  sell
}

"""Select filters for Trade_Side"""
input Tron_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side {
  """One of the values"""
  in: [Tron_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input!]

  """Not one of the values"""
  notIn: [Tron_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input!]

  """Exact match"""
  is: Tron_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input

  """Not this"""
  not: Tron_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input
}

"""Enumeration for Trade_Side"""
enum Tron_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input {
  """Trade_Side sell"""
  sell

  """Trade_Side buy"""
  buy
}

"""Array of Trade_Side_URIs includes or excludes provided value"""
input Tron_DEXTradeByToken_Fields_Trade_Side_URIs_Select_Trade_Side_URIs {
  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]
}

"""Trade_Fees fields"""
type Tron_DEXTradeByToken_Fields_Trade_Trade_Fees {
  Amount: String
  AmountInUSD: String
  Currency: Tron_DEXTradeByToken_Fields_Trade_Trade_Fees_Currency
  Payer: String
  Recipient: String
}

"""Trade_Fees_Currency fields"""
type Tron_DEXTradeByToken_Fields_Trade_Trade_Fees_Currency {
  Decimals: Int
  Name: String
  ProtocolName: String
  SmartContract: String
  Symbol: String
}

"""Array of Trade_URIs includes or excludes provided value"""
input Tron_DEXTradeByToken_Fields_Trade_URIs_Select_Trade_URIs {
  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]
}

"""Transaction fields"""
type Tron_DEXTradeByToken_Fields_Transaction {
  """Data value"""
  Data(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Expiration value"""
  Expiration(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """Fee value"""
  Fee(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): String

  """FeeLimit value"""
  FeeLimit(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeLimitInUSD value"""
  FeeLimitInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): String

  """FeePayer value"""
  FeePayer(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Receipt fields"""
  Receipt: Tron_DEXTradeByToken_Fields_Transaction_Receipt

  """Result fields"""
  Result: Tron_DEXTradeByToken_Fields_Transaction_Result

  """Signatures value"""
  Signatures(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_DEXTradeByToken_Fields_Transaction_Signatures_Select_Transaction_Signatures
  ): [String]

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """Timestamp value"""
  Timestamp(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): DateTime
}

"""Receipt fields"""
type Tron_DEXTradeByToken_Fields_Transaction_Receipt {
  """EnergyFee value"""
  EnergyFee(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """EnergyPenaltyTotal value"""
  EnergyPenaltyTotal(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """EnergyUsageTotal value"""
  EnergyUsageTotal(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """NetFee value"""
  NetFee(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """NetFeeInUSD value"""
  NetFeeInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): String

  """NetUsage value"""
  NetUsage(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): String

  """OriginEnergyUsage value"""
  OriginEnergyUsage(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): String

  """Result value"""
  Result(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields
  ): String
}

"""Result fields"""
type Tron_DEXTradeByToken_Fields_Transaction_Result {
  """Message value"""
  Message(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields
  ): String

  """Status value"""
  Status(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Array of Transaction_Signatures includes or excludes provided value"""
input Tron_DEXTradeByToken_Fields_Transaction_Signatures_Select_Transaction_Signatures {
  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]
}

"""TransactionStatus fields"""
type Tron_DEXTradeByToken_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields
  ): String

  """FaultError value"""
  FaultError(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Witness fields"""
type Tron_DEXTradeByToken_Fields_Witness {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Id value"""
  Id(
    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter
  ): String

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Tron_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

input Tron_DEXTradeByToken_Filter {
  """Select by Block"""
  Block: Tron_DEXTradeByToken_Input_Block_InputType

  """Select by Call"""
  Call: Tron_DEXTradeByToken_Input_Call_InputType

  """Select by Log"""
  Log: Tron_DEXTradeByToken_Input_Log_InputType

  """Select by TransactionStatus"""
  TransactionStatus: Tron_DEXTradeByToken_Input_TransactionStatus_InputType

  """Select by Transaction"""
  Transaction: Tron_DEXTradeByToken_Input_Transaction_InputType

  """Select by Witness"""
  Witness: Tron_DEXTradeByToken_Input_Witness_InputType

  """String value"""
  ChainId: OLAP_String

  """Any combination ( as OR ) of supplied conditions"""
  any: [Tron_DEXTradeByToken_FilterAny!]

  """Select by Trade"""
  Trade: Tron_DEXTradeByToken_Input_Trade_InputType

  """Select by Contract"""
  Contract: Tron_DEXTradeByToken_Input_Contract_InputType
}

input Tron_DEXTradeByToken_FilterAny {
  """Select by Transaction"""
  Transaction: Tron_DEXTradeByToken_Input_Transaction_InputType

  """Select by Witness"""
  Witness: Tron_DEXTradeByToken_Input_Witness_InputType

  """Select by Log"""
  Log: Tron_DEXTradeByToken_Input_Log_InputType

  """String value"""
  ChainId: OLAP_String

  """Select by Call"""
  Call: Tron_DEXTradeByToken_Input_Call_InputType

  """Select by Contract"""
  Contract: Tron_DEXTradeByToken_Input_Contract_InputType

  """Select by TransactionStatus"""
  TransactionStatus: Tron_DEXTradeByToken_Input_TransactionStatus_InputType

  """Select by Trade"""
  Trade: Tron_DEXTradeByToken_Input_Trade_InputType

  """Select by Block"""
  Block: Tron_DEXTradeByToken_Input_Block_InputType
}

"""Select by Block"""
input Tron_DEXTradeByToken_Input_Block_InputType {
  ParentNumber: OLAP_BigInteger
  Hash: OLAP_String
  TransactionsCount: OLAP_Integer
  AccountStateRoot: OLAP_String
  Version: OLAP_Integer
  Time: OLAP_DateTime
  Number: OLAP_BigInteger
  TxTrieRoot: OLAP_String
  ParentHash: OLAP_String
  Date: OLAP_Date
}

"""Array of Call_CallPath includes or excludes provided value"""
input Tron_DEXTradeByToken_Input_Call_CallPath_Input_Call_CallPath {
  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]
}

"""Select by Call"""
input Tron_DEXTradeByToken_Input_Call_InputType {
  Delegated: Boolean
  To: OLAP_String
  Reverted: Boolean
  SelfDestruct: Boolean
  CallerIndex: OLAP_Integer
  CallPath: Tron_DEXTradeByToken_Input_Call_CallPath_Input_Call_CallPath
  Value: EVM_Amount_With_Decimals
  InternalCalls: OLAP_Integer
  Error: OLAP_String
  ValueInUSD: EVM_Amount_With_Decimals
  GasUsed: OLAP_BigInteger
  Success: Boolean
  Gas: OLAP_BigInteger
  From: OLAP_String
  Create: Boolean
  Signature: Tron_DEXTradeByToken_Input_Call_Signature_InputType
  Index: OLAP_Integer
}

"""Select by Signature"""
input Tron_DEXTradeByToken_Input_Call_Signature_InputType {
  Signature: OLAP_String
  Type: Boolean
  Abi: OLAP_String
  SignatureHash: OLAP_String
  Name: OLAP_String
  Parsed: Boolean
}

"""Select by Contract"""
input Tron_DEXTradeByToken_Input_Contract_InputType {
  Type: OLAP_String
  Address: OLAP_String
  TypeUrl: OLAP_String
}

"""Select by Log"""
input Tron_DEXTradeByToken_Input_Log_InputType {
  SmartContract: OLAP_String
  Signature: Tron_DEXTradeByToken_Input_Log_Signature_InputType
  LogAfterCallIndex: OLAP_Integer
  Index: OLAP_Integer
}

"""Select by Signature"""
input Tron_DEXTradeByToken_Input_Log_Signature_InputType {
  SignatureHash: OLAP_String
  Name: OLAP_String
  Signature: OLAP_String
  Type: Boolean
  Abi: OLAP_String
  Parsed: Boolean
}

"""Select by Currency"""
input Tron_DEXTradeByToken_Input_Trade_Currency_InputType {
  AssetId: OLAP_String
  Delegated: Boolean
  Native: Boolean
  HasURI: Boolean
  Name: OLAP_String
  Decimals: OLAP_Integer
  ProtocolName: OLAP_String
  Symbol: OLAP_String
  DelegatedTo: OLAP_String
  SmartContract: OLAP_String
  Fungible: Boolean
}

"""Select by Dex"""
input Tron_DEXTradeByToken_Input_Trade_Dex_InputType {
  OwnerAddress: OLAP_String
  FeeRecipient: OLAP_String
  ProtocolName: OLAP_String
  Delegated: Boolean
  ProtocolFamily: OLAP_String
  SmartContract: OLAP_String
  Pair: Tron_DEXTradeByToken_Input_Trade_Dex_Pair_InputType
  DelegatedTo: OLAP_String
  ProtocolVersion: OLAP_String
}

"""Select by Pair"""
input Tron_DEXTradeByToken_Input_Trade_Dex_Pair_InputType {
  SmartContract: OLAP_String
  Name: OLAP_String
  Delegated: Boolean
  AssetId: OLAP_String
  Symbol: OLAP_String
  Decimals: OLAP_Integer
  ProtocolName: OLAP_String
  DelegatedTo: OLAP_String
  HasURI: Boolean
  Fungible: Boolean
}

"""Selector for Trade_Fees"""
input Tron_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector {
  """Select value for Recipient"""
  Recipient: OLAP_String

  """Select value for Currency"""
  Currency: Tron_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector_FieldSelector

  """Select value for Amount"""
  Amount: EVM_Amount_With_Decimals

  """Select value for AmountInUSD"""
  AmountInUSD: EVM_Amount_With_Decimals

  """Select value for Payer"""
  Payer: OLAP_String
}

"""Selector for Trade_Fees_Currency"""
input Tron_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector_FieldSelector {
  """Select value for Decimals"""
  Decimals: OLAP_Integer

  """Select value for SmartContract"""
  SmartContract: OLAP_String

  """Select value for ProtocolName"""
  ProtocolName: OLAP_String

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Symbol"""
  Symbol: OLAP_String
}

"""Array of Trade_Fees includes or excludes provided value"""
input Tron_DEXTradeByToken_Input_Trade_Fees_Input_Trade_Fees {
  """Does not start with this element"""
  notStartsWith: [Tron_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Tron_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [Tron_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]
}

"""Array of Trade_Ids includes or excludes provided value"""
input Tron_DEXTradeByToken_Input_Trade_Ids_Input_Trade_Ids {
  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]
}

"""Select by Trade"""
input Tron_DEXTradeByToken_Input_Trade_InputType {
  PriceAsymmetry: OLAP_Float
  Buyer: OLAP_String
  Fees: Tron_DEXTradeByToken_Input_Trade_Fees_Input_Trade_Fees
  OrderId: OLAP_String
  Seller: OLAP_String
  Ids: Tron_DEXTradeByToken_Input_Trade_Ids_Input_Trade_Ids
  Currency: Tron_DEXTradeByToken_Input_Trade_Currency_InputType
  Side: Tron_DEXTradeByToken_Input_Trade_Side_InputType
  Price: OLAP_Float
  Sender: OLAP_String
  Dex: Tron_DEXTradeByToken_Input_Trade_Dex_InputType
  AmountInUSD: EVM_Amount_With_Decimals
  Amount: EVM_Amount_With_Decimals
  Success: Boolean
  URIs: Tron_DEXTradeByToken_Input_Trade_URIs_Input_Trade_URIs
  PriceInUSD: OLAP_Float
  Index: OLAP_Integer
}

"""Select by Currency"""
input Tron_DEXTradeByToken_Input_Trade_Side_Currency_InputType {
  HasURI: Boolean
  AssetId: OLAP_String
  Name: OLAP_String
  DelegatedTo: OLAP_String
  SmartContract: OLAP_String
  Decimals: OLAP_Integer
  Fungible: Boolean
  Delegated: Boolean
  Symbol: OLAP_String
  Native: Boolean
  ProtocolName: OLAP_String
}

"""Array of Trade_Side_Ids includes or excludes provided value"""
input Tron_DEXTradeByToken_Input_Trade_Side_Ids_Input_Trade_Side_Ids {
  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]
}

"""Select by Side"""
input Tron_DEXTradeByToken_Input_Trade_Side_InputType {
  Currency: Tron_DEXTradeByToken_Input_Trade_Side_Currency_InputType
  Seller: OLAP_String
  Type: Tron_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side
  Buyer: OLAP_String
  AmountInUSD: EVM_Amount_With_Decimals
  OrderId: OLAP_String
  URIs: Tron_DEXTradeByToken_Input_Trade_Side_URIs_Input_Trade_Side_URIs
  Ids: Tron_DEXTradeByToken_Input_Trade_Side_Ids_Input_Trade_Side_Ids
  Amount: EVM_Amount_With_Decimals
}

"""Select filters for Trade_Side"""
input Tron_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side {
  """Exact match"""
  is: Tron_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input

  """Not this"""
  not: Tron_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input

  """One of the values"""
  in: [Tron_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input!]

  """Not one of the values"""
  notIn: [Tron_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input!]
}

"""Enumeration for Trade_Side"""
enum Tron_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input {
  """Trade_Side buy"""
  buy

  """Trade_Side sell"""
  sell
}

"""Array of Trade_Side_URIs includes or excludes provided value"""
input Tron_DEXTradeByToken_Input_Trade_Side_URIs_Input_Trade_Side_URIs {
  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]
}

"""Array of Trade_URIs includes or excludes provided value"""
input Tron_DEXTradeByToken_Input_Trade_URIs_Input_Trade_URIs {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]
}

"""Select by Transaction"""
input Tron_DEXTradeByToken_Input_Transaction_InputType {
  Receipt: Tron_DEXTradeByToken_Input_Transaction_Receipt_InputType
  Result: Tron_DEXTradeByToken_Input_Transaction_Result_InputType
  FeeInUSD: EVM_Amount_With_Decimals
  FeePayer: OLAP_String
  FeeLimitInUSD: EVM_Amount_With_Decimals
  Fee: EVM_Amount_With_Decimals
  Timestamp: OLAP_DateTime
  Index: OLAP_Integer
  FeeLimit: EVM_Amount_With_Decimals
  Hash: OLAP_String
  Data: OLAP_String
  Expiration: OLAP_DateTime
  Time: OLAP_DateTime
  Signatures: Tron_DEXTradeByToken_Input_Transaction_Signatures_Input_Transaction_Signatures
}

"""Select by Receipt"""
input Tron_DEXTradeByToken_Input_Transaction_Receipt_InputType {
  EnergyFee: OLAP_BigInteger
  OriginEnergyUsage: OLAP_BigInteger
  NetUsage: OLAP_BigInteger
  EnergyPenaltyTotal: OLAP_BigInteger
  NetFee: EVM_Amount_With_Decimals
  NetFeeInUSD: EVM_Amount_With_Decimals
  EnergyUsageTotal: OLAP_BigInteger
  Result: OLAP_String
}

"""Select by Result"""
input Tron_DEXTradeByToken_Input_Transaction_Result_InputType {
  Success: Boolean
  Status: OLAP_String
  Message: OLAP_String
}

"""Array of Transaction_Signatures includes or excludes provided value"""
input Tron_DEXTradeByToken_Input_Transaction_Signatures_Input_Transaction_Signatures {
  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]
}

"""Select by TransactionStatus"""
input Tron_DEXTradeByToken_Input_TransactionStatus_InputType {
  Success: Boolean
  EndError: OLAP_String
  FaultError: OLAP_String
}

"""Select by Witness"""
input Tron_DEXTradeByToken_Input_Witness_InputType {
  Signature: OLAP_String
  Address: OLAP_String
  Id: OLAP_BigInteger
}

"""Limit definition"""
input Tron_DEXTradeByToken_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input Tron_DEXTradeByToken_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [Tron_DEXTradeByToken_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum Tron_DEXTradeByToken_NumFields {
  Trade_Price
  Call_Gas
  Log_LogAfterCallIndex
  Log_Index
  Block_ParentNumber
  Trade_AmountInUSD
  Trade_Side_Currency_Decimals
  Transaction_Receipt_EnergyUsageTotal
  Trade_Dex_Pair_Decimals
  Trade_Index
  Trade_Amount
  Trade_PriceAsymmetry
  Trade_Currency_Decimals
  Transaction_Receipt_EnergyFee
  Transaction_FeeLimit
  Block_Number
  Transaction_FeeInUSD
  Transaction_Receipt_OriginEnergyUsage
  Transaction_Receipt_NetFeeInUSD
  Transaction_Index
  Transaction_Receipt_EnergyPenaltyTotal
  Transaction_Receipt_NetUsage
  Transaction_Fee
  Transaction_FeeLimitInUSD
  Call_InternalCalls
  Trade_PriceInUSD
  Block_Version
  Trade_Side_AmountInUSD
  Call_Value
  Witness_Id
  Block_TransactionsCount
  Transaction_Receipt_NetFee
  Trade_Side_Amount
  Call_GasUsed
  Call_Index
  Call_ValueInUSD
  Call_CallerIndex
}

"""Order by"""
input Tron_DEXTradeByToken_Ordering {
  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String

  """Select a field to sort ascending"""
  ascending: Tron_DEXTradeByToken_EnumFields

  """Select a field to sort descending"""
  descending: Tron_DEXTradeByToken_EnumFields
}

"""Listed names of string fields in a cube"""
enum Tron_DEXTradeByToken_StringFields {
  Call_Signature_Signature
  Trade_Dex_Pair_Name
  Block_AccountStateRoot
  Call_Value
  Log_SmartContract
  Trade_Currency_Symbol
  Transaction_Receipt_EnergyUsageTotal
  Contract_Type
  Transaction_FeePayer
  Block_ParentHash
  Block_Number
  Trade_Side_Currency_Name
  Witness_Id
  Transaction_Fee
  Transaction_Receipt_OriginEnergyUsage
  Log_Signature_Abi
  Block_Date
  Trade_Side_Currency_DelegatedTo
  Call_Gas
  Trade_Side_Currency_SmartContract
  Contract_TypeUrl
  Log_Signature_Name
  Block_Hash
  Trade_Dex_SmartContract
  Trade_Dex_Pair_Symbol
  Call_ValueInUSD
  Trade_Dex_Pair_ProtocolName
  Trade_Sender
  Call_Error
  Trade_Currency_DelegatedTo
  Trade_Dex_DelegatedTo
  Trade_Dex_ProtocolFamily
  ChainId
  Witness_Address
  Transaction_FeeInUSD
  Block_ParentNumber
  Transaction_Result_Message
  Trade_Side_Buyer
  Trade_Dex_Pair_SmartContract
  Trade_Dex_FeeRecipient
  Transaction_Data
  Trade_Dex_Pair_AssetId
  Trade_Side_Currency_AssetId
  Trade_Side_AmountInUSD
  Transaction_FeeLimit
  Log_Signature_SignatureHash
  Trade_Dex_ProtocolVersion
  Trade_Dex_ProtocolName
  Call_Signature_SignatureHash
  Trade_Side_OrderId
  Trade_Currency_SmartContract
  Transaction_Result_Status
  Block_TxTrieRoot
  Trade_Seller
  Transaction_Receipt_EnergyPenaltyTotal
  Transaction_Receipt_Result
  Trade_Amount
  Trade_OrderId
  Trade_Buyer
  Trade_AmountInUSD
  TransactionStatus_EndError
  Trade_Side_Amount
  Call_To
  Witness_Signature
  Transaction_Hash
  Call_Signature_Name
  TransactionStatus_FaultError
  Trade_Dex_OwnerAddress
  Trade_Currency_ProtocolName
  Call_From
  Call_GasUsed
  Trade_Currency_Name
  Transaction_Receipt_EnergyFee
  Transaction_Receipt_NetFeeInUSD
  Transaction_Receipt_NetFee
  Trade_Side_Seller
  Trade_Side_Currency_ProtocolName
  Transaction_Receipt_NetUsage
  Transaction_FeeLimitInUSD
  Trade_Dex_Pair_DelegatedTo
  Contract_Address
  Trade_Side_Currency_Symbol
  Log_Signature_Signature
  Trade_Currency_AssetId
  Call_Signature_Abi
}

"""Listed names of comparable fields in a cube"""
enum Tron_Event_CompareFields {
  Transaction_Fee
  Transaction_Time
  Call_Delegated
  Call_Reverted
  Block_ParentNumber
  Transaction_Receipt_EnergyPenaltyTotal
  Transaction_FeeLimitInUSD
  Transaction_Timestamp
  Log_Signature_Parsed
  Log_Pc
  Log_EnterIndex
  Block_Time
  Block_Number
  Transaction_FeeLimit
  Transaction_Receipt_NetFee
  Transaction_Index
  TransactionStatus_Success
  Call_Signature_Type
  Log_ExitIndex
  Transaction_Receipt_NetUsage
  Transaction_Receipt_EnergyFee
  Transaction_Receipt_EnergyUsageTotal
  Log_LogAfterCallIndex
  Transaction_Expiration
  Block_TransactionsCount
  Block_Date
  Transaction_Receipt_OriginEnergyUsage
  Call_GasUsed
  Transaction_Receipt_NetFeeInUSD
  Call_Gas
  Log_Signature_Type
  Call_Index
  Transaction_FeeInUSD
  Call_SelfDestruct
  LogHeader_Removed
  Log_Index
  Call_ValueInUSD
  LogHeader_Index
  Call_Success
  Call_CallerIndex
  Transaction_Result_Success
  Block_Version
  Call_Create
  Witness_Id
  Call_Signature_Parsed
  Call_InternalCalls
  Call_Value
  LogHeader_AddressCode_Size
}

"""Smart contract log events in Tron Blockchain"""
type Tron_Event_Cube {
  """Arguments value"""
  Arguments(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_Event_Fields_Arguments_Select_Arguments

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields
  ): [Tron_Event_Fields_Arguments]

  """Block fields"""
  Block: Tron_Event_Fields_Block

  """Call fields"""
  Call: Tron_Event_Fields_Call

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Contract fields"""
  Contract: Tron_Event_Fields_Contract

  """Log fields"""
  Log: Tron_Event_Fields_Log

  """LogHeader fields"""
  LogHeader: Tron_Event_Fields_LogHeader

  """Topics value"""
  Topics(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_Event_Fields_Topics_Select_Topics
  ): [Tron_Event_Fields_Topics]

  """Transaction fields"""
  Transaction: Tron_Event_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: Tron_Event_Fields_TransactionStatus

  """Witness fields"""
  Witness: Tron_Event_Fields_Witness

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: Tron_Event_StringFields!

    """Side2 argument"""
    side2: Tron_Event_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: Tron_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: Tron_Event_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: Tron_Event_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Tron_Event_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Tron_Event_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [Tron_Event_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: Tron_Event_NumFields

    """Second argument for Covariance between two arguments"""
    with: Tron_Event_NumFields
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Tron_Event_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Tron_Event_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Tron_Event_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Tron_Event_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: Tron_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: Tron_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: Tron_Event_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: Tron_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: Tron_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: Tron_Event_NumFields!
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: Tron_Event_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """First argument for Rank correlation coefficient between two arguments"""
    of: Tron_Event_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: Tron_Event_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Argument for Skew for a set of values"""
    of: Tron_Event_NumFields!
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: Tron_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: Tron_Event_NumFields!
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: Tron_Event_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Tron_Event_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Tron_Event_NumFields
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [Tron_Event_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum Tron_Event_EnumFields {
  Log_Signature_SignatureHash
  Block_AccountStateRoot
  Transaction_Result_Success
  Transaction_Receipt_NetFee
  Call_Value
  Contract_Address
  Arguments
  Call_Signature_Type
  Log_Signature_Name
  Call_Index
  Transaction_Expiration
  Block_Version
  Block_Hash
  Call_Signature_SignatureHash
  Witness_Signature
  Call_Delegated
  Transaction_Receipt_EnergyUsageTotal
  Transaction_Result_Status
  Transaction_Timestamp
  Call_InternalCalls
  Call_Create
  Call_Signature_Name
  Call_Gas
  Transaction_Receipt_EnergyFee
  Block_ParentHash
  Transaction_Time
  Log_ExitIndex
  Block_Number
  Call_CallPath
  Call_Success
  Call_Signature_Signature
  Call_Reverted
  TransactionStatus_EndError
  Call_Error
  Transaction_FeeInUSD
  Call_SelfDestruct
  Log_EnterIndex
  Transaction_Receipt_NetFeeInUSD
  Block_TransactionsCount
  TransactionStatus_Success
  Transaction_Receipt_OriginEnergyUsage
  Log_Index
  Call_Signature_Parsed
  Block_Time
  Call_Signature_Abi
  Call_CallerIndex
  ChainId
  Log_Signature_Abi
  Transaction_Index
  Transaction_Fee
  LogHeader_Data
  Log_LogAfterCallIndex
  Transaction_Receipt_Result
  Transaction_Hash
  Witness_Address
  Block_Date
  LogHeader_AddressCode_Size
  TransactionStatus_FaultError
  Transaction_Receipt_NetUsage
  Transaction_Signatures
  Call_From
  Block_TxTrieRoot
  LogHeader_Removed
  Log_SmartContract
  Contract_Type
  Witness_Id
  Call_ValueInUSD
  Call_To
  Log_Pc
  Log_Signature_Signature
  Block_ParentNumber
  Transaction_Receipt_EnergyPenaltyTotal
  Contract_TypeUrl
  Transaction_Result_Message
  Topics
  Log_Signature_Type
  Log_Signature_Parsed
  Transaction_Data
  Call_GasUsed
  LogHeader_Index
  Transaction_FeeLimit
  Transaction_FeeLimitInUSD
  Transaction_FeePayer
  LogHeader_Address
}

"""Arguments fields"""
type Tron_Event_Fields_Arguments {
  Index: Int
  Name: String
  Path: [Tron_Event_Fields_Arguments_Path]
  Type: String
  Value: EVM_ABI_Value_Union
}

"""Arguments_Path fields"""
type Tron_Event_Fields_Arguments_Path {
  Index: Int
  Name: String
  Type: String
}

"""Array of Arguments includes or excludes provided value"""
input Tron_Event_Fields_Arguments_Select_Arguments {
  """Does not End with this element"""
  notEndsWith: [Tron_Event_Fields_Arguments_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_Event_Fields_Arguments_Select_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_Event_Fields_Arguments_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_Event_Fields_Arguments_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [Tron_Event_Fields_Arguments_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_Event_Fields_Arguments_Select_FieldSelector]
}

"""Selector for Arguments"""
input Tron_Event_Fields_Arguments_Select_FieldSelector {
  """Select value for Path"""
  Path: Tron_Event_Fields_Arguments_Select_FieldSelector_Arguments_Path

  """Select value for Value"""
  Value: EVM_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer
}

"""Array of Arguments_Path includes or excludes provided value"""
input Tron_Event_Fields_Arguments_Select_FieldSelector_Arguments_Path {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Ends with this element"""
  endsWith: [Tron_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Tron_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]
}

"""Selector for Arguments_Path"""
input Tron_Event_Fields_Arguments_Select_FieldSelector_FieldSelector {
  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String
}

"""Block fields"""
type Tron_Event_Fields_Block {
  """AccountStateRoot value"""
  AccountStateRoot(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Number value"""
  Number(
    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentNumber value"""
  ParentNumber(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Time value"""
  Time(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields
  ): DateTime

  """TransactionsCount value"""
  TransactionsCount(
    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields
  ): Int

  """TxTrieRoot value"""
  TxTrieRoot(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Version value"""
  Version(
    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): Int
}

"""Call fields"""
type Tron_Event_Fields_Call {
  """CallPath value"""
  CallPath(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_Event_Fields_Call_CallPath_Select_Call_CallPath
  ): [Int]

  """CallerIndex value"""
  CallerIndex(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Create value"""
  Create(
    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields
  ): Boolean

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Error value"""
  Error(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Index value"""
  Index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields
  ): Int

  """InternalCalls value"""
  InternalCalls(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Reverted value"""
  Reverted(
    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields
  ): Boolean

  """SelfDestruct value"""
  SelfDestruct(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature fields"""
  Signature: Tron_Event_Fields_Call_Signature

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """To value"""
  To(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Value value"""
  Value(
    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): String

  """ValueInUSD value"""
  ValueInUSD(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Array of Call_CallPath includes or excludes provided value"""
input Tron_Event_Fields_Call_CallPath_Select_Call_CallPath {
  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]
}

"""Signature fields"""
type Tron_Event_Fields_Call_Signature {
  """Abi value"""
  Abi(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields
  ): String

  """SignatureHash value"""
  SignatureHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Contract fields"""
type Tron_Event_Fields_Contract {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """TypeUrl value"""
  TypeUrl(
    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields
  ): String
}

"""Log fields"""
type Tron_Event_Fields_Log {
  """EnterIndex value"""
  EnterIndex(
    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): Int

  """ExitIndex value"""
  ExitIndex(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Index value"""
  Index(
    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): Int

  """LogAfterCallIndex value"""
  LogAfterCallIndex(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields
  ): Int

  """Pc value"""
  Pc(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Signature fields"""
  Signature: Tron_Event_Fields_Log_Signature

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Signature fields"""
type Tron_Event_Fields_Log_Signature {
  """Abi value"""
  Abi(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields
  ): Boolean

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""LogHeader fields"""
type Tron_Event_Fields_LogHeader {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """AddressCode fields"""
  AddressCode: Tron_Event_Fields_LogHeader_AddressCode

  """Data value"""
  Data(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Removed value"""
  Removed(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""AddressCode fields"""
type Tron_Event_Fields_LogHeader_AddressCode {
  """Size value"""
  Size(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Topics fields"""
type Tron_Event_Fields_Topics {
  Hash: String
}

"""Selector for Topics"""
input Tron_Event_Fields_Topics_Select_FieldSelector {
  """Select value for Hash"""
  Hash: OLAP_String
}

"""Array of Topics includes or excludes provided value"""
input Tron_Event_Fields_Topics_Select_Topics {
  """Ends with this element"""
  endsWith: [Tron_Event_Fields_Topics_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_Event_Fields_Topics_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Tron_Event_Fields_Topics_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_Event_Fields_Topics_Select_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_Event_Fields_Topics_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_Event_Fields_Topics_Select_FieldSelector]
}

"""Transaction fields"""
type Tron_Event_Fields_Transaction {
  """Data value"""
  Data(
    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): String

  """Expiration value"""
  Expiration(
    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): DateTime

  """Fee value"""
  Fee(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields
  ): String

  """FeeLimit value"""
  FeeLimit(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeLimitInUSD value"""
  FeeLimitInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields
  ): String

  """FeePayer value"""
  FeePayer(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields
  ): String

  """Index value"""
  Index(
    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): Int

  """Receipt fields"""
  Receipt: Tron_Event_Fields_Transaction_Receipt

  """Result fields"""
  Result: Tron_Event_Fields_Transaction_Result

  """Signatures value"""
  Signatures(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_Event_Fields_Transaction_Signatures_Select_Transaction_Signatures
  ): [String]

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """Timestamp value"""
  Timestamp(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime
}

"""Receipt fields"""
type Tron_Event_Fields_Transaction_Receipt {
  """EnergyFee value"""
  EnergyFee(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """EnergyPenaltyTotal value"""
  EnergyPenaltyTotal(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """EnergyUsageTotal value"""
  EnergyUsageTotal(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """NetFee value"""
  NetFee(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """NetFeeInUSD value"""
  NetFeeInUSD(
    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter
  ): String

  """NetUsage value"""
  NetUsage(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields
  ): String

  """OriginEnergyUsage value"""
  OriginEnergyUsage(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Result value"""
  Result(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Result fields"""
type Tron_Event_Fields_Transaction_Result {
  """Message value"""
  Message(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Status value"""
  Status(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Array of Transaction_Signatures includes or excludes provided value"""
input Tron_Event_Fields_Transaction_Signatures_Select_Transaction_Signatures {
  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]
}

"""TransactionStatus fields"""
type Tron_Event_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """FaultError value"""
  FaultError(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields
  ): Boolean
}

"""Witness fields"""
type Tron_Event_Fields_Witness {
  """Address value"""
  Address(
    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields
  ): String

  """Id value"""
  Id(
    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields
  ): String

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Tron_Event_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

input Tron_Event_Filter {
  """Select by Call"""
  Call: Tron_Event_Input_Call_InputType

  """Select by TransactionStatus"""
  TransactionStatus: Tron_Event_Input_TransactionStatus_InputType

  """String value"""
  ChainId: OLAP_String

  """Select by Block"""
  Block: Tron_Event_Input_Block_InputType

  """Select by Transaction"""
  Transaction: Tron_Event_Input_Transaction_InputType

  """Select by Witness"""
  Witness: Tron_Event_Input_Witness_InputType

  """Select by Log"""
  Log: Tron_Event_Input_Log_InputType

  """Any combination ( as OR ) of supplied conditions"""
  any: [Tron_Event_FilterAny!]

  """Array of Arguments includes or excludes provided value"""
  Arguments: Tron_Event_Input_Arguments_Input_Arguments

  """Select by Contract"""
  Contract: Tron_Event_Input_Contract_InputType

  """Select by LogHeader"""
  LogHeader: Tron_Event_Input_LogHeader_InputType

  """Array of Topics includes or excludes provided value"""
  Topics: Tron_Event_Input_Topics_Input_Topics
}

input Tron_Event_FilterAny {
  """Array of Arguments includes or excludes provided value"""
  Arguments: Tron_Event_Input_Arguments_Input_Arguments

  """Select by Contract"""
  Contract: Tron_Event_Input_Contract_InputType

  """Select by Transaction"""
  Transaction: Tron_Event_Input_Transaction_InputType

  """Select by Log"""
  Log: Tron_Event_Input_Log_InputType

  """Array of Topics includes or excludes provided value"""
  Topics: Tron_Event_Input_Topics_Input_Topics

  """String value"""
  ChainId: OLAP_String

  """Select by Call"""
  Call: Tron_Event_Input_Call_InputType

  """Select by TransactionStatus"""
  TransactionStatus: Tron_Event_Input_TransactionStatus_InputType

  """Select by Witness"""
  Witness: Tron_Event_Input_Witness_InputType

  """Select by LogHeader"""
  LogHeader: Tron_Event_Input_LogHeader_InputType

  """Select by Block"""
  Block: Tron_Event_Input_Block_InputType
}

"""Array of Arguments includes or excludes provided value"""
input Tron_Event_Input_Arguments_Input_Arguments {
  """Starts with this element"""
  startsWith: [Tron_Event_Input_Arguments_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [Tron_Event_Input_Arguments_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_Event_Input_Arguments_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Tron_Event_Input_Arguments_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_Event_Input_Arguments_Input_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_Event_Input_Arguments_Input_FieldSelector]
}

"""Selector for Arguments"""
input Tron_Event_Input_Arguments_Input_FieldSelector {
  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Path"""
  Path: Tron_Event_Input_Arguments_Input_FieldSelector_Arguments_Path

  """Select value for Value"""
  Value: EVM_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String
}

"""Array of Arguments_Path includes or excludes provided value"""
input Tron_Event_Input_Arguments_Input_FieldSelector_Arguments_Path {
  """Starts with this element"""
  startsWith: [Tron_Event_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Ends with this element"""
  endsWith: [Tron_Event_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_Event_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Tron_Event_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_Event_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_Event_Input_Arguments_Input_FieldSelector_FieldSelector]
}

"""Selector for Arguments_Path"""
input Tron_Event_Input_Arguments_Input_FieldSelector_FieldSelector {
  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String
}

"""Select by Block"""
input Tron_Event_Input_Block_InputType {
  ParentHash: OLAP_String
  AccountStateRoot: OLAP_String
  Date: OLAP_Date
  ParentNumber: OLAP_BigInteger
  Time: OLAP_DateTime
  TxTrieRoot: OLAP_String
  TransactionsCount: OLAP_Integer
  Number: OLAP_BigInteger
  Version: OLAP_Integer
  Hash: OLAP_String
}

"""Array of Call_CallPath includes or excludes provided value"""
input Tron_Event_Input_Call_CallPath_Input_Call_CallPath {
  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]
}

"""Select by Call"""
input Tron_Event_Input_Call_InputType {
  Reverted: Boolean
  Success: Boolean
  SelfDestruct: Boolean
  Error: OLAP_String
  Gas: OLAP_BigInteger
  From: OLAP_String
  CallPath: Tron_Event_Input_Call_CallPath_Input_Call_CallPath
  Index: OLAP_Integer
  GasUsed: OLAP_BigInteger
  CallerIndex: OLAP_Integer
  Create: Boolean
  Signature: Tron_Event_Input_Call_Signature_InputType
  To: OLAP_String
  Delegated: Boolean
  ValueInUSD: EVM_Amount_With_Decimals
  InternalCalls: OLAP_Integer
  Value: EVM_Amount_With_Decimals
}

"""Select by Signature"""
input Tron_Event_Input_Call_Signature_InputType {
  Signature: OLAP_String
  Parsed: Boolean
  Type: Boolean
  SignatureHash: OLAP_String
  Abi: OLAP_String
  Name: OLAP_String
}

"""Select by Contract"""
input Tron_Event_Input_Contract_InputType {
  Type: OLAP_String
  TypeUrl: OLAP_String
  Address: OLAP_String
}

"""Select by Log"""
input Tron_Event_Input_Log_InputType {
  Pc: OLAP_BigInteger
  LogAfterCallIndex: OLAP_Integer
  Index: OLAP_Integer
  ExitIndex: OLAP_Integer
  SmartContract: OLAP_String
  Signature: Tron_Event_Input_Log_Signature_InputType
  EnterIndex: OLAP_Integer
}

"""Select by Signature"""
input Tron_Event_Input_Log_Signature_InputType {
  Name: OLAP_String
  Signature: OLAP_String
  Type: Boolean
  Parsed: Boolean
  Abi: OLAP_String
  SignatureHash: OLAP_String
}

"""Select by AddressCode"""
input Tron_Event_Input_LogHeader_AddressCode_InputType {
  Size: OLAP_Integer
}

"""Select by LogHeader"""
input Tron_Event_Input_LogHeader_InputType {
  AddressCode: Tron_Event_Input_LogHeader_AddressCode_InputType
  Address: OLAP_String
  Data: OLAP_String
  Index: OLAP_BigInteger
  Removed: Boolean
}

"""Selector for Topics"""
input Tron_Event_Input_Topics_Input_FieldSelector {
  """Select value for Hash"""
  Hash: OLAP_String
}

"""Array of Topics includes or excludes provided value"""
input Tron_Event_Input_Topics_Input_Topics {
  """Ends with this element"""
  endsWith: [Tron_Event_Input_Topics_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [Tron_Event_Input_Topics_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [Tron_Event_Input_Topics_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [Tron_Event_Input_Topics_Input_FieldSelector]

  """Excludes this element"""
  excludes: [Tron_Event_Input_Topics_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [Tron_Event_Input_Topics_Input_FieldSelector]
}

"""Select by Transaction"""
input Tron_Event_Input_Transaction_InputType {
  FeeLimit: EVM_Amount_With_Decimals
  FeePayer: OLAP_String
  FeeInUSD: EVM_Amount_With_Decimals
  Signatures: Tron_Event_Input_Transaction_Signatures_Input_Transaction_Signatures
  Receipt: Tron_Event_Input_Transaction_Receipt_InputType
  FeeLimitInUSD: EVM_Amount_With_Decimals
  Time: OLAP_DateTime
  Expiration: OLAP_DateTime
  Data: OLAP_String
  Hash: OLAP_String
  Result: Tron_Event_Input_Transaction_Result_InputType
  Index: OLAP_Integer
  Fee: EVM_Amount_With_Decimals
  Timestamp: OLAP_DateTime
}

"""Select by Receipt"""
input Tron_Event_Input_Transaction_Receipt_InputType {
  NetFee: EVM_Amount_With_Decimals
  NetFeeInUSD: EVM_Amount_With_Decimals
  EnergyFee: OLAP_BigInteger
  EnergyUsageTotal: OLAP_BigInteger
  OriginEnergyUsage: OLAP_BigInteger
  Result: OLAP_String
  EnergyPenaltyTotal: OLAP_BigInteger
  NetUsage: OLAP_BigInteger
}

"""Select by Result"""
input Tron_Event_Input_Transaction_Result_InputType {
  Message: OLAP_String
  Success: Boolean
  Status: OLAP_String
}

"""Array of Transaction_Signatures includes or excludes provided value"""
input Tron_Event_Input_Transaction_Signatures_Input_Transaction_Signatures {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]
}

"""Select by TransactionStatus"""
input Tron_Event_Input_TransactionStatus_InputType {
  Success: Boolean
  FaultError: OLAP_String
  EndError: OLAP_String
}

"""Select by Witness"""
input Tron_Event_Input_Witness_InputType {
  Address: OLAP_String
  Id: OLAP_BigInteger
  Signature: OLAP_String
}

"""Limit definition"""
input Tron_Event_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input Tron_Event_LimitBy {
  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [Tron_Event_EnumFields!]

  """Max count in results"""
  count: Int = 0
}

"""Listed names of numeric fields in a cube"""
enum Tron_Event_NumFields {
  Transaction_Fee
  Log_EnterIndex
  Transaction_Receipt_OriginEnergyUsage
  Log_LogAfterCallIndex
  Call_ValueInUSD
  Transaction_Receipt_EnergyFee
  Call_InternalCalls
  LogHeader_AddressCode_Size
  Log_Pc
  Block_Number
  Transaction_Receipt_NetFeeInUSD
  Transaction_Receipt_NetUsage
  Block_TransactionsCount
  Transaction_Receipt_EnergyUsageTotal
  Call_GasUsed
  Call_CallerIndex
  Block_Version
  Transaction_Receipt_EnergyPenaltyTotal
  Transaction_FeeLimitInUSD
  Transaction_Index
  Witness_Id
  Transaction_Receipt_NetFee
  Call_Value
  Transaction_FeeInUSD
  Log_Index
  Block_ParentNumber
  Call_Index
  Log_ExitIndex
  LogHeader_Index
  Transaction_FeeLimit
  Call_Gas
}

"""Order by"""
input Tron_Event_Ordering {
  """Select a field to sort ascending"""
  ascending: Tron_Event_EnumFields

  """Select a field to sort descending"""
  descending: Tron_Event_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum Tron_Event_StringFields {
  Transaction_Receipt_Result
  Log_Signature_Abi
  Transaction_Receipt_NetFee
  Transaction_FeePayer
  Call_Signature_Name
  Transaction_Receipt_OriginEnergyUsage
  Log_Signature_Signature
  Call_To
  Contract_Type
  Contract_Address
  Call_ValueInUSD
  Block_AccountStateRoot
  Log_Pc
  Transaction_Receipt_NetUsage
  Transaction_Result_Message
  Block_TxTrieRoot
  Transaction_FeeLimitInUSD
  Transaction_Data
  Log_Signature_SignatureHash
  ChainId
  TransactionStatus_FaultError
  LogHeader_Index
  Call_Error
  Transaction_FeeInUSD
  Witness_Id
  Block_Hash
  Call_Signature_Signature
  Log_SmartContract
  Contract_TypeUrl
  Call_Signature_Abi
  Transaction_Receipt_EnergyFee
  LogHeader_Address
  Transaction_Hash
  Witness_Address
  TransactionStatus_EndError
  Call_Signature_SignatureHash
  Call_Value
  Witness_Signature
  Transaction_Receipt_EnergyPenaltyTotal
  Block_ParentHash
  Transaction_Result_Status
  Transaction_Receipt_NetFeeInUSD
  LogHeader_Data
  Log_Signature_Name
  Call_GasUsed
  Block_ParentNumber
  Block_Date
  Call_Gas
  Transaction_Fee
  Transaction_Receipt_EnergyUsageTotal
  Block_Number
  Call_From
  Transaction_FeeLimit
}

"""Blockchain network selection"""
enum tron_network {
  """Tron Mainnet"""
  tron
}

"""Tron type blockchain schema"""
type Tron_Subscription {
  BalanceUpdates(
    """Conditions on query to filter results"""
    where: Tron_BalanceUpdate_Filter

    """Field ordering"""
    orderBy: [Tron_BalanceUpdate_Ordering!]

    """Response limits by specified field"""
    limitBy: Tron_BalanceUpdate_LimitBy

    """Response limits"""
    limit: Tron_BalanceUpdate_Limit
  ): [Tron_BalanceUpdate_Cube!]
  Blocks(
    """Conditions on query to filter results"""
    where: Tron_Block_Filter

    """Field ordering"""
    orderBy: [Tron_Block_Ordering!]

    """Response limits by specified field"""
    limitBy: Tron_Block_LimitBy

    """Response limits"""
    limit: Tron_Block_Limit
  ): [Tron_Block_Cube!]
  Calls(
    """Conditions on query to filter results"""
    where: Tron_Call_Filter

    """Field ordering"""
    orderBy: [Tron_Call_Ordering!]

    """Response limits by specified field"""
    limitBy: Tron_Call_LimitBy

    """Response limits"""
    limit: Tron_Call_Limit
  ): [Tron_Call_Cube!]
  DEXTradeByTokens(
    """Conditions on query to filter results"""
    where: Tron_DEXTradeByToken_Filter

    """Field ordering"""
    orderBy: [Tron_DEXTradeByToken_Ordering!]

    """Response limits by specified field"""
    limitBy: Tron_DEXTradeByToken_LimitBy

    """Response limits"""
    limit: Tron_DEXTradeByToken_Limit
  ): [Tron_DEXTradeByToken_Cube!]
  DEXTrades(
    """Response limits"""
    limit: Tron_DEXTrade_Limit

    """Conditions on query to filter results"""
    where: Tron_DEXTrade_Filter

    """Field ordering"""
    orderBy: [Tron_DEXTrade_Ordering!]

    """Response limits by specified field"""
    limitBy: Tron_DEXTrade_LimitBy
  ): [Tron_DEXTrade_Cube!]
  Events(
    """Conditions on query to filter results"""
    where: Tron_Event_Filter

    """Field ordering"""
    orderBy: [Tron_Event_Ordering!]

    """Response limits by specified field"""
    limitBy: Tron_Event_LimitBy

    """Response limits"""
    limit: Tron_Event_Limit
  ): [Tron_Event_Cube!]
  Transactions(
    """Field ordering"""
    orderBy: [Tron_Transaction_Ordering!]

    """Response limits by specified field"""
    limitBy: Tron_Transaction_LimitBy

    """Response limits"""
    limit: Tron_Transaction_Limit

    """Conditions on query to filter results"""
    where: Tron_Transaction_Filter
  ): [Tron_Transaction_Cube!]
  Transfers(
    """Conditions on query to filter results"""
    where: Tron_Transfer_Filter

    """Field ordering"""
    orderBy: [Tron_Transfer_Ordering!]

    """Response limits by specified field"""
    limitBy: Tron_Transfer_LimitBy

    """Response limits"""
    limit: Tron_Transfer_Limit
  ): [Tron_Transfer_Cube!]
}

"""Listed names of comparable fields in a cube"""
enum Tron_Transaction_CompareFields {
  Transaction_Expiration
  Transaction_Timestamp
  Transaction_Time
  Witness_Id
  Block_Time
  Transaction_Receipt_EnergyFee
  Block_TransactionsCount
  Transaction_Receipt_OriginEnergyUsage
  Transaction_FeeLimitInUSD
  Transaction_Receipt_EnergyPenaltyTotal
  Transaction_FeeInUSD
  Contract_LogsCount
  Block_Date
  Transaction_Fee
  Transaction_Result_Success
  Block_ParentNumber
  Contract_ArgumentsCount
  Contract_ExecutionResultsCount
  Transaction_Receipt_EnergyUsageTotal
  Transaction_Receipt_NetUsage
  Transaction_Receipt_NetFeeInUSD
  Block_Number
  Block_Version
  Transaction_Receipt_NetFee
  Transaction_FeeLimit
  Contract_InternalTransactionsCount
  Transaction_Index
}

"""Transactions in Tron Blockchain"""
type Tron_Transaction_Cube {
  """Block fields"""
  Block: Tron_Transaction_Fields_Block

  """ChainId value"""
  ChainId(
    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): String

  """Contract fields"""
  Contract: Tron_Transaction_Fields_Contract

  """Transaction fields"""
  Transaction: Tron_Transaction_Fields_Transaction

  """Witness fields"""
  Witness: Tron_Transaction_Fields_Witness

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """Side2 argument"""
    side2: Tron_Transaction_StringFields!

    """Intersect with array"""
    intersectWith: [String!]

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: Tron_Transaction_StringFields!
  ): [String]

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: Tron_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: Tron_Transaction_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: Tron_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Tron_Transaction_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Tron_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [Tron_Transaction_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """First argument for Covariance between two arguments"""
    of: Tron_Transaction_NumFields

    """Second argument for Covariance between two arguments"""
    with: Tron_Transaction_NumFields
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Tron_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Tron_Transaction_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Tron_Transaction_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Tron_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: Tron_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: Tron_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: Tron_Transaction_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: Tron_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: Tron_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """Argument for nakamoto index"""
    of: Tron_Transaction_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: Tron_Transaction_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """First argument for Rank correlation coefficient between two arguments"""
    of: Tron_Transaction_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: Tron_Transaction_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: Tron_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Argument for Standard deviation of the values"""
    of: Tron_Transaction_NumFields!
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: Tron_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: Tron_Transaction_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Tron_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Tron_Transaction_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [Tron_Transaction_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum Tron_Transaction_EnumFields {
  Block_Number
  Contract_Address
  Transaction_FeePayer
  Transaction_Time
  Transaction_Expiration
  Block_Date
  Contract_InternalTransactionsCount
  Block_Version
  Contract_Type
  Block_Time
  Block_ParentNumber
  Transaction_Data
  Transaction_Result_Success
  Witness_Id
  Block_TxTrieRoot
  Transaction_Receipt_EnergyPenaltyTotal
  Contract_TypeUrl
  Contract_ArgumentsCount
  Transaction_FeeLimit
  Block_TransactionsCount
  Transaction_Signatures
  Block_ParentHash
  Block_Hash
  Transaction_Receipt_OriginEnergyUsage
  Transaction_FeeLimitInUSD
  Contract_LogsCount
  Transaction_Result_Message
  Block_AccountStateRoot
  Transaction_Receipt_EnergyFee
  Contract_ExecutionResultsCount
  Transaction_Receipt_NetUsage
  Transaction_Receipt_NetFee
  ChainId
  Transaction_FeeInUSD
  Transaction_Hash
  Transaction_Fee
  Transaction_Receipt_EnergyUsageTotal
  Witness_Signature
  Transaction_Timestamp
  Transaction_Result_Status
  Transaction_Index
  Witness_Address
  Transaction_Receipt_NetFeeInUSD
  Transaction_Receipt_Result
}

"""Block fields"""
type Tron_Transaction_Fields_Block {
  """AccountStateRoot value"""
  AccountStateRoot(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields
  ): String

  """Date value"""
  Date(
    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Number value"""
  Number(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentNumber value"""
  ParentNumber(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Time value"""
  Time(
    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields
  ): DateTime

  """TransactionsCount value"""
  TransactionsCount(
    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): Int

  """TxTrieRoot value"""
  TxTrieRoot(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Version value"""
  Version(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Contract fields"""
type Tron_Transaction_Fields_Contract {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ArgumentsCount value"""
  ArgumentsCount(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """ExecutionResultsCount value"""
  ExecutionResultsCount(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """InternalTransactionsCount value"""
  InternalTransactionsCount(
    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields
  ): Int

  """LogsCount value"""
  LogsCount(
    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields
  ): Int

  """Type value"""
  Type(
    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields
  ): String

  """TypeUrl value"""
  TypeUrl(
    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields
  ): String
}

"""Transaction fields"""
type Tron_Transaction_Fields_Transaction {
  """Data value"""
  Data(
    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields
  ): String

  """Expiration value"""
  Expiration(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields
  ): DateTime

  """Fee value"""
  Fee(
    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields
  ): String

  """FeeLimit value"""
  FeeLimit(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeLimitInUSD value"""
  FeeLimitInUSD(
    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): String

  """FeePayer value"""
  FeePayer(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Hash value"""
  Hash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Receipt fields"""
  Receipt: Tron_Transaction_Fields_Transaction_Receipt

  """Result fields"""
  Result: Tron_Transaction_Fields_Transaction_Result

  """Signatures value"""
  Signatures(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_Transaction_Fields_Transaction_Signatures_Select_Transaction_Signatures
  ): [String]

  """Time value"""
  Time(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields
  ): DateTime

  """Timestamp value"""
  Timestamp(
    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime
  ): DateTime
}

"""Receipt fields"""
type Tron_Transaction_Fields_Transaction_Receipt {
  """EnergyFee value"""
  EnergyFee(
    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): String

  """EnergyPenaltyTotal value"""
  EnergyPenaltyTotal(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """EnergyUsageTotal value"""
  EnergyUsageTotal(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """NetFee value"""
  NetFee(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """NetFeeInUSD value"""
  NetFeeInUSD(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """NetUsage value"""
  NetUsage(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """OriginEnergyUsage value"""
  OriginEnergyUsage(
    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields
  ): String

  """Result value"""
  Result(
    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter
  ): String
}

"""Result fields"""
type Tron_Transaction_Fields_Transaction_Result {
  """Message value"""
  Message(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Status value"""
  Status(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields
  ): Boolean
}

"""Array of Transaction_Signatures includes or excludes provided value"""
input Tron_Transaction_Fields_Transaction_Signatures_Select_Transaction_Signatures {
  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]
}

"""Witness fields"""
type Tron_Transaction_Fields_Witness {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Id value"""
  Id(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Tron_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

input Tron_Transaction_Filter {
  """Select by Witness"""
  Witness: Tron_Transaction_Input_Witness_InputType

  """Select by Contract"""
  Contract: Tron_Transaction_Input_Contract_InputType

  """String value"""
  ChainId: OLAP_String

  """Any combination ( as OR ) of supplied conditions"""
  any: [Tron_Transaction_FilterAny!]

  """Select by Block"""
  Block: Tron_Transaction_Input_Block_InputType

  """Select by Transaction"""
  Transaction: Tron_Transaction_Input_Transaction_InputType
}

input Tron_Transaction_FilterAny {
  """String value"""
  ChainId: OLAP_String

  """Select by Block"""
  Block: Tron_Transaction_Input_Block_InputType

  """Select by Transaction"""
  Transaction: Tron_Transaction_Input_Transaction_InputType

  """Select by Witness"""
  Witness: Tron_Transaction_Input_Witness_InputType

  """Select by Contract"""
  Contract: Tron_Transaction_Input_Contract_InputType
}

"""Select by Block"""
input Tron_Transaction_Input_Block_InputType {
  Hash: OLAP_String
  Version: OLAP_Integer
  TransactionsCount: OLAP_Integer
  Time: OLAP_DateTime
  ParentHash: OLAP_String
  Number: OLAP_BigInteger
  ParentNumber: OLAP_BigInteger
  Date: OLAP_Date
  AccountStateRoot: OLAP_String
  TxTrieRoot: OLAP_String
}

"""Select by Contract"""
input Tron_Transaction_Input_Contract_InputType {
  TypeUrl: OLAP_String
  Type: OLAP_String
  ExecutionResultsCount: OLAP_Integer
  ArgumentsCount: OLAP_Integer
  InternalTransactionsCount: OLAP_Integer
  LogsCount: OLAP_Integer
  Address: OLAP_String
}

"""Select by Transaction"""
input Tron_Transaction_Input_Transaction_InputType {
  FeeLimitInUSD: EVM_Amount_With_Decimals
  Hash: OLAP_String
  Signatures: Tron_Transaction_Input_Transaction_Signatures_Input_Transaction_Signatures
  FeeInUSD: EVM_Amount_With_Decimals
  FeeLimit: EVM_Amount_With_Decimals
  Receipt: Tron_Transaction_Input_Transaction_Receipt_InputType
  Data: OLAP_String
  Fee: EVM_Amount_With_Decimals
  FeePayer: OLAP_String
  Index: OLAP_Integer
  Expiration: OLAP_DateTime
  Timestamp: OLAP_DateTime
  Time: OLAP_DateTime
  Result: Tron_Transaction_Input_Transaction_Result_InputType
}

"""Select by Receipt"""
input Tron_Transaction_Input_Transaction_Receipt_InputType {
  NetUsage: OLAP_BigInteger
  NetFee: EVM_Amount_With_Decimals
  NetFeeInUSD: EVM_Amount_With_Decimals
  Result: OLAP_String
  EnergyFee: OLAP_BigInteger
  EnergyUsageTotal: OLAP_BigInteger
  OriginEnergyUsage: OLAP_BigInteger
  EnergyPenaltyTotal: OLAP_BigInteger
}

"""Select by Result"""
input Tron_Transaction_Input_Transaction_Result_InputType {
  Status: OLAP_String
  Success: Boolean
  Message: OLAP_String
}

"""Array of Transaction_Signatures includes or excludes provided value"""
input Tron_Transaction_Input_Transaction_Signatures_Input_Transaction_Signatures {
  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]
}

"""Select by Witness"""
input Tron_Transaction_Input_Witness_InputType {
  Address: OLAP_String
  Signature: OLAP_String
  Id: OLAP_BigInteger
}

"""Limit definition"""
input Tron_Transaction_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""LimitBy definition"""
input Tron_Transaction_LimitBy {
  """Limit by specific field"""
  by: [Tron_Transaction_EnumFields!]

  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Listed names of numeric fields in a cube"""
enum Tron_Transaction_NumFields {
  Block_Version
  Transaction_Receipt_EnergyUsageTotal
  Transaction_Receipt_EnergyPenaltyTotal
  Transaction_Receipt_EnergyFee
  Transaction_Index
  Transaction_Receipt_NetFeeInUSD
  Block_ParentNumber
  Transaction_Fee
  Contract_InternalTransactionsCount
  Transaction_Receipt_NetFee
  Transaction_Receipt_OriginEnergyUsage
  Transaction_FeeInUSD
  Contract_LogsCount
  Contract_ExecutionResultsCount
  Block_TransactionsCount
  Transaction_FeeLimitInUSD
  Block_Number
  Contract_ArgumentsCount
  Witness_Id
  Transaction_Receipt_NetUsage
  Transaction_FeeLimit
}

"""Order by"""
input Tron_Transaction_Ordering {
  """Select a field to sort ascending"""
  ascending: Tron_Transaction_EnumFields

  """Select a field to sort descending"""
  descending: Tron_Transaction_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum Tron_Transaction_StringFields {
  Block_AccountStateRoot
  Transaction_Receipt_OriginEnergyUsage
  Transaction_FeeInUSD
  Transaction_Result_Message
  Transaction_Receipt_NetFee
  Block_ParentHash
  Transaction_Receipt_Result
  Transaction_Receipt_EnergyFee
  Witness_Signature
  Transaction_Receipt_EnergyUsageTotal
  Contract_Type
  Transaction_Receipt_NetUsage
  Contract_Address
  Transaction_FeeLimit
  Transaction_Fee
  Transaction_FeeLimitInUSD
  Transaction_FeePayer
  Transaction_Data
  Transaction_Hash
  Transaction_Result_Status
  Witness_Address
  Transaction_Receipt_NetFeeInUSD
  ChainId
  Block_Hash
  Witness_Id
  Block_Date
  Block_Number
  Block_ParentNumber
  Block_TxTrieRoot
  Transaction_Receipt_EnergyPenaltyTotal
  Contract_TypeUrl
}

"""Listed names of comparable fields in a cube"""
enum Tron_Transfer_CompareFields {
  Transfer_Currency_Delegated
  Block_ParentNumber
  Call_SelfDestruct
  Transfer_LogIndex
  Transaction_Receipt_EnergyFee
  Transaction_Expiration
  Call_Gas
  Transfer_CallIndex
  Transaction_Timestamp
  Transaction_Fee
  Transfer_Currency_Native
  Transfer_TransactionIndex
  Call_ValueInUSD
  Transfer_Id
  Transaction_Result_Success
  Transaction_Receipt_NetFeeInUSD
  Transaction_FeeLimitInUSD
  TransactionStatus_Success
  Transaction_Receipt_NetFee
  Block_Number
  Call_Index
  Transfer_Index
  Call_Success
  Call_Signature_Parsed
  Block_Time
  Log_Index
  Call_GasUsed
  Witness_Id
  Log_Signature_Type
  Transaction_Time
  Transfer_AmountInUSD
  Call_Create
  Transaction_FeeInUSD
  Log_LogAfterCallIndex
  Call_Signature_Type
  Transfer_Currency_HasURI
  Transaction_Receipt_EnergyUsageTotal
  Call_Value
  Call_Reverted
  Log_Signature_Parsed
  Block_TransactionsCount
  Call_Delegated
  Block_Date
  Call_InternalCalls
  Transaction_FeeLimit
  Transaction_Index
  Transfer_Currency_Fungible
  Transaction_Receipt_NetUsage
  Transfer_Amount
  Transaction_Receipt_OriginEnergyUsage
  Block_Version
  Call_CallerIndex
  Transaction_Receipt_EnergyPenaltyTotal
  Transfer_Currency_Decimals
  Transfer_Success
}

"""Transfers of tokens and native currency in Tron Blockchain"""
type Tron_Transfer_Cube {
  """Block fields"""
  Block: Tron_Transfer_Fields_Block

  """Call fields"""
  Call: Tron_Transfer_Fields_Call

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Contract fields"""
  Contract: Tron_Transfer_Fields_Contract

  """Log fields"""
  Log: Tron_Transfer_Fields_Log

  """LogHeader fields"""
  LogHeader: Tron_Transfer_Fields_LogHeader

  """Transaction fields"""
  Transaction: Tron_Transfer_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: Tron_Transfer_Fields_TransactionStatus

  """Transfer fields"""
  Transfer: Tron_Transfer_Fields_Transfer

  """Witness fields"""
  Witness: Tron_Transfer_Fields_Witness

  """
  Calculate intersect of the side1 and side2 argument, related to the
  intersectWith argument. Result is an array of uniq values of the side1 OR
  side2 argument, that have relation with all of intersectWith
  """
  array_intersect(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_ArrayOf_String

    """Side1 argument"""
    side1: Tron_Transfer_StringFields!

    """Side2 argument"""
    side2: Tron_Transfer_StringFields!

    """Intersect with array"""
    intersectWith: [String!]
  ): [String]

  """Average of the values"""
  average(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: Tron_Transfer_NumFields!
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: Tron_Transfer_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: Tron_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: Tron_Transfer_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: Tron_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [Tron_Transfer_EnumFields!]

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: Tron_Transfer_NumFields

    """Second argument for Covariance between two arguments"""
    with: Tron_Transfer_NumFields
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """First argument for Cramér's phi coefficient between two arguments"""
    of: Tron_Transfer_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: Tron_Transfer_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: Tron_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: Tron_Transfer_NumFields
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: Tron_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Argument for Entropy for a set of values"""
    of: Tron_Transfer_NumFields!
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: Tron_Transfer_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: Tron_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter
  ): Float

  """Median for a set of values"""
  median(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Argument for Median for a set of values"""
    of: Tron_Transfer_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio
  (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: Tron_Transfer_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: Tron_Transfer_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0
    to 1. We recommend using a level value in the range of [0.01, 0.99]. Default
    value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: Tron_Transfer_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: Tron_Transfer_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """Argument for Skew for a set of values"""
    of: Tron_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: Tron_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: Tron_Transfer_NumFields!
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: Tron_Transfer_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: Tron_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: Tron_Transfer_NumFields
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [Tron_Transfer_EnumFields!]!

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Listed names of fields in a cube"""
enum Tron_Transfer_EnumFields {
  Transfer_Currency_HasURI
  Transaction_Timestamp
  Call_Success
  Block_Number
  Transfer_Index
  ChainId
  Call_CallerIndex
  Transaction_Expiration
  Call_GasUsed
  Witness_Address
  Call_Error
  Log_Signature_Abi
  Transaction_FeeLimitInUSD
  Transaction_Receipt_EnergyFee
  Call_InternalCalls
  Transaction_Data
  Call_Reverted
  Call_Signature_Name
  Transfer_LogIndex
  TransactionStatus_FaultError
  Call_Signature_Type
  Call_Signature_Signature
  Transaction_FeePayer
  Transaction_Receipt_EnergyPenaltyTotal
  Transfer_Id
  Transaction_Index
  Witness_Signature
  Log_Signature_SignatureHash
  Log_LogAfterCallIndex
  Call_To
  Transfer_Currency_Fungible
  Transfer_Currency_DelegatedTo
  TransactionStatus_Success
  Transaction_Receipt_EnergyUsageTotal
  Block_ParentNumber
  Contract_Address
  Transaction_FeeLimit
  Transaction_Signatures
  Transfer_Currency_Symbol
  Call_ValueInUSD
  Block_Hash
  Call_Value
  Call_Signature_Abi
  Call_Delegated
  Transfer_Currency_Name
  Transaction_Receipt_OriginEnergyUsage
  Transfer_Sender
  Block_ParentHash
  LogHeader_Data
  Call_Index
  Transaction_Receipt_Result
  Transaction_Result_Status
  Call_Signature_SignatureHash
  Transfer_Amount
  Contract_TypeUrl
  Block_Version
  Transfer_URI
  Log_Signature_Type
  Transaction_Hash
  Call_SelfDestruct
  Block_TxTrieRoot
  Transfer_Currency_Delegated
  Call_From
  Transfer_Currency_AssetId
  Transaction_Fee
  Transfer_Currency_Native
  Log_Signature_Signature
  LogHeader_Address
  Transaction_Receipt_NetUsage
  Transfer_AmountInUSD
  Call_Signature_Parsed
  Transfer_Data
  Transaction_Time
  Block_TransactionsCount
  Transfer_Success
  Log_Index
  Transfer_Currency_SmartContract
  Log_SmartContract
  Block_Time
  Transaction_Result_Success
  Transfer_Currency_ProtocolName
  Transfer_Currency_Decimals
  Call_Gas
  Transfer_TransactionIndex
  Transaction_Result_Message
  Log_Signature_Parsed
  Transaction_FeeInUSD
  Transfer_CallIndex
  Contract_Type
  TransactionStatus_EndError
  Block_AccountStateRoot
  Block_Date
  Witness_Id
  Call_CallPath
  Log_Signature_Name
  Call_Create
  Transaction_Receipt_NetFeeInUSD
  Transfer_Receiver
  Transaction_Receipt_NetFee
}

"""Block fields"""
type Tron_Transfer_Fields_Block {
  """AccountStateRoot value"""
  AccountStateRoot(
    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentNumber value"""
  ParentNumber(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Time value"""
  Time(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields
  ): DateTime

  """TransactionsCount value"""
  TransactionsCount(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """TxTrieRoot value"""
  TxTrieRoot(
    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter
  ): String

  """Version value"""
  Version(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Call fields"""
type Tron_Transfer_Fields_Call {
  """CallPath value"""
  CallPath(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_Transfer_Fields_Call_CallPath_Select_Call_CallPath
  ): [Int]

  """CallerIndex value"""
  CallerIndex(
    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter
  ): Int

  """Create value"""
  Create(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Delegated value"""
  Delegated(
    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields
  ): Boolean

  """Error value"""
  Error(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """InternalCalls value"""
  InternalCalls(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Reverted value"""
  Reverted(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """SelfDestruct value"""
  SelfDestruct(
    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter
  ): Boolean

  """Signature fields"""
  Signature: Tron_Transfer_Fields_Call_Signature

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """To value"""
  To(
    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter
  ): String

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """ValueInUSD value"""
  ValueInUSD(
    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter
  ): String
}

"""Array of Call_CallPath includes or excludes provided value"""
input Tron_Transfer_Fields_Call_CallPath_Select_Call_CallPath {
  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]
}

"""Signature fields"""
type Tron_Transfer_Fields_Call_Signature {
  """Abi value"""
  Abi(
    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields
  ): String

  """Name value"""
  Name(
    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter
  ): String

  """SignatureHash value"""
  SignatureHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Contract fields"""
type Tron_Transfer_Fields_Contract {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """TypeUrl value"""
  TypeUrl(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Log fields"""
type Tron_Transfer_Fields_Log {
  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """LogAfterCallIndex value"""
  LogAfterCallIndex(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields
  ): Int

  """Signature fields"""
  Signature: Tron_Transfer_Fields_Log_Signature

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Signature fields"""
type Tron_Transfer_Fields_Log_Signature {
  """Abi value"""
  Abi(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields
  ): Boolean

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields
  ): Boolean
}

"""LogHeader fields"""
type Tron_Transfer_Fields_LogHeader {
  """Address value"""
  Address(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields
  ): String

  """Data value"""
  Data(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Transaction fields"""
type Tron_Transfer_Fields_Transaction {
  """Data value"""
  Data(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Expiration value"""
  Expiration(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """Fee value"""
  Fee(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeInUSD value"""
  FeeInUSD(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeeLimit value"""
  FeeLimit(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields
  ): String

  """FeeLimitInUSD value"""
  FeeLimitInUSD(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """FeePayer value"""
  FeePayer(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Receipt fields"""
  Receipt: Tron_Transfer_Fields_Transaction_Receipt

  """Result fields"""
  Result: Tron_Transfer_Fields_Transaction_Result

  """Signatures value"""
  Signatures(
    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Tron_Transfer_Fields_Transaction_Signatures_Select_Transaction_Signatures

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter
  ): [String]

  """Time value"""
  Time(
    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter
  ): DateTime

  """Timestamp value"""
  Timestamp(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime
}

"""Receipt fields"""
type Tron_Transfer_Fields_Transaction_Receipt {
  """EnergyFee value"""
  EnergyFee(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """EnergyPenaltyTotal value"""
  EnergyPenaltyTotal(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """EnergyUsageTotal value"""
  EnergyUsageTotal(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """NetFee value"""
  NetFee(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """NetFeeInUSD value"""
  NetFeeInUSD(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """NetUsage value"""
  NetUsage(
    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields
  ): String

  """OriginEnergyUsage value"""
  OriginEnergyUsage(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Result value"""
  Result(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Result fields"""
type Tron_Transfer_Fields_Transaction_Result {
  """Message value"""
  Message(
    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter
  ): String

  """Status value"""
  Status(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Array of Transaction_Signatures includes or excludes provided value"""
input Tron_Transfer_Fields_Transaction_Signatures_Select_Transaction_Signatures {
  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer
}

"""TransactionStatus fields"""
type Tron_Transfer_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """FaultError value"""
  FaultError(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields
  ): String

  """Success value"""
  Success(
    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields
  ): Boolean
}

"""Transfer fields"""
type Tron_Transfer_Fields_Transfer {
  """Amount value"""
  Amount(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """AmountInUSD value"""
  AmountInUSD(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """CallIndex value"""
  CallIndex(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Currency fields"""
  Currency: Tron_Transfer_Fields_Transfer_Currency

  """Data value"""
  Data(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Id value"""
  Id(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Index value"""
  Index(
    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter
  ): Int

  """LogIndex value"""
  LogIndex(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields
  ): String

  """Receiver value"""
  Receiver(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields
  ): String

  """Sender value"""
  Sender(
    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """TransactionIndex value"""
  TransactionIndex(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """URI value"""
  URI(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Currency fields"""
type Tron_Transfer_Fields_Transfer_Currency {
  """AssetId value"""
  AssetId(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Native value"""
  Native(
    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields
  ): Boolean

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Witness fields"""
type Tron_Transfer_Fields_Witness {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Id value"""
  Id(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: Tron_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: Tron_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: Tron_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

input Tron_Transfer_Filter {
  """Select by Contract"""
  Contract: Tron_Transfer_Input_Contract_InputType

  """Select by Call"""
  Call: Tron_Transfer_Input_Call_InputType

  """Select by Transaction"""
  Transaction: Tron_Transfer_Input_Transaction_InputType

  """Select by LogHeader"""
  LogHeader: Tron_Transfer_Input_LogHeader_InputType

  """Select by Transfer"""
  Transfer: Tron_Transfer_Input_Transfer_InputType

  """String value"""
  ChainId: OLAP_String

  """Any combination ( as OR ) of supplied conditions"""
  any: [Tron_Transfer_FilterAny!]

  """Select by TransactionStatus"""
  TransactionStatus: Tron_Transfer_Input_TransactionStatus_InputType

  """Select by Block"""
  Block: Tron_Transfer_Input_Block_InputType

  """Select by Log"""
  Log: Tron_Transfer_Input_Log_InputType

  """Select by Witness"""
  Witness: Tron_Transfer_Input_Witness_InputType
}

input Tron_Transfer_FilterAny {
  """Select by Block"""
  Block: Tron_Transfer_Input_Block_InputType

  """Select by Log"""
  Log: Tron_Transfer_Input_Log_InputType

  """Select by Contract"""
  Contract: Tron_Transfer_Input_Contract_InputType

  """String value"""
  ChainId: OLAP_String

  """Select by TransactionStatus"""
  TransactionStatus: Tron_Transfer_Input_TransactionStatus_InputType

  """Select by LogHeader"""
  LogHeader: Tron_Transfer_Input_LogHeader_InputType

  """Select by Transfer"""
  Transfer: Tron_Transfer_Input_Transfer_InputType

  """Select by Call"""
  Call: Tron_Transfer_Input_Call_InputType

  """Select by Transaction"""
  Transaction: Tron_Transfer_Input_Transaction_InputType

  """Select by Witness"""
  Witness: Tron_Transfer_Input_Witness_InputType
}

"""Select by Block"""
input Tron_Transfer_Input_Block_InputType {
  AccountStateRoot: OLAP_String
  TransactionsCount: OLAP_Integer
  ParentHash: OLAP_String
  Number: OLAP_BigInteger
  TxTrieRoot: OLAP_String
  Hash: OLAP_String
  Time: OLAP_DateTime
  Version: OLAP_Integer
  Date: OLAP_Date
  ParentNumber: OLAP_BigInteger
}

"""Array of Call_CallPath includes or excludes provided value"""
input Tron_Transfer_Input_Call_CallPath_Input_Call_CallPath {
  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]
}

"""Select by Call"""
input Tron_Transfer_Input_Call_InputType {
  Reverted: Boolean
  Value: EVM_Amount_With_Decimals
  CallerIndex: OLAP_Integer
  To: OLAP_String
  Signature: Tron_Transfer_Input_Call_Signature_InputType
  InternalCalls: OLAP_Integer
  Error: OLAP_String
  Index: OLAP_Integer
  Delegated: Boolean
  ValueInUSD: EVM_Amount_With_Decimals
  SelfDestruct: Boolean
  Create: Boolean
  Gas: OLAP_BigInteger
  From: OLAP_String
  CallPath: Tron_Transfer_Input_Call_CallPath_Input_Call_CallPath
  GasUsed: OLAP_BigInteger
  Success: Boolean
}

"""Select by Signature"""
input Tron_Transfer_Input_Call_Signature_InputType {
  Type: Boolean
  Parsed: Boolean
  Name: OLAP_String
  Abi: OLAP_String
  Signature: OLAP_String
  SignatureHash: OLAP_String
}

"""Select by Contract"""
input Tron_Transfer_Input_Contract_InputType {
  TypeUrl: OLAP_String
  Address: OLAP_String
  Type: OLAP_String
}

"""Select by Log"""
input Tron_Transfer_Input_Log_InputType {
  LogAfterCallIndex: OLAP_Integer
  SmartContract: OLAP_String
  Signature: Tron_Transfer_Input_Log_Signature_InputType
  Index: OLAP_Integer
}

"""Select by Signature"""
input Tron_Transfer_Input_Log_Signature_InputType {
  SignatureHash: OLAP_String
  Name: OLAP_String
  Signature: OLAP_String
  Parsed: Boolean
  Type: Boolean
  Abi: OLAP_String
}

"""Select by LogHeader"""
input Tron_Transfer_Input_LogHeader_InputType {
  Address: OLAP_String
  Data: OLAP_String
}

"""Select by Transaction"""
input Tron_Transfer_Input_Transaction_InputType {
  Result: Tron_Transfer_Input_Transaction_Result_InputType
  Fee: EVM_Amount_With_Decimals
  Receipt: Tron_Transfer_Input_Transaction_Receipt_InputType
  Timestamp: OLAP_DateTime
  Expiration: OLAP_DateTime
  Data: OLAP_String
  Time: OLAP_DateTime
  FeeInUSD: EVM_Amount_With_Decimals
  Signatures: Tron_Transfer_Input_Transaction_Signatures_Input_Transaction_Signatures
  FeeLimit: EVM_Amount_With_Decimals
  FeePayer: OLAP_String
  Hash: OLAP_String
  Index: OLAP_Integer
  FeeLimitInUSD: EVM_Amount_With_Decimals
}

"""Select by Receipt"""
input Tron_Transfer_Input_Transaction_Receipt_InputType {
  EnergyFee: OLAP_BigInteger
  EnergyUsageTotal: OLAP_BigInteger
  OriginEnergyUsage: OLAP_BigInteger
  NetFee: EVM_Amount_With_Decimals
  NetFeeInUSD: EVM_Amount_With_Decimals
  EnergyPenaltyTotal: OLAP_BigInteger
  NetUsage: OLAP_BigInteger
  Result: OLAP_String
}

"""Select by Result"""
input Tron_Transfer_Input_Transaction_Result_InputType {
  Message: OLAP_String
  Success: Boolean
  Status: OLAP_String
}

"""Array of Transaction_Signatures includes or excludes provided value"""
input Tron_Transfer_Input_Transaction_Signatures_Input_Transaction_Signatures {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]
}

"""Select by TransactionStatus"""
input Tron_Transfer_Input_TransactionStatus_InputType {
  Success: Boolean
  FaultError: OLAP_String
  EndError: OLAP_String
}

"""Select by Currency"""
input Tron_Transfer_Input_Transfer_Currency_InputType {
  Native: Boolean
  AssetId: OLAP_String
  Fungible: Boolean
  SmartContract: OLAP_String
  HasURI: Boolean
  Delegated: Boolean
  Symbol: OLAP_String
  Name: OLAP_String
  DelegatedTo: OLAP_String
  ProtocolName: OLAP_String
  Decimals: OLAP_Integer
}

"""Select by Transfer"""
input Tron_Transfer_Input_Transfer_InputType {
  CallIndex: OLAP_BigInteger
  Id: OLAP_BigInteger
  Data: OLAP_String
  AmountInUSD: EVM_Amount_With_Decimals
  Currency: Tron_Transfer_Input_Transfer_Currency_InputType
  TransactionIndex: OLAP_BigInteger
  Receiver: OLAP_String
  Amount: EVM_Amount_With_Decimals
  Success: Boolean
  Index: OLAP_Integer
  URI: OLAP_String
  Sender: OLAP_String
  LogIndex: OLAP_BigInteger
}

"""Select by Witness"""
input Tron_Transfer_Input_Witness_InputType {
  Signature: OLAP_String
  Id: OLAP_BigInteger
  Address: OLAP_String
}

"""Limit definition"""
input Tron_Transfer_Limit {
  """Offset of results"""
  offset: Int = 0

  """Max count in results"""
  count: Int = 0
}

"""LimitBy definition"""
input Tron_Transfer_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [Tron_Transfer_EnumFields!]
}

"""Listed names of numeric fields in a cube"""
enum Tron_Transfer_NumFields {
  Call_InternalCalls
  Transaction_Receipt_EnergyUsageTotal
  Transfer_Currency_Decimals
  Transfer_Id
  Call_ValueInUSD
  Transaction_Receipt_NetUsage
  Call_Index
  Call_GasUsed
  Block_ParentNumber
  Call_Gas
  Transaction_Index
  Transaction_Receipt_OriginEnergyUsage
  Transaction_FeeLimitInUSD
  Transaction_Receipt_EnergyPenaltyTotal
  Transaction_Receipt_NetFee
  Log_LogAfterCallIndex
  Transaction_Fee
  Transfer_Amount
  Transfer_CallIndex
  Transaction_FeeInUSD
  Log_Index
  Call_Value
  Witness_Id
  Transfer_TransactionIndex
  Block_TransactionsCount
  Transfer_AmountInUSD
  Transaction_Receipt_NetFeeInUSD
  Block_Number
  Transfer_Index
  Transaction_Receipt_EnergyFee
  Block_Version
  Call_CallerIndex
  Transfer_LogIndex
  Transaction_FeeLimit
}

"""Order by"""
input Tron_Transfer_Ordering {
  """Select a field to sort ascending"""
  ascending: Tron_Transfer_EnumFields

  """Select a field to sort descending"""
  descending: Tron_Transfer_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Listed names of string fields in a cube"""
enum Tron_Transfer_StringFields {
  Transfer_Currency_DelegatedTo
  Transfer_AmountInUSD
  LogHeader_Data
  Contract_TypeUrl
  ChainId
  Witness_Signature
  Transfer_Currency_AssetId
  Block_TxTrieRoot
  Transaction_Result_Status
  Witness_Id
  Witness_Address
  Transfer_LogIndex
  Transfer_Receiver
  Transfer_Currency_Name
  Call_GasUsed
  Transaction_Data
  Call_Signature_Abi
  Block_Hash
  Transfer_Currency_SmartContract
  Transaction_Receipt_NetUsage
  Transfer_Amount
  LogHeader_Address
  Transaction_Receipt_EnergyFee
  Transfer_TransactionIndex
  Transaction_Receipt_EnergyPenaltyTotal
  Transfer_Currency_Symbol
  Transaction_FeePayer
  Transaction_Result_Message
  Block_AccountStateRoot
  Block_Date
  Call_ValueInUSD
  Log_Signature_SignatureHash
  Log_SmartContract
  TransactionStatus_EndError
  Log_Signature_Signature
  Block_ParentHash
  TransactionStatus_FaultError
  Transfer_CallIndex
  Transfer_Currency_ProtocolName
  Log_Signature_Abi
  Transaction_Receipt_Result
  Transaction_Hash
  Call_Gas
  Transaction_FeeInUSD
  Call_Signature_SignatureHash
  Log_Signature_Name
  Block_ParentNumber
  Contract_Address
  Call_From
  Call_To
  Transaction_FeeLimit
  Transfer_URI
  Transaction_FeeLimitInUSD
  Call_Value
  Contract_Type
  Call_Signature_Signature
  Transaction_Receipt_OriginEnergyUsage
  Block_Number
  Transaction_Fee
  Transaction_Receipt_EnergyUsageTotal
  Call_Signature_Name
  Transaction_Receipt_NetFee
  Transaction_Receipt_NetFeeInUSD
  Transfer_Data
  Transfer_Sender
  Call_Error
  Transfer_Id
}

